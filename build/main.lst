ARM GAS  /tmp/ccG1uW9V.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB144:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "mainLoop.h"
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/ccG1uW9V.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  44:Core/Src/main.c **** ADC_HandleTypeDef hadc2;
  45:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  46:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc2;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  49:Core/Src/main.c **** CAN_HandleTypeDef hcan2;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** DAC_HandleTypeDef hdac;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  54:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  57:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  58:Core/Src/main.c **** TIM_HandleTypeDef htim5;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** UART_HandleTypeDef huart2;
  61:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_tx;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE BEGIN PV */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PV */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  68:Core/Src/main.c **** void SystemClock_Config(void);
  69:Core/Src/main.c **** static void MX_GPIO_Init(void);
  70:Core/Src/main.c **** static void MX_DMA_Init(void);
  71:Core/Src/main.c **** static void MX_SPI1_Init(void);
  72:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  73:Core/Src/main.c **** static void MX_DAC_Init(void);
  74:Core/Src/main.c **** static void MX_TIM4_Init(void);
  75:Core/Src/main.c **** static void MX_TIM1_Init(void);
  76:Core/Src/main.c **** static void MX_TIM5_Init(void);
  77:Core/Src/main.c **** static void MX_SPI2_Init(void);
  78:Core/Src/main.c **** static void MX_ADC1_Init(void);
  79:Core/Src/main.c **** static void MX_ADC2_Init(void);
  80:Core/Src/main.c **** static void MX_CAN1_Init(void);
  81:Core/Src/main.c **** static void MX_CAN2_Init(void);
  82:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /* USER CODE END PFP */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  87:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccG1uW9V.s 			page 3


  89:Core/Src/main.c **** /* USER CODE END 0 */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** /**
  92:Core/Src/main.c ****   * @brief  The application entry point.
  93:Core/Src/main.c ****   * @retval int
  94:Core/Src/main.c ****   */
  95:Core/Src/main.c **** int main(void)
  96:Core/Src/main.c **** {
  97:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END 1 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 104:Core/Src/main.c ****   HAL_Init();
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END Init */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Configure the system clock */
 111:Core/Src/main.c ****   SystemClock_Config();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END SysInit */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Initialize all configured peripherals */
 118:Core/Src/main.c ****   MX_GPIO_Init();
 119:Core/Src/main.c ****   MX_DMA_Init();
 120:Core/Src/main.c ****   MX_SPI1_Init();
 121:Core/Src/main.c ****   MX_USART2_UART_Init();
 122:Core/Src/main.c ****   MX_DAC_Init();
 123:Core/Src/main.c ****   MX_TIM4_Init();
 124:Core/Src/main.c ****   MX_TIM1_Init();
 125:Core/Src/main.c ****   MX_TIM5_Init();
 126:Core/Src/main.c ****   MX_SPI2_Init();
 127:Core/Src/main.c ****   MX_ADC1_Init();
 128:Core/Src/main.c ****   MX_ADC2_Init();
 129:Core/Src/main.c ****   MX_CAN1_Init();
 130:Core/Src/main.c ****   MX_CAN2_Init();
 131:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE END 2 */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Infinite loop */
 136:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 137:Core/Src/main.c ****   while (1)
 138:Core/Src/main.c ****   {
 139:Core/Src/main.c ****     /* USER CODE END WHILE */
 140:Core/Src/main.c ****     mainLoop1();
 141:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c ****   /* USER CODE END 3 */
 144:Core/Src/main.c **** }
 145:Core/Src/main.c **** 
ARM GAS  /tmp/ccG1uW9V.s 			page 4


 146:Core/Src/main.c **** /**
 147:Core/Src/main.c ****   * @brief System Clock Configuration
 148:Core/Src/main.c ****   * @retval None
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c **** void SystemClock_Config(void)
 151:Core/Src/main.c **** {
 152:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 153:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 156:Core/Src/main.c ****   */
 157:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 158:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 159:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 160:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 161:Core/Src/main.c ****   */
 162:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 171:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 178:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 179:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 180:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****     Error_Handler();
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c ****   HAL_RCC_MCOConfig(RCC_MCO1, RCC_MCO1SOURCE_HSI, RCC_MCODIV_1);
 189:Core/Src/main.c **** }
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** /**
 192:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 193:Core/Src/main.c ****   * @param None
 194:Core/Src/main.c ****   * @retval None
 195:Core/Src/main.c ****   */
 196:Core/Src/main.c **** static void MX_ADC1_Init(void)
 197:Core/Src/main.c **** {
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 202:Core/Src/main.c **** 
ARM GAS  /tmp/ccG1uW9V.s 			page 5


 203:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 208:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 209:Core/Src/main.c ****   */
 210:Core/Src/main.c ****   hadc1.Instance = ADC1;
 211:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV8;
 212:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 213:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 214:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 215:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 216:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 217:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 218:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 219:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 220:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 221:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 222:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 223:Core/Src/main.c ****   {
 224:Core/Src/main.c ****     Error_Handler();
 225:Core/Src/main.c ****   }
 226:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 227:Core/Src/main.c ****   */
 228:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 229:Core/Src/main.c ****   sConfig.Rank = 1;
 230:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 231:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 232:Core/Src/main.c ****   {
 233:Core/Src/main.c ****     Error_Handler();
 234:Core/Src/main.c ****   }
 235:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** }
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** /**
 242:Core/Src/main.c ****   * @brief ADC2 Initialization Function
 243:Core/Src/main.c ****   * @param None
 244:Core/Src/main.c ****   * @retval None
 245:Core/Src/main.c ****   */
 246:Core/Src/main.c **** static void MX_ADC2_Init(void)
 247:Core/Src/main.c **** {
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 0 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE END ADC2_Init 0 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 1 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE END ADC2_Init 1 */
 258:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 259:Core/Src/main.c ****   */
ARM GAS  /tmp/ccG1uW9V.s 			page 6


 260:Core/Src/main.c ****   hadc2.Instance = ADC2;
 261:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV8;
 262:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 263:Core/Src/main.c ****   hadc2.Init.ScanConvMode = DISABLE;
 264:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = ENABLE;
 265:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 266:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 267:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 268:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 269:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
 270:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 271:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 272:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****     Error_Handler();
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 277:Core/Src/main.c ****   */
 278:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 279:Core/Src/main.c ****   sConfig.Rank = 1;
 280:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 281:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 282:Core/Src/main.c ****   {
 283:Core/Src/main.c ****     Error_Handler();
 284:Core/Src/main.c ****   }
 285:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 2 */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* USER CODE END ADC2_Init 2 */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** }
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** /**
 292:Core/Src/main.c ****   * @brief CAN1 Initialization Function
 293:Core/Src/main.c ****   * @param None
 294:Core/Src/main.c ****   * @retval None
 295:Core/Src/main.c ****   */
 296:Core/Src/main.c **** static void MX_CAN1_Init(void)
 297:Core/Src/main.c **** {
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
 306:Core/Src/main.c ****   hcan1.Instance = CAN1;
 307:Core/Src/main.c ****   hcan1.Init.Prescaler = 3;
 308:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 309:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 310:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_13TQ;
 311:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 312:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 313:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 314:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 315:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 316:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
ARM GAS  /tmp/ccG1uW9V.s 			page 7


 317:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 318:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     Error_Handler();
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 325:Core/Src/main.c **** 
 326:Core/Src/main.c **** }
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** /**
 329:Core/Src/main.c ****   * @brief CAN2 Initialization Function
 330:Core/Src/main.c ****   * @param None
 331:Core/Src/main.c ****   * @retval None
 332:Core/Src/main.c ****   */
 333:Core/Src/main.c **** static void MX_CAN2_Init(void)
 334:Core/Src/main.c **** {
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 0 */
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****   /* USER CODE END CAN2_Init 0 */
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 1 */
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /* USER CODE END CAN2_Init 1 */
 343:Core/Src/main.c ****   hcan2.Instance = CAN2;
 344:Core/Src/main.c ****   hcan2.Init.Prescaler = 3;
 345:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 346:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 347:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_13TQ;
 348:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_2TQ;
 349:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 350:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
 351:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 352:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 353:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 354:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 355:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 356:Core/Src/main.c ****   {
 357:Core/Src/main.c ****     Error_Handler();
 358:Core/Src/main.c ****   }
 359:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 2 */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /* USER CODE END CAN2_Init 2 */
 362:Core/Src/main.c **** 
 363:Core/Src/main.c **** }
 364:Core/Src/main.c **** 
 365:Core/Src/main.c **** /**
 366:Core/Src/main.c ****   * @brief DAC Initialization Function
 367:Core/Src/main.c ****   * @param None
 368:Core/Src/main.c ****   * @retval None
 369:Core/Src/main.c ****   */
 370:Core/Src/main.c **** static void MX_DAC_Init(void)
 371:Core/Src/main.c **** {
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /* USER CODE BEGIN DAC_Init 0 */
ARM GAS  /tmp/ccG1uW9V.s 			page 8


 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /* USER CODE END DAC_Init 0 */
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   DAC_ChannelConfTypeDef sConfig = {0};
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /* USER CODE BEGIN DAC_Init 1 */
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   /* USER CODE END DAC_Init 1 */
 382:Core/Src/main.c ****   /** DAC Initialization
 383:Core/Src/main.c ****   */
 384:Core/Src/main.c ****   hdac.Instance = DAC;
 385:Core/Src/main.c ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 386:Core/Src/main.c ****   {
 387:Core/Src/main.c ****     Error_Handler();
 388:Core/Src/main.c ****   }
 389:Core/Src/main.c ****   /** DAC channel OUT1 config
 390:Core/Src/main.c ****   */
 391:Core/Src/main.c ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 392:Core/Src/main.c ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 393:Core/Src/main.c ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 394:Core/Src/main.c ****   {
 395:Core/Src/main.c ****     Error_Handler();
 396:Core/Src/main.c ****   }
 397:Core/Src/main.c ****   /* USER CODE BEGIN DAC_Init 2 */
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   /* USER CODE END DAC_Init 2 */
 400:Core/Src/main.c **** 
 401:Core/Src/main.c **** }
 402:Core/Src/main.c **** 
 403:Core/Src/main.c **** /**
 404:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 405:Core/Src/main.c ****   * @param None
 406:Core/Src/main.c ****   * @retval None
 407:Core/Src/main.c ****   */
 408:Core/Src/main.c **** static void MX_SPI1_Init(void)
 409:Core/Src/main.c **** {
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 412:Core/Src/main.c **** 
 413:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 418:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 419:Core/Src/main.c ****   hspi1.Instance = SPI1;
 420:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 421:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 422:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 423:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 424:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 425:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 426:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 427:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 428:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 429:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 430:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
ARM GAS  /tmp/ccG1uW9V.s 			page 9


 431:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 432:Core/Src/main.c ****   {
 433:Core/Src/main.c ****     Error_Handler();
 434:Core/Src/main.c ****   }
 435:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 436:Core/Src/main.c **** 
 437:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 438:Core/Src/main.c **** 
 439:Core/Src/main.c **** }
 440:Core/Src/main.c **** 
 441:Core/Src/main.c **** /**
 442:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 443:Core/Src/main.c ****   * @param None
 444:Core/Src/main.c ****   * @retval None
 445:Core/Src/main.c ****   */
 446:Core/Src/main.c **** static void MX_SPI2_Init(void)
 447:Core/Src/main.c **** {
 448:Core/Src/main.c **** 
 449:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 456:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 457:Core/Src/main.c ****   hspi2.Instance = SPI2;
 458:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 459:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_1LINE;
 460:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_16BIT;
 461:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 462:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 463:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 464:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 465:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 466:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 467:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 468:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 469:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 470:Core/Src/main.c ****   {
 471:Core/Src/main.c ****     Error_Handler();
 472:Core/Src/main.c ****   }
 473:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 476:Core/Src/main.c **** 
 477:Core/Src/main.c **** }
 478:Core/Src/main.c **** 
 479:Core/Src/main.c **** /**
 480:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 481:Core/Src/main.c ****   * @param None
 482:Core/Src/main.c ****   * @retval None
 483:Core/Src/main.c ****   */
 484:Core/Src/main.c **** static void MX_TIM1_Init(void)
 485:Core/Src/main.c **** {
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
ARM GAS  /tmp/ccG1uW9V.s 			page 10


 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 492:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 493:Core/Src/main.c **** 
 494:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 495:Core/Src/main.c **** 
 496:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 497:Core/Src/main.c ****   htim1.Instance = TIM1;
 498:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 499:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 500:Core/Src/main.c ****   htim1.Init.Period = 65535;
 501:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 502:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 503:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 504:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 505:Core/Src/main.c ****   {
 506:Core/Src/main.c ****     Error_Handler();
 507:Core/Src/main.c ****   }
 508:Core/Src/main.c ****   sSlaveConfig.SlaveMode = TIM_SLAVEMODE_EXTERNAL1;
 509:Core/Src/main.c ****   sSlaveConfig.InputTrigger = TIM_TS_TI2FP2;
 510:Core/Src/main.c ****   sSlaveConfig.TriggerPolarity = TIM_TRIGGERPOLARITY_RISING;
 511:Core/Src/main.c ****   sSlaveConfig.TriggerFilter = 0;
 512:Core/Src/main.c ****   if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 513:Core/Src/main.c ****   {
 514:Core/Src/main.c ****     Error_Handler();
 515:Core/Src/main.c ****   }
 516:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 517:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 518:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 519:Core/Src/main.c ****   {
 520:Core/Src/main.c ****     Error_Handler();
 521:Core/Src/main.c ****   }
 522:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 525:Core/Src/main.c **** 
 526:Core/Src/main.c **** }
 527:Core/Src/main.c **** 
 528:Core/Src/main.c **** /**
 529:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 530:Core/Src/main.c ****   * @param None
 531:Core/Src/main.c ****   * @retval None
 532:Core/Src/main.c ****   */
 533:Core/Src/main.c **** static void MX_TIM4_Init(void)
 534:Core/Src/main.c **** {
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 541:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 542:Core/Src/main.c **** 
 543:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 544:Core/Src/main.c **** 
ARM GAS  /tmp/ccG1uW9V.s 			page 11


 545:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 546:Core/Src/main.c ****   htim4.Instance = TIM4;
 547:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 548:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 549:Core/Src/main.c ****   htim4.Init.Period = 65535;
 550:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 551:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 552:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 553:Core/Src/main.c ****   {
 554:Core/Src/main.c ****     Error_Handler();
 555:Core/Src/main.c ****   }
 556:Core/Src/main.c ****   sSlaveConfig.SlaveMode = TIM_SLAVEMODE_EXTERNAL1;
 557:Core/Src/main.c ****   sSlaveConfig.InputTrigger = TIM_TS_TI2FP2;
 558:Core/Src/main.c ****   sSlaveConfig.TriggerPolarity = TIM_TRIGGERPOLARITY_RISING;
 559:Core/Src/main.c ****   sSlaveConfig.TriggerFilter = 0;
 560:Core/Src/main.c ****   if (HAL_TIM_SlaveConfigSynchro(&htim4, &sSlaveConfig) != HAL_OK)
 561:Core/Src/main.c ****   {
 562:Core/Src/main.c ****     Error_Handler();
 563:Core/Src/main.c ****   }
 564:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 565:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 566:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 567:Core/Src/main.c ****   {
 568:Core/Src/main.c ****     Error_Handler();
 569:Core/Src/main.c ****   }
 570:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 571:Core/Src/main.c **** 
 572:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 573:Core/Src/main.c **** 
 574:Core/Src/main.c **** }
 575:Core/Src/main.c **** 
 576:Core/Src/main.c **** /**
 577:Core/Src/main.c ****   * @brief TIM5 Initialization Function
 578:Core/Src/main.c ****   * @param None
 579:Core/Src/main.c ****   * @retval None
 580:Core/Src/main.c ****   */
 581:Core/Src/main.c **** static void MX_TIM5_Init(void)
 582:Core/Src/main.c **** {
 583:Core/Src/main.c **** 
 584:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
 585:Core/Src/main.c **** 
 586:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
 587:Core/Src/main.c **** 
 588:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 589:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 590:Core/Src/main.c **** 
 591:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
 592:Core/Src/main.c **** 
 593:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
 594:Core/Src/main.c ****   htim5.Instance = TIM5;
 595:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
 596:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 597:Core/Src/main.c ****   htim5.Init.Period = 64*1024*1024;
 598:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 599:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 600:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 601:Core/Src/main.c ****   {
ARM GAS  /tmp/ccG1uW9V.s 			page 12


 602:Core/Src/main.c ****     Error_Handler();
 603:Core/Src/main.c ****   }
 604:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 605:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 606:Core/Src/main.c ****   {
 607:Core/Src/main.c ****     Error_Handler();
 608:Core/Src/main.c ****   }
 609:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 610:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 611:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 612:Core/Src/main.c ****   {
 613:Core/Src/main.c ****     Error_Handler();
 614:Core/Src/main.c ****   }
 615:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
 616:Core/Src/main.c **** 
 617:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
 618:Core/Src/main.c **** 
 619:Core/Src/main.c **** }
 620:Core/Src/main.c **** 
 621:Core/Src/main.c **** /**
 622:Core/Src/main.c ****   * @brief USART2 Initialization Function
 623:Core/Src/main.c ****   * @param None
 624:Core/Src/main.c ****   * @retval None
 625:Core/Src/main.c ****   */
 626:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 627:Core/Src/main.c **** {
 628:Core/Src/main.c **** 
 629:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 630:Core/Src/main.c **** 
 631:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 632:Core/Src/main.c **** 
 633:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 634:Core/Src/main.c **** 
 635:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 636:Core/Src/main.c ****   huart2.Instance = USART2;
 637:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 638:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 639:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 640:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 641:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 642:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 643:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 644:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 645:Core/Src/main.c ****   {
 646:Core/Src/main.c ****     Error_Handler();
 647:Core/Src/main.c ****   }
 648:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 649:Core/Src/main.c **** 
 650:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 651:Core/Src/main.c **** 
 652:Core/Src/main.c **** }
 653:Core/Src/main.c **** 
 654:Core/Src/main.c **** /**
 655:Core/Src/main.c ****   * Enable DMA controller clock
 656:Core/Src/main.c ****   */
 657:Core/Src/main.c **** static void MX_DMA_Init(void)
 658:Core/Src/main.c **** {
ARM GAS  /tmp/ccG1uW9V.s 			page 13


 659:Core/Src/main.c **** 
 660:Core/Src/main.c ****   /* DMA controller clock enable */
 661:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 662:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 663:Core/Src/main.c **** 
 664:Core/Src/main.c ****   /* DMA interrupt init */
 665:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 666:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 667:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 668:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 669:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 670:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 671:Core/Src/main.c ****   /* DMA2_Stream2_IRQn interrupt configuration */
 672:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
 673:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 674:Core/Src/main.c **** 
 675:Core/Src/main.c **** }
 676:Core/Src/main.c **** 
 677:Core/Src/main.c **** /**
 678:Core/Src/main.c ****   * @brief GPIO Initialization Function
 679:Core/Src/main.c ****   * @param None
 680:Core/Src/main.c ****   * @retval None
 681:Core/Src/main.c ****   */
 682:Core/Src/main.c **** static void MX_GPIO_Init(void)
 683:Core/Src/main.c **** {
  28              		.loc 1 683 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 8BB0     		sub	sp, sp, #44
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 64
 684:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 684 3 view .LVU1
  44              		.loc 1 684 20 is_stmt 0 view .LVU2
  45 0004 0024     		movs	r4, #0
  46 0006 0594     		str	r4, [sp, #20]
  47 0008 0694     		str	r4, [sp, #24]
  48 000a 0794     		str	r4, [sp, #28]
  49 000c 0894     		str	r4, [sp, #32]
  50 000e 0994     		str	r4, [sp, #36]
 685:Core/Src/main.c **** 
 686:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 687:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  51              		.loc 1 687 3 is_stmt 1 view .LVU3
  52              	.LBB2:
  53              		.loc 1 687 3 view .LVU4
  54 0010 0194     		str	r4, [sp, #4]
  55              		.loc 1 687 3 view .LVU5
ARM GAS  /tmp/ccG1uW9V.s 			page 14


  56 0012 2C4B     		ldr	r3, .L3
  57 0014 1A6B     		ldr	r2, [r3, #48]
  58 0016 42F08002 		orr	r2, r2, #128
  59 001a 1A63     		str	r2, [r3, #48]
  60              		.loc 1 687 3 view .LVU6
  61 001c 1A6B     		ldr	r2, [r3, #48]
  62 001e 02F08002 		and	r2, r2, #128
  63 0022 0192     		str	r2, [sp, #4]
  64              		.loc 1 687 3 view .LVU7
  65 0024 019A     		ldr	r2, [sp, #4]
  66              	.LBE2:
  67              		.loc 1 687 3 view .LVU8
 688:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  68              		.loc 1 688 3 view .LVU9
  69              	.LBB3:
  70              		.loc 1 688 3 view .LVU10
  71 0026 0294     		str	r4, [sp, #8]
  72              		.loc 1 688 3 view .LVU11
  73 0028 1A6B     		ldr	r2, [r3, #48]
  74 002a 42F00402 		orr	r2, r2, #4
  75 002e 1A63     		str	r2, [r3, #48]
  76              		.loc 1 688 3 view .LVU12
  77 0030 1A6B     		ldr	r2, [r3, #48]
  78 0032 02F00402 		and	r2, r2, #4
  79 0036 0292     		str	r2, [sp, #8]
  80              		.loc 1 688 3 view .LVU13
  81 0038 029A     		ldr	r2, [sp, #8]
  82              	.LBE3:
  83              		.loc 1 688 3 view .LVU14
 689:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  84              		.loc 1 689 3 view .LVU15
  85              	.LBB4:
  86              		.loc 1 689 3 view .LVU16
  87 003a 0394     		str	r4, [sp, #12]
  88              		.loc 1 689 3 view .LVU17
  89 003c 1A6B     		ldr	r2, [r3, #48]
  90 003e 42F00102 		orr	r2, r2, #1
  91 0042 1A63     		str	r2, [r3, #48]
  92              		.loc 1 689 3 view .LVU18
  93 0044 1A6B     		ldr	r2, [r3, #48]
  94 0046 02F00102 		and	r2, r2, #1
  95 004a 0392     		str	r2, [sp, #12]
  96              		.loc 1 689 3 view .LVU19
  97 004c 039A     		ldr	r2, [sp, #12]
  98              	.LBE4:
  99              		.loc 1 689 3 view .LVU20
 690:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 100              		.loc 1 690 3 view .LVU21
 101              	.LBB5:
 102              		.loc 1 690 3 view .LVU22
 103 004e 0494     		str	r4, [sp, #16]
 104              		.loc 1 690 3 view .LVU23
 105 0050 1A6B     		ldr	r2, [r3, #48]
 106 0052 42F00202 		orr	r2, r2, #2
 107 0056 1A63     		str	r2, [r3, #48]
 108              		.loc 1 690 3 view .LVU24
 109 0058 1B6B     		ldr	r3, [r3, #48]
ARM GAS  /tmp/ccG1uW9V.s 			page 15


 110 005a 03F00203 		and	r3, r3, #2
 111 005e 0493     		str	r3, [sp, #16]
 112              		.loc 1 690 3 view .LVU25
 113 0060 049B     		ldr	r3, [sp, #16]
 114              	.LBE5:
 115              		.loc 1 690 3 view .LVU26
 691:Core/Src/main.c **** 
 692:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 693:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, spi1_cs_Pin|LED5_Pin|LED3_Pin|LED4_Pin, GPIO_PIN_RESET);
 116              		.loc 1 693 3 view .LVU27
 117 0062 194F     		ldr	r7, .L3+4
 118 0064 2246     		mov	r2, r4
 119 0066 41F61041 		movw	r1, #7184
 120 006a 3846     		mov	r0, r7
 121 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 122              	.LVL0:
 694:Core/Src/main.c **** 
 695:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 696:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, DAC_LOAD_Pin|DAC_CS_Pin, GPIO_PIN_RESET);
 123              		.loc 1 696 3 view .LVU28
 124 0070 164D     		ldr	r5, .L3+8
 125 0072 2246     		mov	r2, r4
 126 0074 4FF44071 		mov	r1, #768
 127 0078 2846     		mov	r0, r5
 128 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 129              	.LVL1:
 697:Core/Src/main.c **** 
 698:Core/Src/main.c ****   /*Configure GPIO pins : spi1_cs_Pin LED5_Pin LED3_Pin LED4_Pin */
 699:Core/Src/main.c ****   GPIO_InitStruct.Pin = spi1_cs_Pin|LED5_Pin|LED3_Pin|LED4_Pin;
 130              		.loc 1 699 3 view .LVU29
 131              		.loc 1 699 23 is_stmt 0 view .LVU30
 132 007e 41F61043 		movw	r3, #7184
 133 0082 0593     		str	r3, [sp, #20]
 700:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 134              		.loc 1 700 3 is_stmt 1 view .LVU31
 135              		.loc 1 700 24 is_stmt 0 view .LVU32
 136 0084 0126     		movs	r6, #1
 137 0086 0696     		str	r6, [sp, #24]
 701:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 138              		.loc 1 701 3 is_stmt 1 view .LVU33
 139              		.loc 1 701 24 is_stmt 0 view .LVU34
 140 0088 0794     		str	r4, [sp, #28]
 702:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 141              		.loc 1 702 3 is_stmt 1 view .LVU35
 142              		.loc 1 702 25 is_stmt 0 view .LVU36
 143 008a 0894     		str	r4, [sp, #32]
 703:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 144              		.loc 1 703 3 is_stmt 1 view .LVU37
 145 008c 05A9     		add	r1, sp, #20
 146 008e 3846     		mov	r0, r7
 147 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 148              	.LVL2:
 704:Core/Src/main.c **** 
 705:Core/Src/main.c ****   /*Configure GPIO pin : PA8 */
 706:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 149              		.loc 1 706 3 view .LVU38
 150              		.loc 1 706 23 is_stmt 0 view .LVU39
ARM GAS  /tmp/ccG1uW9V.s 			page 16


 151 0094 4FF48073 		mov	r3, #256
 152 0098 0593     		str	r3, [sp, #20]
 707:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 153              		.loc 1 707 3 is_stmt 1 view .LVU40
 154              		.loc 1 707 24 is_stmt 0 view .LVU41
 155 009a 0223     		movs	r3, #2
 156 009c 0693     		str	r3, [sp, #24]
 708:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 157              		.loc 1 708 3 is_stmt 1 view .LVU42
 158              		.loc 1 708 24 is_stmt 0 view .LVU43
 159 009e 0794     		str	r4, [sp, #28]
 709:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 160              		.loc 1 709 3 is_stmt 1 view .LVU44
 161              		.loc 1 709 25 is_stmt 0 view .LVU45
 162 00a0 0894     		str	r4, [sp, #32]
 710:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 163              		.loc 1 710 3 is_stmt 1 view .LVU46
 164              		.loc 1 710 29 is_stmt 0 view .LVU47
 165 00a2 0994     		str	r4, [sp, #36]
 711:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 166              		.loc 1 711 3 is_stmt 1 view .LVU48
 167 00a4 05A9     		add	r1, sp, #20
 168 00a6 0A48     		ldr	r0, .L3+12
 169 00a8 FFF7FEFF 		bl	HAL_GPIO_Init
 170              	.LVL3:
 712:Core/Src/main.c **** 
 713:Core/Src/main.c ****   /*Configure GPIO pins : DAC_LOAD_Pin DAC_CS_Pin */
 714:Core/Src/main.c ****   GPIO_InitStruct.Pin = DAC_LOAD_Pin|DAC_CS_Pin;
 171              		.loc 1 714 3 view .LVU49
 172              		.loc 1 714 23 is_stmt 0 view .LVU50
 173 00ac 4FF44073 		mov	r3, #768
 174 00b0 0593     		str	r3, [sp, #20]
 715:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 175              		.loc 1 715 3 is_stmt 1 view .LVU51
 176              		.loc 1 715 24 is_stmt 0 view .LVU52
 177 00b2 0696     		str	r6, [sp, #24]
 716:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 178              		.loc 1 716 3 is_stmt 1 view .LVU53
 179              		.loc 1 716 24 is_stmt 0 view .LVU54
 180 00b4 0794     		str	r4, [sp, #28]
 717:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 181              		.loc 1 717 3 is_stmt 1 view .LVU55
 182              		.loc 1 717 25 is_stmt 0 view .LVU56
 183 00b6 0894     		str	r4, [sp, #32]
 718:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 184              		.loc 1 718 3 is_stmt 1 view .LVU57
 185 00b8 05A9     		add	r1, sp, #20
 186 00ba 2846     		mov	r0, r5
 187 00bc FFF7FEFF 		bl	HAL_GPIO_Init
 188              	.LVL4:
 719:Core/Src/main.c **** 
 720:Core/Src/main.c **** }
 189              		.loc 1 720 1 is_stmt 0 view .LVU58
 190 00c0 0BB0     		add	sp, sp, #44
 191              	.LCFI2:
 192              		.cfi_def_cfa_offset 20
 193              		@ sp needed
ARM GAS  /tmp/ccG1uW9V.s 			page 17


 194 00c2 F0BD     		pop	{r4, r5, r6, r7, pc}
 195              	.L4:
 196              		.align	2
 197              	.L3:
 198 00c4 00380240 		.word	1073887232
 199 00c8 00080240 		.word	1073874944
 200 00cc 00040240 		.word	1073873920
 201 00d0 00000240 		.word	1073872896
 202              		.cfi_endproc
 203              	.LFE144:
 205              		.section	.text.MX_DMA_Init,"ax",%progbits
 206              		.align	1
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 210              		.fpu fpv4-sp-d16
 212              	MX_DMA_Init:
 213              	.LFB143:
 658:Core/Src/main.c **** 
 214              		.loc 1 658 1 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 8
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218 0000 10B5     		push	{r4, lr}
 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 4, -8
 222              		.cfi_offset 14, -4
 223 0002 82B0     		sub	sp, sp, #8
 224              	.LCFI4:
 225              		.cfi_def_cfa_offset 16
 661:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 226              		.loc 1 661 3 view .LVU60
 227              	.LBB6:
 661:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 228              		.loc 1 661 3 view .LVU61
 229 0004 0024     		movs	r4, #0
 230 0006 0094     		str	r4, [sp]
 661:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 231              		.loc 1 661 3 view .LVU62
 232 0008 164B     		ldr	r3, .L7
 233 000a 1A6B     		ldr	r2, [r3, #48]
 234 000c 42F48002 		orr	r2, r2, #4194304
 235 0010 1A63     		str	r2, [r3, #48]
 661:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 236              		.loc 1 661 3 view .LVU63
 237 0012 1A6B     		ldr	r2, [r3, #48]
 238 0014 02F48002 		and	r2, r2, #4194304
 239 0018 0092     		str	r2, [sp]
 661:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 240              		.loc 1 661 3 view .LVU64
 241 001a 009A     		ldr	r2, [sp]
 242              	.LBE6:
 661:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 243              		.loc 1 661 3 view .LVU65
 662:Core/Src/main.c **** 
 244              		.loc 1 662 3 view .LVU66
ARM GAS  /tmp/ccG1uW9V.s 			page 18


 245              	.LBB7:
 662:Core/Src/main.c **** 
 246              		.loc 1 662 3 view .LVU67
 247 001c 0194     		str	r4, [sp, #4]
 662:Core/Src/main.c **** 
 248              		.loc 1 662 3 view .LVU68
 249 001e 1A6B     		ldr	r2, [r3, #48]
 250 0020 42F40012 		orr	r2, r2, #2097152
 251 0024 1A63     		str	r2, [r3, #48]
 662:Core/Src/main.c **** 
 252              		.loc 1 662 3 view .LVU69
 253 0026 1B6B     		ldr	r3, [r3, #48]
 254 0028 03F40013 		and	r3, r3, #2097152
 255 002c 0193     		str	r3, [sp, #4]
 662:Core/Src/main.c **** 
 256              		.loc 1 662 3 view .LVU70
 257 002e 019B     		ldr	r3, [sp, #4]
 258              	.LBE7:
 662:Core/Src/main.c **** 
 259              		.loc 1 662 3 view .LVU71
 666:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 260              		.loc 1 666 3 view .LVU72
 261 0030 2246     		mov	r2, r4
 262 0032 2146     		mov	r1, r4
 263 0034 1120     		movs	r0, #17
 264 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 265              	.LVL5:
 667:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 266              		.loc 1 667 3 view .LVU73
 267 003a 1120     		movs	r0, #17
 268 003c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 269              	.LVL6:
 669:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 270              		.loc 1 669 3 view .LVU74
 271 0040 2246     		mov	r2, r4
 272 0042 2146     		mov	r1, r4
 273 0044 3820     		movs	r0, #56
 274 0046 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 275              	.LVL7:
 670:Core/Src/main.c ****   /* DMA2_Stream2_IRQn interrupt configuration */
 276              		.loc 1 670 3 view .LVU75
 277 004a 3820     		movs	r0, #56
 278 004c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 279              	.LVL8:
 672:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 280              		.loc 1 672 3 view .LVU76
 281 0050 2246     		mov	r2, r4
 282 0052 2146     		mov	r1, r4
 283 0054 3A20     		movs	r0, #58
 284 0056 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 285              	.LVL9:
 673:Core/Src/main.c **** 
 286              		.loc 1 673 3 view .LVU77
 287 005a 3A20     		movs	r0, #58
 288 005c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 289              	.LVL10:
 675:Core/Src/main.c **** 
ARM GAS  /tmp/ccG1uW9V.s 			page 19


 290              		.loc 1 675 1 is_stmt 0 view .LVU78
 291 0060 02B0     		add	sp, sp, #8
 292              	.LCFI5:
 293              		.cfi_def_cfa_offset 8
 294              		@ sp needed
 295 0062 10BD     		pop	{r4, pc}
 296              	.L8:
 297              		.align	2
 298              	.L7:
 299 0064 00380240 		.word	1073887232
 300              		.cfi_endproc
 301              	.LFE143:
 303              		.section	.text.MX_SPI1_Init,"ax",%progbits
 304              		.align	1
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu fpv4-sp-d16
 310              	MX_SPI1_Init:
 311              	.LFB137:
 409:Core/Src/main.c **** 
 312              		.loc 1 409 1 is_stmt 1 view -0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316 0000 08B5     		push	{r3, lr}
 317              	.LCFI6:
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 3, -8
 320              		.cfi_offset 14, -4
 419:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 321              		.loc 1 419 3 view .LVU80
 419:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 322              		.loc 1 419 18 is_stmt 0 view .LVU81
 323 0002 0D48     		ldr	r0, .L11
 324 0004 0D4B     		ldr	r3, .L11+4
 325 0006 0360     		str	r3, [r0]
 420:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 326              		.loc 1 420 3 is_stmt 1 view .LVU82
 420:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 327              		.loc 1 420 19 is_stmt 0 view .LVU83
 328 0008 4FF48273 		mov	r3, #260
 329 000c 4360     		str	r3, [r0, #4]
 421:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 330              		.loc 1 421 3 is_stmt 1 view .LVU84
 421:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 331              		.loc 1 421 24 is_stmt 0 view .LVU85
 332 000e 0023     		movs	r3, #0
 333 0010 8360     		str	r3, [r0, #8]
 422:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 334              		.loc 1 422 3 is_stmt 1 view .LVU86
 422:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 335              		.loc 1 422 23 is_stmt 0 view .LVU87
 336 0012 4FF40062 		mov	r2, #2048
 337 0016 C260     		str	r2, [r0, #12]
 423:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 338              		.loc 1 423 3 is_stmt 1 view .LVU88
ARM GAS  /tmp/ccG1uW9V.s 			page 20


 423:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 339              		.loc 1 423 26 is_stmt 0 view .LVU89
 340 0018 0361     		str	r3, [r0, #16]
 424:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 341              		.loc 1 424 3 is_stmt 1 view .LVU90
 424:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 342              		.loc 1 424 23 is_stmt 0 view .LVU91
 343 001a 4361     		str	r3, [r0, #20]
 425:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 344              		.loc 1 425 3 is_stmt 1 view .LVU92
 425:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 345              		.loc 1 425 18 is_stmt 0 view .LVU93
 346 001c 4FF40072 		mov	r2, #512
 347 0020 8261     		str	r2, [r0, #24]
 426:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 348              		.loc 1 426 3 is_stmt 1 view .LVU94
 426:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 349              		.loc 1 426 32 is_stmt 0 view .LVU95
 350 0022 3022     		movs	r2, #48
 351 0024 C261     		str	r2, [r0, #28]
 427:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 352              		.loc 1 427 3 is_stmt 1 view .LVU96
 427:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 353              		.loc 1 427 23 is_stmt 0 view .LVU97
 354 0026 0362     		str	r3, [r0, #32]
 428:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 355              		.loc 1 428 3 is_stmt 1 view .LVU98
 428:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 356              		.loc 1 428 21 is_stmt 0 view .LVU99
 357 0028 4362     		str	r3, [r0, #36]
 429:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 358              		.loc 1 429 3 is_stmt 1 view .LVU100
 429:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 359              		.loc 1 429 29 is_stmt 0 view .LVU101
 360 002a 8362     		str	r3, [r0, #40]
 430:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 361              		.loc 1 430 3 is_stmt 1 view .LVU102
 430:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 362              		.loc 1 430 28 is_stmt 0 view .LVU103
 363 002c 0A23     		movs	r3, #10
 364 002e C362     		str	r3, [r0, #44]
 431:Core/Src/main.c ****   {
 365              		.loc 1 431 3 is_stmt 1 view .LVU104
 431:Core/Src/main.c ****   {
 366              		.loc 1 431 7 is_stmt 0 view .LVU105
 367 0030 FFF7FEFF 		bl	HAL_SPI_Init
 368              	.LVL11:
 439:Core/Src/main.c **** 
 369              		.loc 1 439 1 view .LVU106
 370 0034 08BD     		pop	{r3, pc}
 371              	.L12:
 372 0036 00BF     		.align	2
 373              	.L11:
 374 0038 00000000 		.word	hspi1
 375 003c 00300140 		.word	1073819648
 376              		.cfi_endproc
 377              	.LFE137:
ARM GAS  /tmp/ccG1uW9V.s 			page 21


 379              		.section	.text.MX_SPI2_Init,"ax",%progbits
 380              		.align	1
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 384              		.fpu fpv4-sp-d16
 386              	MX_SPI2_Init:
 387              	.LFB138:
 447:Core/Src/main.c **** 
 388              		.loc 1 447 1 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392 0000 08B5     		push	{r3, lr}
 393              	.LCFI7:
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 3, -8
 396              		.cfi_offset 14, -4
 457:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 397              		.loc 1 457 3 view .LVU108
 457:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 398              		.loc 1 457 18 is_stmt 0 view .LVU109
 399 0002 0D48     		ldr	r0, .L15
 400 0004 0D4B     		ldr	r3, .L15+4
 401 0006 0360     		str	r3, [r0]
 458:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_1LINE;
 402              		.loc 1 458 3 is_stmt 1 view .LVU110
 458:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_1LINE;
 403              		.loc 1 458 19 is_stmt 0 view .LVU111
 404 0008 4FF48273 		mov	r3, #260
 405 000c 4360     		str	r3, [r0, #4]
 459:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_16BIT;
 406              		.loc 1 459 3 is_stmt 1 view .LVU112
 459:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_16BIT;
 407              		.loc 1 459 24 is_stmt 0 view .LVU113
 408 000e 4FF40043 		mov	r3, #32768
 409 0012 8360     		str	r3, [r0, #8]
 460:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 410              		.loc 1 460 3 is_stmt 1 view .LVU114
 460:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 411              		.loc 1 460 23 is_stmt 0 view .LVU115
 412 0014 4FF40063 		mov	r3, #2048
 413 0018 C360     		str	r3, [r0, #12]
 461:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 414              		.loc 1 461 3 is_stmt 1 view .LVU116
 461:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 415              		.loc 1 461 26 is_stmt 0 view .LVU117
 416 001a 0023     		movs	r3, #0
 417 001c 0361     		str	r3, [r0, #16]
 462:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 418              		.loc 1 462 3 is_stmt 1 view .LVU118
 462:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 419              		.loc 1 462 23 is_stmt 0 view .LVU119
 420 001e 4361     		str	r3, [r0, #20]
 463:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 421              		.loc 1 463 3 is_stmt 1 view .LVU120
 463:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
ARM GAS  /tmp/ccG1uW9V.s 			page 22


 422              		.loc 1 463 18 is_stmt 0 view .LVU121
 423 0020 4FF40072 		mov	r2, #512
 424 0024 8261     		str	r2, [r0, #24]
 464:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 425              		.loc 1 464 3 is_stmt 1 view .LVU122
 464:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 426              		.loc 1 464 32 is_stmt 0 view .LVU123
 427 0026 C361     		str	r3, [r0, #28]
 465:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 428              		.loc 1 465 3 is_stmt 1 view .LVU124
 465:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 429              		.loc 1 465 23 is_stmt 0 view .LVU125
 430 0028 0362     		str	r3, [r0, #32]
 466:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 431              		.loc 1 466 3 is_stmt 1 view .LVU126
 466:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 432              		.loc 1 466 21 is_stmt 0 view .LVU127
 433 002a 4362     		str	r3, [r0, #36]
 467:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 434              		.loc 1 467 3 is_stmt 1 view .LVU128
 467:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 435              		.loc 1 467 29 is_stmt 0 view .LVU129
 436 002c 8362     		str	r3, [r0, #40]
 468:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 437              		.loc 1 468 3 is_stmt 1 view .LVU130
 468:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 438              		.loc 1 468 28 is_stmt 0 view .LVU131
 439 002e 0A23     		movs	r3, #10
 440 0030 C362     		str	r3, [r0, #44]
 469:Core/Src/main.c ****   {
 441              		.loc 1 469 3 is_stmt 1 view .LVU132
 469:Core/Src/main.c ****   {
 442              		.loc 1 469 7 is_stmt 0 view .LVU133
 443 0032 FFF7FEFF 		bl	HAL_SPI_Init
 444              	.LVL12:
 477:Core/Src/main.c **** 
 445              		.loc 1 477 1 view .LVU134
 446 0036 08BD     		pop	{r3, pc}
 447              	.L16:
 448              		.align	2
 449              	.L15:
 450 0038 00000000 		.word	hspi2
 451 003c 00380040 		.word	1073756160
 452              		.cfi_endproc
 453              	.LFE138:
 455              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 456              		.align	1
 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 460              		.fpu fpv4-sp-d16
 462              	MX_USART2_UART_Init:
 463              	.LFB142:
 627:Core/Src/main.c **** 
 464              		.loc 1 627 1 is_stmt 1 view -0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccG1uW9V.s 			page 23


 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468 0000 08B5     		push	{r3, lr}
 469              	.LCFI8:
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 3, -8
 472              		.cfi_offset 14, -4
 636:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 473              		.loc 1 636 3 view .LVU136
 636:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 474              		.loc 1 636 19 is_stmt 0 view .LVU137
 475 0002 0848     		ldr	r0, .L19
 476 0004 084B     		ldr	r3, .L19+4
 477 0006 0360     		str	r3, [r0]
 637:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 478              		.loc 1 637 3 is_stmt 1 view .LVU138
 637:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 479              		.loc 1 637 24 is_stmt 0 view .LVU139
 480 0008 4FF4E133 		mov	r3, #115200
 481 000c 4360     		str	r3, [r0, #4]
 638:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 482              		.loc 1 638 3 is_stmt 1 view .LVU140
 638:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 483              		.loc 1 638 26 is_stmt 0 view .LVU141
 484 000e 0023     		movs	r3, #0
 485 0010 8360     		str	r3, [r0, #8]
 639:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 486              		.loc 1 639 3 is_stmt 1 view .LVU142
 639:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 487              		.loc 1 639 24 is_stmt 0 view .LVU143
 488 0012 C360     		str	r3, [r0, #12]
 640:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 489              		.loc 1 640 3 is_stmt 1 view .LVU144
 640:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 490              		.loc 1 640 22 is_stmt 0 view .LVU145
 491 0014 0361     		str	r3, [r0, #16]
 641:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 492              		.loc 1 641 3 is_stmt 1 view .LVU146
 641:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 493              		.loc 1 641 20 is_stmt 0 view .LVU147
 494 0016 0C22     		movs	r2, #12
 495 0018 4261     		str	r2, [r0, #20]
 642:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 496              		.loc 1 642 3 is_stmt 1 view .LVU148
 642:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 497              		.loc 1 642 25 is_stmt 0 view .LVU149
 498 001a 8361     		str	r3, [r0, #24]
 643:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 499              		.loc 1 643 3 is_stmt 1 view .LVU150
 643:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 500              		.loc 1 643 28 is_stmt 0 view .LVU151
 501 001c C361     		str	r3, [r0, #28]
 644:Core/Src/main.c ****   {
 502              		.loc 1 644 3 is_stmt 1 view .LVU152
 644:Core/Src/main.c ****   {
 503              		.loc 1 644 7 is_stmt 0 view .LVU153
 504 001e FFF7FEFF 		bl	HAL_UART_Init
 505              	.LVL13:
ARM GAS  /tmp/ccG1uW9V.s 			page 24


 652:Core/Src/main.c **** 
 506              		.loc 1 652 1 view .LVU154
 507 0022 08BD     		pop	{r3, pc}
 508              	.L20:
 509              		.align	2
 510              	.L19:
 511 0024 00000000 		.word	huart2
 512 0028 00440040 		.word	1073759232
 513              		.cfi_endproc
 514              	.LFE142:
 516              		.section	.text.MX_DAC_Init,"ax",%progbits
 517              		.align	1
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.fpu fpv4-sp-d16
 523              	MX_DAC_Init:
 524              	.LFB136:
 371:Core/Src/main.c **** 
 525              		.loc 1 371 1 is_stmt 1 view -0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 8
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529 0000 30B5     		push	{r4, r5, lr}
 530              	.LCFI9:
 531              		.cfi_def_cfa_offset 12
 532              		.cfi_offset 4, -12
 533              		.cfi_offset 5, -8
 534              		.cfi_offset 14, -4
 535 0002 83B0     		sub	sp, sp, #12
 536              	.LCFI10:
 537              		.cfi_def_cfa_offset 24
 377:Core/Src/main.c **** 
 538              		.loc 1 377 3 view .LVU156
 377:Core/Src/main.c **** 
 539              		.loc 1 377 26 is_stmt 0 view .LVU157
 540 0004 0024     		movs	r4, #0
 541 0006 0094     		str	r4, [sp]
 542 0008 0194     		str	r4, [sp, #4]
 384:Core/Src/main.c ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 543              		.loc 1 384 3 is_stmt 1 view .LVU158
 384:Core/Src/main.c ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 544              		.loc 1 384 17 is_stmt 0 view .LVU159
 545 000a 074D     		ldr	r5, .L23
 546 000c 074B     		ldr	r3, .L23+4
 547 000e 2B60     		str	r3, [r5]
 385:Core/Src/main.c ****   {
 548              		.loc 1 385 3 is_stmt 1 view .LVU160
 385:Core/Src/main.c ****   {
 549              		.loc 1 385 7 is_stmt 0 view .LVU161
 550 0010 2846     		mov	r0, r5
 551 0012 FFF7FEFF 		bl	HAL_DAC_Init
 552              	.LVL14:
 391:Core/Src/main.c ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 553              		.loc 1 391 3 is_stmt 1 view .LVU162
 391:Core/Src/main.c ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 554              		.loc 1 391 23 is_stmt 0 view .LVU163
ARM GAS  /tmp/ccG1uW9V.s 			page 25


 555 0016 0094     		str	r4, [sp]
 392:Core/Src/main.c ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 556              		.loc 1 392 3 is_stmt 1 view .LVU164
 392:Core/Src/main.c ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 557              		.loc 1 392 28 is_stmt 0 view .LVU165
 558 0018 0194     		str	r4, [sp, #4]
 393:Core/Src/main.c ****   {
 559              		.loc 1 393 3 is_stmt 1 view .LVU166
 393:Core/Src/main.c ****   {
 560              		.loc 1 393 7 is_stmt 0 view .LVU167
 561 001a 2246     		mov	r2, r4
 562 001c 6946     		mov	r1, sp
 563 001e 2846     		mov	r0, r5
 564 0020 FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 565              	.LVL15:
 401:Core/Src/main.c **** 
 566              		.loc 1 401 1 view .LVU168
 567 0024 03B0     		add	sp, sp, #12
 568              	.LCFI11:
 569              		.cfi_def_cfa_offset 12
 570              		@ sp needed
 571 0026 30BD     		pop	{r4, r5, pc}
 572              	.L24:
 573              		.align	2
 574              	.L23:
 575 0028 00000000 		.word	hdac
 576 002c 00740040 		.word	1073771520
 577              		.cfi_endproc
 578              	.LFE136:
 580              		.section	.text.MX_TIM4_Init,"ax",%progbits
 581              		.align	1
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 585              		.fpu fpv4-sp-d16
 587              	MX_TIM4_Init:
 588              	.LFB140:
 534:Core/Src/main.c **** 
 589              		.loc 1 534 1 is_stmt 1 view -0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 32
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593 0000 30B5     		push	{r4, r5, lr}
 594              	.LCFI12:
 595              		.cfi_def_cfa_offset 12
 596              		.cfi_offset 4, -12
 597              		.cfi_offset 5, -8
 598              		.cfi_offset 14, -4
 599 0002 89B0     		sub	sp, sp, #36
 600              	.LCFI13:
 601              		.cfi_def_cfa_offset 48
 540:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 602              		.loc 1 540 3 view .LVU170
 540:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 603              		.loc 1 540 26 is_stmt 0 view .LVU171
 604 0004 0024     		movs	r4, #0
 605 0006 0394     		str	r4, [sp, #12]
ARM GAS  /tmp/ccG1uW9V.s 			page 26


 606 0008 0494     		str	r4, [sp, #16]
 607 000a 0594     		str	r4, [sp, #20]
 608 000c 0694     		str	r4, [sp, #24]
 609 000e 0794     		str	r4, [sp, #28]
 541:Core/Src/main.c **** 
 610              		.loc 1 541 3 is_stmt 1 view .LVU172
 541:Core/Src/main.c **** 
 611              		.loc 1 541 27 is_stmt 0 view .LVU173
 612 0010 0194     		str	r4, [sp, #4]
 613 0012 0294     		str	r4, [sp, #8]
 546:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 614              		.loc 1 546 3 is_stmt 1 view .LVU174
 546:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 615              		.loc 1 546 18 is_stmt 0 view .LVU175
 616 0014 0F4D     		ldr	r5, .L27
 617 0016 104B     		ldr	r3, .L27+4
 618 0018 2B60     		str	r3, [r5]
 547:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 619              		.loc 1 547 3 is_stmt 1 view .LVU176
 547:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 620              		.loc 1 547 24 is_stmt 0 view .LVU177
 621 001a 6C60     		str	r4, [r5, #4]
 548:Core/Src/main.c ****   htim4.Init.Period = 65535;
 622              		.loc 1 548 3 is_stmt 1 view .LVU178
 548:Core/Src/main.c ****   htim4.Init.Period = 65535;
 623              		.loc 1 548 26 is_stmt 0 view .LVU179
 624 001c AC60     		str	r4, [r5, #8]
 549:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 625              		.loc 1 549 3 is_stmt 1 view .LVU180
 549:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 626              		.loc 1 549 21 is_stmt 0 view .LVU181
 627 001e 4FF6FF73 		movw	r3, #65535
 628 0022 EB60     		str	r3, [r5, #12]
 550:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 629              		.loc 1 550 3 is_stmt 1 view .LVU182
 550:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 630              		.loc 1 550 28 is_stmt 0 view .LVU183
 631 0024 2C61     		str	r4, [r5, #16]
 551:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 632              		.loc 1 551 3 is_stmt 1 view .LVU184
 551:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 633              		.loc 1 551 32 is_stmt 0 view .LVU185
 634 0026 AC61     		str	r4, [r5, #24]
 552:Core/Src/main.c ****   {
 635              		.loc 1 552 3 is_stmt 1 view .LVU186
 552:Core/Src/main.c ****   {
 636              		.loc 1 552 7 is_stmt 0 view .LVU187
 637 0028 2846     		mov	r0, r5
 638 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 639              	.LVL16:
 556:Core/Src/main.c ****   sSlaveConfig.InputTrigger = TIM_TS_TI2FP2;
 640              		.loc 1 556 3 is_stmt 1 view .LVU188
 556:Core/Src/main.c ****   sSlaveConfig.InputTrigger = TIM_TS_TI2FP2;
 641              		.loc 1 556 26 is_stmt 0 view .LVU189
 642 002e 0723     		movs	r3, #7
 643 0030 0393     		str	r3, [sp, #12]
 557:Core/Src/main.c ****   sSlaveConfig.TriggerPolarity = TIM_TRIGGERPOLARITY_RISING;
ARM GAS  /tmp/ccG1uW9V.s 			page 27


 644              		.loc 1 557 3 is_stmt 1 view .LVU190
 557:Core/Src/main.c ****   sSlaveConfig.TriggerPolarity = TIM_TRIGGERPOLARITY_RISING;
 645              		.loc 1 557 29 is_stmt 0 view .LVU191
 646 0032 6023     		movs	r3, #96
 647 0034 0493     		str	r3, [sp, #16]
 558:Core/Src/main.c ****   sSlaveConfig.TriggerFilter = 0;
 648              		.loc 1 558 3 is_stmt 1 view .LVU192
 558:Core/Src/main.c ****   sSlaveConfig.TriggerFilter = 0;
 649              		.loc 1 558 32 is_stmt 0 view .LVU193
 650 0036 0594     		str	r4, [sp, #20]
 559:Core/Src/main.c ****   if (HAL_TIM_SlaveConfigSynchro(&htim4, &sSlaveConfig) != HAL_OK)
 651              		.loc 1 559 3 is_stmt 1 view .LVU194
 559:Core/Src/main.c ****   if (HAL_TIM_SlaveConfigSynchro(&htim4, &sSlaveConfig) != HAL_OK)
 652              		.loc 1 559 30 is_stmt 0 view .LVU195
 653 0038 0794     		str	r4, [sp, #28]
 560:Core/Src/main.c ****   {
 654              		.loc 1 560 3 is_stmt 1 view .LVU196
 560:Core/Src/main.c ****   {
 655              		.loc 1 560 7 is_stmt 0 view .LVU197
 656 003a 03A9     		add	r1, sp, #12
 657 003c 2846     		mov	r0, r5
 658 003e FFF7FEFF 		bl	HAL_TIM_SlaveConfigSynchro
 659              	.LVL17:
 564:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 660              		.loc 1 564 3 is_stmt 1 view .LVU198
 564:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 661              		.loc 1 564 37 is_stmt 0 view .LVU199
 662 0042 0194     		str	r4, [sp, #4]
 565:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 663              		.loc 1 565 3 is_stmt 1 view .LVU200
 565:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 664              		.loc 1 565 33 is_stmt 0 view .LVU201
 665 0044 0294     		str	r4, [sp, #8]
 566:Core/Src/main.c ****   {
 666              		.loc 1 566 3 is_stmt 1 view .LVU202
 566:Core/Src/main.c ****   {
 667              		.loc 1 566 7 is_stmt 0 view .LVU203
 668 0046 01A9     		add	r1, sp, #4
 669 0048 2846     		mov	r0, r5
 670 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 671              	.LVL18:
 574:Core/Src/main.c **** 
 672              		.loc 1 574 1 view .LVU204
 673 004e 09B0     		add	sp, sp, #36
 674              	.LCFI14:
 675              		.cfi_def_cfa_offset 12
 676              		@ sp needed
 677 0050 30BD     		pop	{r4, r5, pc}
 678              	.L28:
 679 0052 00BF     		.align	2
 680              	.L27:
 681 0054 00000000 		.word	htim4
 682 0058 00080040 		.word	1073743872
 683              		.cfi_endproc
 684              	.LFE140:
 686              		.section	.text.MX_TIM1_Init,"ax",%progbits
 687              		.align	1
ARM GAS  /tmp/ccG1uW9V.s 			page 28


 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv4-sp-d16
 693              	MX_TIM1_Init:
 694              	.LFB139:
 485:Core/Src/main.c **** 
 695              		.loc 1 485 1 is_stmt 1 view -0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 32
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699 0000 30B5     		push	{r4, r5, lr}
 700              	.LCFI15:
 701              		.cfi_def_cfa_offset 12
 702              		.cfi_offset 4, -12
 703              		.cfi_offset 5, -8
 704              		.cfi_offset 14, -4
 705 0002 89B0     		sub	sp, sp, #36
 706              	.LCFI16:
 707              		.cfi_def_cfa_offset 48
 491:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 708              		.loc 1 491 3 view .LVU206
 491:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 709              		.loc 1 491 26 is_stmt 0 view .LVU207
 710 0004 0024     		movs	r4, #0
 711 0006 0394     		str	r4, [sp, #12]
 712 0008 0494     		str	r4, [sp, #16]
 713 000a 0594     		str	r4, [sp, #20]
 714 000c 0694     		str	r4, [sp, #24]
 715 000e 0794     		str	r4, [sp, #28]
 492:Core/Src/main.c **** 
 716              		.loc 1 492 3 is_stmt 1 view .LVU208
 492:Core/Src/main.c **** 
 717              		.loc 1 492 27 is_stmt 0 view .LVU209
 718 0010 0194     		str	r4, [sp, #4]
 719 0012 0294     		str	r4, [sp, #8]
 497:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 720              		.loc 1 497 3 is_stmt 1 view .LVU210
 497:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 721              		.loc 1 497 18 is_stmt 0 view .LVU211
 722 0014 0F4D     		ldr	r5, .L31
 723 0016 104B     		ldr	r3, .L31+4
 724 0018 2B60     		str	r3, [r5]
 498:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 725              		.loc 1 498 3 is_stmt 1 view .LVU212
 498:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 726              		.loc 1 498 24 is_stmt 0 view .LVU213
 727 001a 6C60     		str	r4, [r5, #4]
 499:Core/Src/main.c ****   htim1.Init.Period = 65535;
 728              		.loc 1 499 3 is_stmt 1 view .LVU214
 499:Core/Src/main.c ****   htim1.Init.Period = 65535;
 729              		.loc 1 499 26 is_stmt 0 view .LVU215
 730 001c AC60     		str	r4, [r5, #8]
 500:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 731              		.loc 1 500 3 is_stmt 1 view .LVU216
 500:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 732              		.loc 1 500 21 is_stmt 0 view .LVU217
ARM GAS  /tmp/ccG1uW9V.s 			page 29


 733 001e 4FF6FF73 		movw	r3, #65535
 734 0022 EB60     		str	r3, [r5, #12]
 501:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 735              		.loc 1 501 3 is_stmt 1 view .LVU218
 501:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 736              		.loc 1 501 28 is_stmt 0 view .LVU219
 737 0024 2C61     		str	r4, [r5, #16]
 502:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 738              		.loc 1 502 3 is_stmt 1 view .LVU220
 502:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 739              		.loc 1 502 32 is_stmt 0 view .LVU221
 740 0026 6C61     		str	r4, [r5, #20]
 503:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 741              		.loc 1 503 3 is_stmt 1 view .LVU222
 503:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 742              		.loc 1 503 32 is_stmt 0 view .LVU223
 743 0028 AC61     		str	r4, [r5, #24]
 504:Core/Src/main.c ****   {
 744              		.loc 1 504 3 is_stmt 1 view .LVU224
 504:Core/Src/main.c ****   {
 745              		.loc 1 504 7 is_stmt 0 view .LVU225
 746 002a 2846     		mov	r0, r5
 747 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 748              	.LVL19:
 508:Core/Src/main.c ****   sSlaveConfig.InputTrigger = TIM_TS_TI2FP2;
 749              		.loc 1 508 3 is_stmt 1 view .LVU226
 508:Core/Src/main.c ****   sSlaveConfig.InputTrigger = TIM_TS_TI2FP2;
 750              		.loc 1 508 26 is_stmt 0 view .LVU227
 751 0030 0723     		movs	r3, #7
 752 0032 0393     		str	r3, [sp, #12]
 509:Core/Src/main.c ****   sSlaveConfig.TriggerPolarity = TIM_TRIGGERPOLARITY_RISING;
 753              		.loc 1 509 3 is_stmt 1 view .LVU228
 509:Core/Src/main.c ****   sSlaveConfig.TriggerPolarity = TIM_TRIGGERPOLARITY_RISING;
 754              		.loc 1 509 29 is_stmt 0 view .LVU229
 755 0034 6023     		movs	r3, #96
 756 0036 0493     		str	r3, [sp, #16]
 510:Core/Src/main.c ****   sSlaveConfig.TriggerFilter = 0;
 757              		.loc 1 510 3 is_stmt 1 view .LVU230
 510:Core/Src/main.c ****   sSlaveConfig.TriggerFilter = 0;
 758              		.loc 1 510 32 is_stmt 0 view .LVU231
 759 0038 0594     		str	r4, [sp, #20]
 511:Core/Src/main.c ****   if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 760              		.loc 1 511 3 is_stmt 1 view .LVU232
 511:Core/Src/main.c ****   if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 761              		.loc 1 511 30 is_stmt 0 view .LVU233
 762 003a 0794     		str	r4, [sp, #28]
 512:Core/Src/main.c ****   {
 763              		.loc 1 512 3 is_stmt 1 view .LVU234
 512:Core/Src/main.c ****   {
 764              		.loc 1 512 7 is_stmt 0 view .LVU235
 765 003c 03A9     		add	r1, sp, #12
 766 003e 2846     		mov	r0, r5
 767 0040 FFF7FEFF 		bl	HAL_TIM_SlaveConfigSynchro
 768              	.LVL20:
 516:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 769              		.loc 1 516 3 is_stmt 1 view .LVU236
 516:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  /tmp/ccG1uW9V.s 			page 30


 770              		.loc 1 516 37 is_stmt 0 view .LVU237
 771 0044 0194     		str	r4, [sp, #4]
 517:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 772              		.loc 1 517 3 is_stmt 1 view .LVU238
 517:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 773              		.loc 1 517 33 is_stmt 0 view .LVU239
 774 0046 0294     		str	r4, [sp, #8]
 518:Core/Src/main.c ****   {
 775              		.loc 1 518 3 is_stmt 1 view .LVU240
 518:Core/Src/main.c ****   {
 776              		.loc 1 518 7 is_stmt 0 view .LVU241
 777 0048 01A9     		add	r1, sp, #4
 778 004a 2846     		mov	r0, r5
 779 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 780              	.LVL21:
 526:Core/Src/main.c **** 
 781              		.loc 1 526 1 view .LVU242
 782 0050 09B0     		add	sp, sp, #36
 783              	.LCFI17:
 784              		.cfi_def_cfa_offset 12
 785              		@ sp needed
 786 0052 30BD     		pop	{r4, r5, pc}
 787              	.L32:
 788              		.align	2
 789              	.L31:
 790 0054 00000000 		.word	htim1
 791 0058 00000140 		.word	1073807360
 792              		.cfi_endproc
 793              	.LFE139:
 795              		.section	.text.MX_TIM5_Init,"ax",%progbits
 796              		.align	1
 797              		.syntax unified
 798              		.thumb
 799              		.thumb_func
 800              		.fpu fpv4-sp-d16
 802              	MX_TIM5_Init:
 803              	.LFB141:
 582:Core/Src/main.c **** 
 804              		.loc 1 582 1 is_stmt 1 view -0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 24
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808 0000 30B5     		push	{r4, r5, lr}
 809              	.LCFI18:
 810              		.cfi_def_cfa_offset 12
 811              		.cfi_offset 4, -12
 812              		.cfi_offset 5, -8
 813              		.cfi_offset 14, -4
 814 0002 87B0     		sub	sp, sp, #28
 815              	.LCFI19:
 816              		.cfi_def_cfa_offset 40
 588:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 817              		.loc 1 588 3 view .LVU244
 588:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 818              		.loc 1 588 26 is_stmt 0 view .LVU245
 819 0004 0024     		movs	r4, #0
 820 0006 0294     		str	r4, [sp, #8]
ARM GAS  /tmp/ccG1uW9V.s 			page 31


 821 0008 0394     		str	r4, [sp, #12]
 822 000a 0494     		str	r4, [sp, #16]
 823 000c 0594     		str	r4, [sp, #20]
 589:Core/Src/main.c **** 
 824              		.loc 1 589 3 is_stmt 1 view .LVU246
 589:Core/Src/main.c **** 
 825              		.loc 1 589 27 is_stmt 0 view .LVU247
 826 000e 0094     		str	r4, [sp]
 827 0010 0194     		str	r4, [sp, #4]
 594:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
 828              		.loc 1 594 3 is_stmt 1 view .LVU248
 594:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
 829              		.loc 1 594 18 is_stmt 0 view .LVU249
 830 0012 0E4D     		ldr	r5, .L35
 831 0014 0E4B     		ldr	r3, .L35+4
 832 0016 2B60     		str	r3, [r5]
 595:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 833              		.loc 1 595 3 is_stmt 1 view .LVU250
 595:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 834              		.loc 1 595 24 is_stmt 0 view .LVU251
 835 0018 6C60     		str	r4, [r5, #4]
 596:Core/Src/main.c ****   htim5.Init.Period = 64*1024*1024;
 836              		.loc 1 596 3 is_stmt 1 view .LVU252
 596:Core/Src/main.c ****   htim5.Init.Period = 64*1024*1024;
 837              		.loc 1 596 26 is_stmt 0 view .LVU253
 838 001a AC60     		str	r4, [r5, #8]
 597:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 839              		.loc 1 597 3 is_stmt 1 view .LVU254
 597:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 840              		.loc 1 597 21 is_stmt 0 view .LVU255
 841 001c 4FF08063 		mov	r3, #67108864
 842 0020 EB60     		str	r3, [r5, #12]
 598:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 843              		.loc 1 598 3 is_stmt 1 view .LVU256
 598:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 844              		.loc 1 598 28 is_stmt 0 view .LVU257
 845 0022 2C61     		str	r4, [r5, #16]
 599:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 846              		.loc 1 599 3 is_stmt 1 view .LVU258
 599:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 847              		.loc 1 599 32 is_stmt 0 view .LVU259
 848 0024 AC61     		str	r4, [r5, #24]
 600:Core/Src/main.c ****   {
 849              		.loc 1 600 3 is_stmt 1 view .LVU260
 600:Core/Src/main.c ****   {
 850              		.loc 1 600 7 is_stmt 0 view .LVU261
 851 0026 2846     		mov	r0, r5
 852 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 853              	.LVL22:
 604:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 854              		.loc 1 604 3 is_stmt 1 view .LVU262
 604:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 855              		.loc 1 604 34 is_stmt 0 view .LVU263
 856 002c 4FF48053 		mov	r3, #4096
 857 0030 0293     		str	r3, [sp, #8]
 605:Core/Src/main.c ****   {
 858              		.loc 1 605 3 is_stmt 1 view .LVU264
ARM GAS  /tmp/ccG1uW9V.s 			page 32


 605:Core/Src/main.c ****   {
 859              		.loc 1 605 7 is_stmt 0 view .LVU265
 860 0032 02A9     		add	r1, sp, #8
 861 0034 2846     		mov	r0, r5
 862 0036 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 863              	.LVL23:
 609:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 864              		.loc 1 609 3 is_stmt 1 view .LVU266
 609:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 865              		.loc 1 609 37 is_stmt 0 view .LVU267
 866 003a 0094     		str	r4, [sp]
 610:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 867              		.loc 1 610 3 is_stmt 1 view .LVU268
 610:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 868              		.loc 1 610 33 is_stmt 0 view .LVU269
 869 003c 0194     		str	r4, [sp, #4]
 611:Core/Src/main.c ****   {
 870              		.loc 1 611 3 is_stmt 1 view .LVU270
 611:Core/Src/main.c ****   {
 871              		.loc 1 611 7 is_stmt 0 view .LVU271
 872 003e 6946     		mov	r1, sp
 873 0040 2846     		mov	r0, r5
 874 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 875              	.LVL24:
 619:Core/Src/main.c **** 
 876              		.loc 1 619 1 view .LVU272
 877 0046 07B0     		add	sp, sp, #28
 878              	.LCFI20:
 879              		.cfi_def_cfa_offset 12
 880              		@ sp needed
 881 0048 30BD     		pop	{r4, r5, pc}
 882              	.L36:
 883 004a 00BF     		.align	2
 884              	.L35:
 885 004c 00000000 		.word	htim5
 886 0050 000C0040 		.word	1073744896
 887              		.cfi_endproc
 888              	.LFE141:
 890              		.section	.text.MX_ADC1_Init,"ax",%progbits
 891              		.align	1
 892              		.syntax unified
 893              		.thumb
 894              		.thumb_func
 895              		.fpu fpv4-sp-d16
 897              	MX_ADC1_Init:
 898              	.LFB132:
 197:Core/Src/main.c **** 
 899              		.loc 1 197 1 is_stmt 1 view -0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 16
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903 0000 70B5     		push	{r4, r5, r6, lr}
 904              	.LCFI21:
 905              		.cfi_def_cfa_offset 16
 906              		.cfi_offset 4, -16
 907              		.cfi_offset 5, -12
 908              		.cfi_offset 6, -8
ARM GAS  /tmp/ccG1uW9V.s 			page 33


 909              		.cfi_offset 14, -4
 910 0002 84B0     		sub	sp, sp, #16
 911              	.LCFI22:
 912              		.cfi_def_cfa_offset 32
 203:Core/Src/main.c **** 
 913              		.loc 1 203 3 view .LVU274
 203:Core/Src/main.c **** 
 914              		.loc 1 203 26 is_stmt 0 view .LVU275
 915 0004 0025     		movs	r5, #0
 916 0006 0095     		str	r5, [sp]
 917 0008 0195     		str	r5, [sp, #4]
 918 000a 0295     		str	r5, [sp, #8]
 919 000c 0395     		str	r5, [sp, #12]
 210:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV8;
 920              		.loc 1 210 3 is_stmt 1 view .LVU276
 210:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV8;
 921              		.loc 1 210 18 is_stmt 0 view .LVU277
 922 000e 104C     		ldr	r4, .L39
 923 0010 104B     		ldr	r3, .L39+4
 924 0012 2360     		str	r3, [r4]
 211:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 925              		.loc 1 211 3 is_stmt 1 view .LVU278
 211:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 926              		.loc 1 211 29 is_stmt 0 view .LVU279
 927 0014 4FF44033 		mov	r3, #196608
 928 0018 6360     		str	r3, [r4, #4]
 212:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 929              		.loc 1 212 3 is_stmt 1 view .LVU280
 212:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 930              		.loc 1 212 25 is_stmt 0 view .LVU281
 931 001a A560     		str	r5, [r4, #8]
 213:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 932              		.loc 1 213 3 is_stmt 1 view .LVU282
 213:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 933              		.loc 1 213 27 is_stmt 0 view .LVU283
 934 001c 2561     		str	r5, [r4, #16]
 214:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 935              		.loc 1 214 3 is_stmt 1 view .LVU284
 214:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 936              		.loc 1 214 33 is_stmt 0 view .LVU285
 937 001e 0126     		movs	r6, #1
 938 0020 2676     		strb	r6, [r4, #24]
 215:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 939              		.loc 1 215 3 is_stmt 1 view .LVU286
 215:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 940              		.loc 1 215 36 is_stmt 0 view .LVU287
 941 0022 84F82050 		strb	r5, [r4, #32]
 216:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 942              		.loc 1 216 3 is_stmt 1 view .LVU288
 216:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 943              		.loc 1 216 35 is_stmt 0 view .LVU289
 944 0026 E562     		str	r5, [r4, #44]
 217:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 945              		.loc 1 217 3 is_stmt 1 view .LVU290
 217:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 946              		.loc 1 217 31 is_stmt 0 view .LVU291
 947 0028 0B4B     		ldr	r3, .L39+8
ARM GAS  /tmp/ccG1uW9V.s 			page 34


 948 002a A362     		str	r3, [r4, #40]
 218:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 949              		.loc 1 218 3 is_stmt 1 view .LVU292
 218:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 950              		.loc 1 218 24 is_stmt 0 view .LVU293
 951 002c E560     		str	r5, [r4, #12]
 219:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 952              		.loc 1 219 3 is_stmt 1 view .LVU294
 219:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 953              		.loc 1 219 30 is_stmt 0 view .LVU295
 954 002e E661     		str	r6, [r4, #28]
 220:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 955              		.loc 1 220 3 is_stmt 1 view .LVU296
 220:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 956              		.loc 1 220 36 is_stmt 0 view .LVU297
 957 0030 84F83060 		strb	r6, [r4, #48]
 221:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 958              		.loc 1 221 3 is_stmt 1 view .LVU298
 221:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 959              		.loc 1 221 27 is_stmt 0 view .LVU299
 960 0034 6661     		str	r6, [r4, #20]
 222:Core/Src/main.c ****   {
 961              		.loc 1 222 3 is_stmt 1 view .LVU300
 222:Core/Src/main.c ****   {
 962              		.loc 1 222 7 is_stmt 0 view .LVU301
 963 0036 2046     		mov	r0, r4
 964 0038 FFF7FEFF 		bl	HAL_ADC_Init
 965              	.LVL25:
 228:Core/Src/main.c ****   sConfig.Rank = 1;
 966              		.loc 1 228 3 is_stmt 1 view .LVU302
 228:Core/Src/main.c ****   sConfig.Rank = 1;
 967              		.loc 1 228 19 is_stmt 0 view .LVU303
 968 003c 0095     		str	r5, [sp]
 229:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 969              		.loc 1 229 3 is_stmt 1 view .LVU304
 229:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 970              		.loc 1 229 16 is_stmt 0 view .LVU305
 971 003e 0196     		str	r6, [sp, #4]
 230:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 972              		.loc 1 230 3 is_stmt 1 view .LVU306
 230:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 973              		.loc 1 230 24 is_stmt 0 view .LVU307
 974 0040 0295     		str	r5, [sp, #8]
 231:Core/Src/main.c ****   {
 975              		.loc 1 231 3 is_stmt 1 view .LVU308
 231:Core/Src/main.c ****   {
 976              		.loc 1 231 7 is_stmt 0 view .LVU309
 977 0042 6946     		mov	r1, sp
 978 0044 2046     		mov	r0, r4
 979 0046 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 980              	.LVL26:
 239:Core/Src/main.c **** 
 981              		.loc 1 239 1 view .LVU310
 982 004a 04B0     		add	sp, sp, #16
 983              	.LCFI23:
 984              		.cfi_def_cfa_offset 16
 985              		@ sp needed
ARM GAS  /tmp/ccG1uW9V.s 			page 35


 986 004c 70BD     		pop	{r4, r5, r6, pc}
 987              	.L40:
 988 004e 00BF     		.align	2
 989              	.L39:
 990 0050 00000000 		.word	hadc1
 991 0054 00200140 		.word	1073815552
 992 0058 0100000F 		.word	251658241
 993              		.cfi_endproc
 994              	.LFE132:
 996              		.section	.text.MX_ADC2_Init,"ax",%progbits
 997              		.align	1
 998              		.syntax unified
 999              		.thumb
 1000              		.thumb_func
 1001              		.fpu fpv4-sp-d16
 1003              	MX_ADC2_Init:
 1004              	.LFB133:
 247:Core/Src/main.c **** 
 1005              		.loc 1 247 1 is_stmt 1 view -0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 16
 1008              		@ frame_needed = 0, uses_anonymous_args = 0
 1009 0000 70B5     		push	{r4, r5, r6, lr}
 1010              	.LCFI24:
 1011              		.cfi_def_cfa_offset 16
 1012              		.cfi_offset 4, -16
 1013              		.cfi_offset 5, -12
 1014              		.cfi_offset 6, -8
 1015              		.cfi_offset 14, -4
 1016 0002 84B0     		sub	sp, sp, #16
 1017              	.LCFI25:
 1018              		.cfi_def_cfa_offset 32
 253:Core/Src/main.c **** 
 1019              		.loc 1 253 3 view .LVU312
 253:Core/Src/main.c **** 
 1020              		.loc 1 253 26 is_stmt 0 view .LVU313
 1021 0004 0025     		movs	r5, #0
 1022 0006 0095     		str	r5, [sp]
 1023 0008 0195     		str	r5, [sp, #4]
 1024 000a 0295     		str	r5, [sp, #8]
 1025 000c 0395     		str	r5, [sp, #12]
 260:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV8;
 1026              		.loc 1 260 3 is_stmt 1 view .LVU314
 260:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV8;
 1027              		.loc 1 260 18 is_stmt 0 view .LVU315
 1028 000e 104C     		ldr	r4, .L43
 1029 0010 104B     		ldr	r3, .L43+4
 1030 0012 2360     		str	r3, [r4]
 261:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 1031              		.loc 1 261 3 is_stmt 1 view .LVU316
 261:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 1032              		.loc 1 261 29 is_stmt 0 view .LVU317
 1033 0014 4FF44033 		mov	r3, #196608
 1034 0018 6360     		str	r3, [r4, #4]
 262:Core/Src/main.c ****   hadc2.Init.ScanConvMode = DISABLE;
 1035              		.loc 1 262 3 is_stmt 1 view .LVU318
 262:Core/Src/main.c ****   hadc2.Init.ScanConvMode = DISABLE;
ARM GAS  /tmp/ccG1uW9V.s 			page 36


 1036              		.loc 1 262 25 is_stmt 0 view .LVU319
 1037 001a A560     		str	r5, [r4, #8]
 263:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = ENABLE;
 1038              		.loc 1 263 3 is_stmt 1 view .LVU320
 263:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = ENABLE;
 1039              		.loc 1 263 27 is_stmt 0 view .LVU321
 1040 001c 2561     		str	r5, [r4, #16]
 264:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 1041              		.loc 1 264 3 is_stmt 1 view .LVU322
 264:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 1042              		.loc 1 264 33 is_stmt 0 view .LVU323
 1043 001e 0126     		movs	r6, #1
 1044 0020 2676     		strb	r6, [r4, #24]
 265:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1045              		.loc 1 265 3 is_stmt 1 view .LVU324
 265:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1046              		.loc 1 265 36 is_stmt 0 view .LVU325
 1047 0022 84F82050 		strb	r5, [r4, #32]
 266:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1048              		.loc 1 266 3 is_stmt 1 view .LVU326
 266:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1049              		.loc 1 266 35 is_stmt 0 view .LVU327
 1050 0026 E562     		str	r5, [r4, #44]
 267:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1051              		.loc 1 267 3 is_stmt 1 view .LVU328
 267:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1052              		.loc 1 267 31 is_stmt 0 view .LVU329
 1053 0028 0B4B     		ldr	r3, .L43+8
 1054 002a A362     		str	r3, [r4, #40]
 268:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
 1055              		.loc 1 268 3 is_stmt 1 view .LVU330
 268:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
 1056              		.loc 1 268 24 is_stmt 0 view .LVU331
 1057 002c E560     		str	r5, [r4, #12]
 269:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 1058              		.loc 1 269 3 is_stmt 1 view .LVU332
 269:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 1059              		.loc 1 269 30 is_stmt 0 view .LVU333
 1060 002e E661     		str	r6, [r4, #28]
 270:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1061              		.loc 1 270 3 is_stmt 1 view .LVU334
 270:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1062              		.loc 1 270 36 is_stmt 0 view .LVU335
 1063 0030 84F83060 		strb	r6, [r4, #48]
 271:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 1064              		.loc 1 271 3 is_stmt 1 view .LVU336
 271:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 1065              		.loc 1 271 27 is_stmt 0 view .LVU337
 1066 0034 6661     		str	r6, [r4, #20]
 272:Core/Src/main.c ****   {
 1067              		.loc 1 272 3 is_stmt 1 view .LVU338
 272:Core/Src/main.c ****   {
 1068              		.loc 1 272 7 is_stmt 0 view .LVU339
 1069 0036 2046     		mov	r0, r4
 1070 0038 FFF7FEFF 		bl	HAL_ADC_Init
 1071              	.LVL27:
 278:Core/Src/main.c ****   sConfig.Rank = 1;
ARM GAS  /tmp/ccG1uW9V.s 			page 37


 1072              		.loc 1 278 3 is_stmt 1 view .LVU340
 278:Core/Src/main.c ****   sConfig.Rank = 1;
 1073              		.loc 1 278 19 is_stmt 0 view .LVU341
 1074 003c 0096     		str	r6, [sp]
 279:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1075              		.loc 1 279 3 is_stmt 1 view .LVU342
 279:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1076              		.loc 1 279 16 is_stmt 0 view .LVU343
 1077 003e 0196     		str	r6, [sp, #4]
 280:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 1078              		.loc 1 280 3 is_stmt 1 view .LVU344
 280:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 1079              		.loc 1 280 24 is_stmt 0 view .LVU345
 1080 0040 0295     		str	r5, [sp, #8]
 281:Core/Src/main.c ****   {
 1081              		.loc 1 281 3 is_stmt 1 view .LVU346
 281:Core/Src/main.c ****   {
 1082              		.loc 1 281 7 is_stmt 0 view .LVU347
 1083 0042 6946     		mov	r1, sp
 1084 0044 2046     		mov	r0, r4
 1085 0046 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1086              	.LVL28:
 289:Core/Src/main.c **** 
 1087              		.loc 1 289 1 view .LVU348
 1088 004a 04B0     		add	sp, sp, #16
 1089              	.LCFI26:
 1090              		.cfi_def_cfa_offset 16
 1091              		@ sp needed
 1092 004c 70BD     		pop	{r4, r5, r6, pc}
 1093              	.L44:
 1094 004e 00BF     		.align	2
 1095              	.L43:
 1096 0050 00000000 		.word	hadc2
 1097 0054 00210140 		.word	1073815808
 1098 0058 0100000F 		.word	251658241
 1099              		.cfi_endproc
 1100              	.LFE133:
 1102              		.section	.text.MX_CAN1_Init,"ax",%progbits
 1103              		.align	1
 1104              		.syntax unified
 1105              		.thumb
 1106              		.thumb_func
 1107              		.fpu fpv4-sp-d16
 1109              	MX_CAN1_Init:
 1110              	.LFB134:
 297:Core/Src/main.c **** 
 1111              		.loc 1 297 1 is_stmt 1 view -0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 0
 1114              		@ frame_needed = 0, uses_anonymous_args = 0
 1115 0000 08B5     		push	{r3, lr}
 1116              	.LCFI27:
 1117              		.cfi_def_cfa_offset 8
 1118              		.cfi_offset 3, -8
 1119              		.cfi_offset 14, -4
 306:Core/Src/main.c ****   hcan1.Init.Prescaler = 3;
 1120              		.loc 1 306 3 view .LVU350
ARM GAS  /tmp/ccG1uW9V.s 			page 38


 306:Core/Src/main.c ****   hcan1.Init.Prescaler = 3;
 1121              		.loc 1 306 18 is_stmt 0 view .LVU351
 1122 0002 0B48     		ldr	r0, .L47
 1123 0004 0B4B     		ldr	r3, .L47+4
 1124 0006 0360     		str	r3, [r0]
 307:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1125              		.loc 1 307 3 is_stmt 1 view .LVU352
 307:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1126              		.loc 1 307 24 is_stmt 0 view .LVU353
 1127 0008 0323     		movs	r3, #3
 1128 000a 4360     		str	r3, [r0, #4]
 308:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1129              		.loc 1 308 3 is_stmt 1 view .LVU354
 308:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1130              		.loc 1 308 19 is_stmt 0 view .LVU355
 1131 000c 0023     		movs	r3, #0
 1132 000e 8360     		str	r3, [r0, #8]
 309:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_13TQ;
 1133              		.loc 1 309 3 is_stmt 1 view .LVU356
 309:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_13TQ;
 1134              		.loc 1 309 28 is_stmt 0 view .LVU357
 1135 0010 C360     		str	r3, [r0, #12]
 310:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 1136              		.loc 1 310 3 is_stmt 1 view .LVU358
 310:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 1137              		.loc 1 310 23 is_stmt 0 view .LVU359
 1138 0012 4FF44022 		mov	r2, #786432
 1139 0016 0261     		str	r2, [r0, #16]
 311:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1140              		.loc 1 311 3 is_stmt 1 view .LVU360
 311:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1141              		.loc 1 311 23 is_stmt 0 view .LVU361
 1142 0018 4FF48012 		mov	r2, #1048576
 1143 001c 4261     		str	r2, [r0, #20]
 312:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 1144              		.loc 1 312 3 is_stmt 1 view .LVU362
 312:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 1145              		.loc 1 312 32 is_stmt 0 view .LVU363
 1146 001e 0376     		strb	r3, [r0, #24]
 313:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 1147              		.loc 1 313 3 is_stmt 1 view .LVU364
 313:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 1148              		.loc 1 313 25 is_stmt 0 view .LVU365
 1149 0020 4376     		strb	r3, [r0, #25]
 314:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 1150              		.loc 1 314 3 is_stmt 1 view .LVU366
 314:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 1151              		.loc 1 314 25 is_stmt 0 view .LVU367
 1152 0022 8376     		strb	r3, [r0, #26]
 315:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 1153              		.loc 1 315 3 is_stmt 1 view .LVU368
 315:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 1154              		.loc 1 315 33 is_stmt 0 view .LVU369
 1155 0024 C376     		strb	r3, [r0, #27]
 316:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 1156              		.loc 1 316 3 is_stmt 1 view .LVU370
 316:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
ARM GAS  /tmp/ccG1uW9V.s 			page 39


 1157              		.loc 1 316 32 is_stmt 0 view .LVU371
 1158 0026 0377     		strb	r3, [r0, #28]
 317:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1159              		.loc 1 317 3 is_stmt 1 view .LVU372
 317:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1160              		.loc 1 317 35 is_stmt 0 view .LVU373
 1161 0028 4377     		strb	r3, [r0, #29]
 318:Core/Src/main.c ****   {
 1162              		.loc 1 318 3 is_stmt 1 view .LVU374
 318:Core/Src/main.c ****   {
 1163              		.loc 1 318 7 is_stmt 0 view .LVU375
 1164 002a FFF7FEFF 		bl	HAL_CAN_Init
 1165              	.LVL29:
 326:Core/Src/main.c **** 
 1166              		.loc 1 326 1 view .LVU376
 1167 002e 08BD     		pop	{r3, pc}
 1168              	.L48:
 1169              		.align	2
 1170              	.L47:
 1171 0030 00000000 		.word	hcan1
 1172 0034 00640040 		.word	1073767424
 1173              		.cfi_endproc
 1174              	.LFE134:
 1176              		.section	.text.MX_CAN2_Init,"ax",%progbits
 1177              		.align	1
 1178              		.syntax unified
 1179              		.thumb
 1180              		.thumb_func
 1181              		.fpu fpv4-sp-d16
 1183              	MX_CAN2_Init:
 1184              	.LFB135:
 334:Core/Src/main.c **** 
 1185              		.loc 1 334 1 is_stmt 1 view -0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 0
 1188              		@ frame_needed = 0, uses_anonymous_args = 0
 1189 0000 08B5     		push	{r3, lr}
 1190              	.LCFI28:
 1191              		.cfi_def_cfa_offset 8
 1192              		.cfi_offset 3, -8
 1193              		.cfi_offset 14, -4
 343:Core/Src/main.c ****   hcan2.Init.Prescaler = 3;
 1194              		.loc 1 343 3 view .LVU378
 343:Core/Src/main.c ****   hcan2.Init.Prescaler = 3;
 1195              		.loc 1 343 18 is_stmt 0 view .LVU379
 1196 0002 0B48     		ldr	r0, .L51
 1197 0004 0B4B     		ldr	r3, .L51+4
 1198 0006 0360     		str	r3, [r0]
 344:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 1199              		.loc 1 344 3 is_stmt 1 view .LVU380
 344:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 1200              		.loc 1 344 24 is_stmt 0 view .LVU381
 1201 0008 0323     		movs	r3, #3
 1202 000a 4360     		str	r3, [r0, #4]
 345:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1203              		.loc 1 345 3 is_stmt 1 view .LVU382
 345:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
ARM GAS  /tmp/ccG1uW9V.s 			page 40


 1204              		.loc 1 345 19 is_stmt 0 view .LVU383
 1205 000c 0023     		movs	r3, #0
 1206 000e 8360     		str	r3, [r0, #8]
 346:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_13TQ;
 1207              		.loc 1 346 3 is_stmt 1 view .LVU384
 346:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_13TQ;
 1208              		.loc 1 346 28 is_stmt 0 view .LVU385
 1209 0010 C360     		str	r3, [r0, #12]
 347:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_2TQ;
 1210              		.loc 1 347 3 is_stmt 1 view .LVU386
 347:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_2TQ;
 1211              		.loc 1 347 23 is_stmt 0 view .LVU387
 1212 0012 4FF44022 		mov	r2, #786432
 1213 0016 0261     		str	r2, [r0, #16]
 348:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 1214              		.loc 1 348 3 is_stmt 1 view .LVU388
 348:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 1215              		.loc 1 348 23 is_stmt 0 view .LVU389
 1216 0018 4FF48012 		mov	r2, #1048576
 1217 001c 4261     		str	r2, [r0, #20]
 349:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
 1218              		.loc 1 349 3 is_stmt 1 view .LVU390
 349:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
 1219              		.loc 1 349 32 is_stmt 0 view .LVU391
 1220 001e 0376     		strb	r3, [r0, #24]
 350:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 1221              		.loc 1 350 3 is_stmt 1 view .LVU392
 350:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 1222              		.loc 1 350 25 is_stmt 0 view .LVU393
 1223 0020 4376     		strb	r3, [r0, #25]
 351:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 1224              		.loc 1 351 3 is_stmt 1 view .LVU394
 351:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 1225              		.loc 1 351 25 is_stmt 0 view .LVU395
 1226 0022 8376     		strb	r3, [r0, #26]
 352:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 1227              		.loc 1 352 3 is_stmt 1 view .LVU396
 352:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 1228              		.loc 1 352 33 is_stmt 0 view .LVU397
 1229 0024 C376     		strb	r3, [r0, #27]
 353:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 1230              		.loc 1 353 3 is_stmt 1 view .LVU398
 353:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 1231              		.loc 1 353 32 is_stmt 0 view .LVU399
 1232 0026 0377     		strb	r3, [r0, #28]
 354:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 1233              		.loc 1 354 3 is_stmt 1 view .LVU400
 354:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 1234              		.loc 1 354 35 is_stmt 0 view .LVU401
 1235 0028 4377     		strb	r3, [r0, #29]
 355:Core/Src/main.c ****   {
 1236              		.loc 1 355 3 is_stmt 1 view .LVU402
 355:Core/Src/main.c ****   {
 1237              		.loc 1 355 7 is_stmt 0 view .LVU403
 1238 002a FFF7FEFF 		bl	HAL_CAN_Init
 1239              	.LVL30:
 363:Core/Src/main.c **** 
ARM GAS  /tmp/ccG1uW9V.s 			page 41


 1240              		.loc 1 363 1 view .LVU404
 1241 002e 08BD     		pop	{r3, pc}
 1242              	.L52:
 1243              		.align	2
 1244              	.L51:
 1245 0030 00000000 		.word	hcan2
 1246 0034 00680040 		.word	1073768448
 1247              		.cfi_endproc
 1248              	.LFE135:
 1250              		.section	.text.SystemClock_Config,"ax",%progbits
 1251              		.align	1
 1252              		.global	SystemClock_Config
 1253              		.syntax unified
 1254              		.thumb
 1255              		.thumb_func
 1256              		.fpu fpv4-sp-d16
 1258              	SystemClock_Config:
 1259              	.LFB131:
 151:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1260              		.loc 1 151 1 is_stmt 1 view -0
 1261              		.cfi_startproc
 1262              		@ args = 0, pretend = 0, frame = 80
 1263              		@ frame_needed = 0, uses_anonymous_args = 0
 1264 0000 30B5     		push	{r4, r5, lr}
 1265              	.LCFI29:
 1266              		.cfi_def_cfa_offset 12
 1267              		.cfi_offset 4, -12
 1268              		.cfi_offset 5, -8
 1269              		.cfi_offset 14, -4
 1270 0002 95B0     		sub	sp, sp, #84
 1271              	.LCFI30:
 1272              		.cfi_def_cfa_offset 96
 152:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1273              		.loc 1 152 3 view .LVU406
 152:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1274              		.loc 1 152 22 is_stmt 0 view .LVU407
 1275 0004 3022     		movs	r2, #48
 1276 0006 0021     		movs	r1, #0
 1277 0008 08A8     		add	r0, sp, #32
 1278 000a FFF7FEFF 		bl	memset
 1279              	.LVL31:
 153:Core/Src/main.c **** 
 1280              		.loc 1 153 3 is_stmt 1 view .LVU408
 153:Core/Src/main.c **** 
 1281              		.loc 1 153 22 is_stmt 0 view .LVU409
 1282 000e 0024     		movs	r4, #0
 1283 0010 0394     		str	r4, [sp, #12]
 1284 0012 0494     		str	r4, [sp, #16]
 1285 0014 0594     		str	r4, [sp, #20]
 1286 0016 0694     		str	r4, [sp, #24]
 1287 0018 0794     		str	r4, [sp, #28]
 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1288              		.loc 1 157 3 is_stmt 1 view .LVU410
 1289              	.LBB8:
 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1290              		.loc 1 157 3 view .LVU411
 1291 001a 0194     		str	r4, [sp, #4]
ARM GAS  /tmp/ccG1uW9V.s 			page 42


 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1292              		.loc 1 157 3 view .LVU412
 1293 001c 1D4B     		ldr	r3, .L55
 1294 001e 1A6C     		ldr	r2, [r3, #64]
 1295 0020 42F08052 		orr	r2, r2, #268435456
 1296 0024 1A64     		str	r2, [r3, #64]
 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1297              		.loc 1 157 3 view .LVU413
 1298 0026 1B6C     		ldr	r3, [r3, #64]
 1299 0028 03F08053 		and	r3, r3, #268435456
 1300 002c 0193     		str	r3, [sp, #4]
 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1301              		.loc 1 157 3 view .LVU414
 1302 002e 019B     		ldr	r3, [sp, #4]
 1303              	.LBE8:
 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1304              		.loc 1 157 3 view .LVU415
 158:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1305              		.loc 1 158 3 view .LVU416
 1306              	.LBB9:
 158:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1307              		.loc 1 158 3 view .LVU417
 1308 0030 0294     		str	r4, [sp, #8]
 158:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1309              		.loc 1 158 3 view .LVU418
 1310 0032 194B     		ldr	r3, .L55+4
 1311 0034 1A68     		ldr	r2, [r3]
 1312 0036 42F48042 		orr	r2, r2, #16384
 1313 003a 1A60     		str	r2, [r3]
 158:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1314              		.loc 1 158 3 view .LVU419
 1315 003c 1B68     		ldr	r3, [r3]
 1316 003e 03F48043 		and	r3, r3, #16384
 1317 0042 0293     		str	r3, [sp, #8]
 158:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1318              		.loc 1 158 3 view .LVU420
 1319 0044 029B     		ldr	r3, [sp, #8]
 1320              	.LBE9:
 158:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1321              		.loc 1 158 3 view .LVU421
 162:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1322              		.loc 1 162 3 view .LVU422
 162:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1323              		.loc 1 162 36 is_stmt 0 view .LVU423
 1324 0046 0225     		movs	r5, #2
 1325 0048 0895     		str	r5, [sp, #32]
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1326              		.loc 1 163 3 is_stmt 1 view .LVU424
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1327              		.loc 1 163 30 is_stmt 0 view .LVU425
 1328 004a 0123     		movs	r3, #1
 1329 004c 0B93     		str	r3, [sp, #44]
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1330              		.loc 1 164 3 is_stmt 1 view .LVU426
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1331              		.loc 1 164 41 is_stmt 0 view .LVU427
 1332 004e 1023     		movs	r3, #16
ARM GAS  /tmp/ccG1uW9V.s 			page 43


 1333 0050 0C93     		str	r3, [sp, #48]
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1334              		.loc 1 165 3 is_stmt 1 view .LVU428
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1335              		.loc 1 165 34 is_stmt 0 view .LVU429
 1336 0052 0E95     		str	r5, [sp, #56]
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1337              		.loc 1 166 3 is_stmt 1 view .LVU430
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1338              		.loc 1 166 35 is_stmt 0 view .LVU431
 1339 0054 0F94     		str	r4, [sp, #60]
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 1340              		.loc 1 167 3 is_stmt 1 view .LVU432
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 1341              		.loc 1 167 30 is_stmt 0 view .LVU433
 1342 0056 0823     		movs	r3, #8
 1343 0058 1093     		str	r3, [sp, #64]
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1344              		.loc 1 168 3 is_stmt 1 view .LVU434
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1345              		.loc 1 168 30 is_stmt 0 view .LVU435
 1346 005a C023     		movs	r3, #192
 1347 005c 1193     		str	r3, [sp, #68]
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1348              		.loc 1 169 3 is_stmt 1 view .LVU436
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1349              		.loc 1 169 30 is_stmt 0 view .LVU437
 1350 005e 0423     		movs	r3, #4
 1351 0060 1293     		str	r3, [sp, #72]
 170:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1352              		.loc 1 170 3 is_stmt 1 view .LVU438
 170:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1353              		.loc 1 170 30 is_stmt 0 view .LVU439
 1354 0062 1393     		str	r3, [sp, #76]
 171:Core/Src/main.c ****   {
 1355              		.loc 1 171 3 is_stmt 1 view .LVU440
 171:Core/Src/main.c ****   {
 1356              		.loc 1 171 7 is_stmt 0 view .LVU441
 1357 0064 08A8     		add	r0, sp, #32
 1358 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1359              	.LVL32:
 177:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1360              		.loc 1 177 3 is_stmt 1 view .LVU442
 177:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1361              		.loc 1 177 31 is_stmt 0 view .LVU443
 1362 006a 0F23     		movs	r3, #15
 1363 006c 0393     		str	r3, [sp, #12]
 179:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1364              		.loc 1 179 3 is_stmt 1 view .LVU444
 179:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1365              		.loc 1 179 34 is_stmt 0 view .LVU445
 1366 006e 0495     		str	r5, [sp, #16]
 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1367              		.loc 1 180 3 is_stmt 1 view .LVU446
 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1368              		.loc 1 180 35 is_stmt 0 view .LVU447
 1369 0070 0594     		str	r4, [sp, #20]
ARM GAS  /tmp/ccG1uW9V.s 			page 44


 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1370              		.loc 1 181 3 is_stmt 1 view .LVU448
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1371              		.loc 1 181 36 is_stmt 0 view .LVU449
 1372 0072 4FF4A053 		mov	r3, #5120
 1373 0076 0693     		str	r3, [sp, #24]
 182:Core/Src/main.c **** 
 1374              		.loc 1 182 3 is_stmt 1 view .LVU450
 182:Core/Src/main.c **** 
 1375              		.loc 1 182 36 is_stmt 0 view .LVU451
 1376 0078 4FF48053 		mov	r3, #4096
 1377 007c 0793     		str	r3, [sp, #28]
 184:Core/Src/main.c ****   {
 1378              		.loc 1 184 3 is_stmt 1 view .LVU452
 184:Core/Src/main.c ****   {
 1379              		.loc 1 184 7 is_stmt 0 view .LVU453
 1380 007e 0321     		movs	r1, #3
 1381 0080 03A8     		add	r0, sp, #12
 1382 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1383              	.LVL33:
 188:Core/Src/main.c **** }
 1384              		.loc 1 188 3 is_stmt 1 view .LVU454
 1385 0086 2246     		mov	r2, r4
 1386 0088 2146     		mov	r1, r4
 1387 008a 2046     		mov	r0, r4
 1388 008c FFF7FEFF 		bl	HAL_RCC_MCOConfig
 1389              	.LVL34:
 189:Core/Src/main.c **** 
 1390              		.loc 1 189 1 is_stmt 0 view .LVU455
 1391 0090 15B0     		add	sp, sp, #84
 1392              	.LCFI31:
 1393              		.cfi_def_cfa_offset 12
 1394              		@ sp needed
 1395 0092 30BD     		pop	{r4, r5, pc}
 1396              	.L56:
 1397              		.align	2
 1398              	.L55:
 1399 0094 00380240 		.word	1073887232
 1400 0098 00700040 		.word	1073770496
 1401              		.cfi_endproc
 1402              	.LFE131:
 1404              		.section	.text.main,"ax",%progbits
 1405              		.align	1
 1406              		.global	main
 1407              		.syntax unified
 1408              		.thumb
 1409              		.thumb_func
 1410              		.fpu fpv4-sp-d16
 1412              	main:
 1413              	.LFB130:
  96:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1414              		.loc 1 96 1 is_stmt 1 view -0
 1415              		.cfi_startproc
 1416              		@ Volatile: function does not return.
 1417              		@ args = 0, pretend = 0, frame = 0
 1418              		@ frame_needed = 0, uses_anonymous_args = 0
 1419 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccG1uW9V.s 			page 45


 1420              	.LCFI32:
 1421              		.cfi_def_cfa_offset 8
 1422              		.cfi_offset 3, -8
 1423              		.cfi_offset 14, -4
 104:Core/Src/main.c **** 
 1424              		.loc 1 104 3 view .LVU457
 1425 0002 FFF7FEFF 		bl	HAL_Init
 1426              	.LVL35:
 111:Core/Src/main.c **** 
 1427              		.loc 1 111 3 view .LVU458
 1428 0006 FFF7FEFF 		bl	SystemClock_Config
 1429              	.LVL36:
 118:Core/Src/main.c ****   MX_DMA_Init();
 1430              		.loc 1 118 3 view .LVU459
 1431 000a FFF7FEFF 		bl	MX_GPIO_Init
 1432              	.LVL37:
 119:Core/Src/main.c ****   MX_SPI1_Init();
 1433              		.loc 1 119 3 view .LVU460
 1434 000e FFF7FEFF 		bl	MX_DMA_Init
 1435              	.LVL38:
 120:Core/Src/main.c ****   MX_USART2_UART_Init();
 1436              		.loc 1 120 3 view .LVU461
 1437 0012 FFF7FEFF 		bl	MX_SPI1_Init
 1438              	.LVL39:
 121:Core/Src/main.c ****   MX_DAC_Init();
 1439              		.loc 1 121 3 view .LVU462
 1440 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
 1441              	.LVL40:
 122:Core/Src/main.c ****   MX_TIM4_Init();
 1442              		.loc 1 122 3 view .LVU463
 1443 001a FFF7FEFF 		bl	MX_DAC_Init
 1444              	.LVL41:
 123:Core/Src/main.c ****   MX_TIM1_Init();
 1445              		.loc 1 123 3 view .LVU464
 1446 001e FFF7FEFF 		bl	MX_TIM4_Init
 1447              	.LVL42:
 124:Core/Src/main.c ****   MX_TIM5_Init();
 1448              		.loc 1 124 3 view .LVU465
 1449 0022 FFF7FEFF 		bl	MX_TIM1_Init
 1450              	.LVL43:
 125:Core/Src/main.c ****   MX_SPI2_Init();
 1451              		.loc 1 125 3 view .LVU466
 1452 0026 FFF7FEFF 		bl	MX_TIM5_Init
 1453              	.LVL44:
 126:Core/Src/main.c ****   MX_ADC1_Init();
 1454              		.loc 1 126 3 view .LVU467
 1455 002a FFF7FEFF 		bl	MX_SPI2_Init
 1456              	.LVL45:
 127:Core/Src/main.c ****   MX_ADC2_Init();
 1457              		.loc 1 127 3 view .LVU468
 1458 002e FFF7FEFF 		bl	MX_ADC1_Init
 1459              	.LVL46:
 128:Core/Src/main.c ****   MX_CAN1_Init();
 1460              		.loc 1 128 3 view .LVU469
 1461 0032 FFF7FEFF 		bl	MX_ADC2_Init
 1462              	.LVL47:
 129:Core/Src/main.c ****   MX_CAN2_Init();
ARM GAS  /tmp/ccG1uW9V.s 			page 46


 1463              		.loc 1 129 3 view .LVU470
 1464 0036 FFF7FEFF 		bl	MX_CAN1_Init
 1465              	.LVL48:
 130:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1466              		.loc 1 130 3 view .LVU471
 1467 003a FFF7FEFF 		bl	MX_CAN2_Init
 1468              	.LVL49:
 1469              	.L58:
 137:Core/Src/main.c ****   {
 1470              		.loc 1 137 3 discriminator 1 view .LVU472
 140:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 1471              		.loc 1 140 5 discriminator 1 view .LVU473
 1472 003e FFF7FEFF 		bl	mainLoop1
 1473              	.LVL50:
 137:Core/Src/main.c ****   {
 1474              		.loc 1 137 9 discriminator 1 view .LVU474
 1475 0042 FCE7     		b	.L58
 1476              		.cfi_endproc
 1477              	.LFE130:
 1479              		.section	.text.Error_Handler,"ax",%progbits
 1480              		.align	1
 1481              		.global	Error_Handler
 1482              		.syntax unified
 1483              		.thumb
 1484              		.thumb_func
 1485              		.fpu fpv4-sp-d16
 1487              	Error_Handler:
 1488              	.LFB145:
 721:Core/Src/main.c **** 
 722:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 723:Core/Src/main.c **** 
 724:Core/Src/main.c **** /* USER CODE END 4 */
 725:Core/Src/main.c **** 
 726:Core/Src/main.c **** /**
 727:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 728:Core/Src/main.c ****   * @retval None
 729:Core/Src/main.c ****   */
 730:Core/Src/main.c **** void Error_Handler(void)
 731:Core/Src/main.c **** {
 1489              		.loc 1 731 1 view -0
 1490              		.cfi_startproc
 1491              		@ args = 0, pretend = 0, frame = 0
 1492              		@ frame_needed = 0, uses_anonymous_args = 0
 1493              		@ link register save eliminated.
 732:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 733:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 734:Core/Src/main.c **** 
 735:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 736:Core/Src/main.c **** }
 1494              		.loc 1 736 1 view .LVU476
 1495 0000 7047     		bx	lr
 1496              		.cfi_endproc
 1497              	.LFE145:
 1499              		.comm	hdma_usart2_tx,96,4
 1500              		.comm	huart2,64,4
 1501              		.comm	htim5,64,4
 1502              		.comm	htim4,64,4
ARM GAS  /tmp/ccG1uW9V.s 			page 47


 1503              		.comm	htim1,64,4
 1504              		.comm	hspi2,88,4
 1505              		.comm	hspi1,88,4
 1506              		.comm	hdac,20,4
 1507              		.comm	hcan2,40,4
 1508              		.comm	hcan1,40,4
 1509              		.comm	hdma_adc2,96,4
 1510              		.comm	hdma_adc1,96,4
 1511              		.comm	hadc2,72,4
 1512              		.comm	hadc1,72,4
 1513              		.text
 1514              	.Letext0:
 1515              		.file 2 "/home/cahill/stm32cubeMx/install_bin/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/inc
 1516              		.file 3 "/home/cahill/stm32cubeMx/install_bin/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/inc
 1517              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1518              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1519              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1520              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1521              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1522              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1523              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1524              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1525              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1526              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1527              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1528              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 1529              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1530              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1531              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1532              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1533              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1534              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1535              		.file 22 "Core/Inc/mainLoop.h"
 1536              		.file 23 "<built-in>"
ARM GAS  /tmp/ccG1uW9V.s 			page 48


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccG1uW9V.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccG1uW9V.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccG1uW9V.s:198    .text.MX_GPIO_Init:00000000000000c4 $d
     /tmp/ccG1uW9V.s:206    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccG1uW9V.s:212    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccG1uW9V.s:299    .text.MX_DMA_Init:0000000000000064 $d
     /tmp/ccG1uW9V.s:304    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccG1uW9V.s:310    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccG1uW9V.s:374    .text.MX_SPI1_Init:0000000000000038 $d
                            *COM*:0000000000000058 hspi1
     /tmp/ccG1uW9V.s:380    .text.MX_SPI2_Init:0000000000000000 $t
     /tmp/ccG1uW9V.s:386    .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
     /tmp/ccG1uW9V.s:450    .text.MX_SPI2_Init:0000000000000038 $d
                            *COM*:0000000000000058 hspi2
     /tmp/ccG1uW9V.s:456    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccG1uW9V.s:462    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccG1uW9V.s:511    .text.MX_USART2_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart2
     /tmp/ccG1uW9V.s:517    .text.MX_DAC_Init:0000000000000000 $t
     /tmp/ccG1uW9V.s:523    .text.MX_DAC_Init:0000000000000000 MX_DAC_Init
     /tmp/ccG1uW9V.s:575    .text.MX_DAC_Init:0000000000000028 $d
                            *COM*:0000000000000014 hdac
     /tmp/ccG1uW9V.s:581    .text.MX_TIM4_Init:0000000000000000 $t
     /tmp/ccG1uW9V.s:587    .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/ccG1uW9V.s:681    .text.MX_TIM4_Init:0000000000000054 $d
                            *COM*:0000000000000040 htim4
     /tmp/ccG1uW9V.s:687    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccG1uW9V.s:693    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccG1uW9V.s:790    .text.MX_TIM1_Init:0000000000000054 $d
                            *COM*:0000000000000040 htim1
     /tmp/ccG1uW9V.s:796    .text.MX_TIM5_Init:0000000000000000 $t
     /tmp/ccG1uW9V.s:802    .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
     /tmp/ccG1uW9V.s:885    .text.MX_TIM5_Init:000000000000004c $d
                            *COM*:0000000000000040 htim5
     /tmp/ccG1uW9V.s:891    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccG1uW9V.s:897    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccG1uW9V.s:990    .text.MX_ADC1_Init:0000000000000050 $d
                            *COM*:0000000000000048 hadc1
     /tmp/ccG1uW9V.s:997    .text.MX_ADC2_Init:0000000000000000 $t
     /tmp/ccG1uW9V.s:1003   .text.MX_ADC2_Init:0000000000000000 MX_ADC2_Init
     /tmp/ccG1uW9V.s:1096   .text.MX_ADC2_Init:0000000000000050 $d
                            *COM*:0000000000000048 hadc2
     /tmp/ccG1uW9V.s:1103   .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccG1uW9V.s:1109   .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccG1uW9V.s:1171   .text.MX_CAN1_Init:0000000000000030 $d
                            *COM*:0000000000000028 hcan1
     /tmp/ccG1uW9V.s:1177   .text.MX_CAN2_Init:0000000000000000 $t
     /tmp/ccG1uW9V.s:1183   .text.MX_CAN2_Init:0000000000000000 MX_CAN2_Init
     /tmp/ccG1uW9V.s:1245   .text.MX_CAN2_Init:0000000000000030 $d
                            *COM*:0000000000000028 hcan2
     /tmp/ccG1uW9V.s:1251   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccG1uW9V.s:1258   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccG1uW9V.s:1399   .text.SystemClock_Config:0000000000000094 $d
     /tmp/ccG1uW9V.s:1405   .text.main:0000000000000000 $t
     /tmp/ccG1uW9V.s:1412   .text.main:0000000000000000 main
ARM GAS  /tmp/ccG1uW9V.s 			page 49


     /tmp/ccG1uW9V.s:1480   .text.Error_Handler:0000000000000000 $t
     /tmp/ccG1uW9V.s:1487   .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000060 hdma_usart2_tx
                            *COM*:0000000000000060 hdma_adc2
                            *COM*:0000000000000060 hdma_adc1

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_SPI_Init
HAL_UART_Init
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_SlaveConfigSynchro
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_ConfigClockSource
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CAN_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_MCOConfig
HAL_Init
mainLoop1
