ARM GAS  /tmp/ccX10RZP.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB144:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "mainLoop.h"
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/ccX10RZP.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  44:Core/Src/main.c **** ADC_HandleTypeDef hadc2;
  45:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  46:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc2;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  49:Core/Src/main.c **** CAN_HandleTypeDef hcan2;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** DAC_HandleTypeDef hdac;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  54:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  57:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  58:Core/Src/main.c **** TIM_HandleTypeDef htim5;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** UART_HandleTypeDef huart2;
  61:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_tx;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE BEGIN PV */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PV */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  68:Core/Src/main.c **** void SystemClock_Config(void);
  69:Core/Src/main.c **** static void MX_GPIO_Init(void);
  70:Core/Src/main.c **** static void MX_DMA_Init(void);
  71:Core/Src/main.c **** static void MX_SPI1_Init(void);
  72:Core/Src/main.c **** void MX_USART2_UART_Init(void);
  73:Core/Src/main.c **** static void MX_DAC_Init(void);
  74:Core/Src/main.c **** static void MX_TIM4_Init(void);
  75:Core/Src/main.c **** static void MX_TIM1_Init(void);
  76:Core/Src/main.c **** static void MX_TIM5_Init(void);
  77:Core/Src/main.c **** static void MX_SPI2_Init(void);
  78:Core/Src/main.c **** static void MX_ADC1_Init(void);
  79:Core/Src/main.c **** static void MX_ADC2_Init(void);
  80:Core/Src/main.c **** static void MX_CAN1_Init(void);
  81:Core/Src/main.c **** static void MX_CAN2_Init(void);
  82:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /* USER CODE END PFP */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  87:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccX10RZP.s 			page 3


  89:Core/Src/main.c **** /* USER CODE END 0 */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** /**
  92:Core/Src/main.c ****   * @brief  The application entry point.
  93:Core/Src/main.c ****   * @retval int
  94:Core/Src/main.c ****   */
  95:Core/Src/main.c **** int main(void)
  96:Core/Src/main.c **** {
  97:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END 1 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 102:Core/Src/main.c ****   
 103:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 104:Core/Src/main.c ****   HAL_Init();
 105:Core/Src/main.c ****   //preMainLoop1();
 106:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END Init */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Configure the system clock */
 111:Core/Src/main.c ****   SystemClock_Config();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END SysInit */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Initialize all configured peripherals */
 118:Core/Src/main.c ****   MX_GPIO_Init();
 119:Core/Src/main.c ****   MX_DMA_Init();
 120:Core/Src/main.c ****   MX_SPI1_Init();
 121:Core/Src/main.c ****   //MX_USART2_UART_Init();
 122:Core/Src/main.c ****   MX_DAC_Init();
 123:Core/Src/main.c ****   MX_TIM4_Init();
 124:Core/Src/main.c ****   MX_TIM1_Init();
 125:Core/Src/main.c ****   MX_TIM5_Init();
 126:Core/Src/main.c ****   MX_SPI2_Init();
 127:Core/Src/main.c ****   MX_ADC1_Init();
 128:Core/Src/main.c ****   MX_ADC2_Init();
 129:Core/Src/main.c ****   MX_CAN1_Init();
 130:Core/Src/main.c ****   MX_CAN2_Init();
 131:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE END 2 */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Infinite loop */
 136:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 137:Core/Src/main.c ****   while (1)
 138:Core/Src/main.c ****   {
 139:Core/Src/main.c ****     /* USER CODE END WHILE */
 140:Core/Src/main.c ****     mainLoop1();
 141:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c ****   /* USER CODE END 3 */
 144:Core/Src/main.c **** }
 145:Core/Src/main.c **** 
ARM GAS  /tmp/ccX10RZP.s 			page 4


 146:Core/Src/main.c **** /**
 147:Core/Src/main.c ****   * @brief System Clock Configuration
 148:Core/Src/main.c ****   * @retval None
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c **** void SystemClock_Config(void)
 151:Core/Src/main.c **** {
 152:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 153:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 156:Core/Src/main.c ****   */
 157:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 158:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 159:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 160:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 161:Core/Src/main.c ****   */
 162:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 9;
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 172:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****     Error_Handler();
 175:Core/Src/main.c ****   }
 176:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 179:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 180:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 181:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 183:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 186:Core/Src/main.c ****   {
 187:Core/Src/main.c ****     Error_Handler();
 188:Core/Src/main.c ****   }
 189:Core/Src/main.c ****   HAL_RCC_MCOConfig(RCC_MCO1, RCC_MCO1SOURCE_HSI, RCC_MCODIV_1);
 190:Core/Src/main.c **** }
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** /**
 193:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 194:Core/Src/main.c ****   * @param None
 195:Core/Src/main.c ****   * @retval None
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c **** static void MX_ADC1_Init(void)
 198:Core/Src/main.c **** {
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
ARM GAS  /tmp/ccX10RZP.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 209:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 210:Core/Src/main.c ****   */
 211:Core/Src/main.c ****   hadc1.Instance = ADC1;
 212:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV8;
 213:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 214:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 215:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 216:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 217:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 218:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 219:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 220:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 221:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 222:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 223:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 224:Core/Src/main.c ****   {
 225:Core/Src/main.c ****     Error_Handler();
 226:Core/Src/main.c ****   }
 227:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 228:Core/Src/main.c ****   */
 229:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 230:Core/Src/main.c ****   sConfig.Rank = 1;
 231:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 232:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 233:Core/Src/main.c ****   {
 234:Core/Src/main.c ****     Error_Handler();
 235:Core/Src/main.c ****   }
 236:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** }
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** /**
 243:Core/Src/main.c ****   * @brief ADC2 Initialization Function
 244:Core/Src/main.c ****   * @param None
 245:Core/Src/main.c ****   * @retval None
 246:Core/Src/main.c ****   */
 247:Core/Src/main.c **** static void MX_ADC2_Init(void)
 248:Core/Src/main.c **** {
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 0 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE END ADC2_Init 0 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 1 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE END ADC2_Init 1 */
 259:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
ARM GAS  /tmp/ccX10RZP.s 			page 6


 260:Core/Src/main.c ****   */
 261:Core/Src/main.c ****   hadc2.Instance = ADC2;
 262:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV8;
 263:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 264:Core/Src/main.c ****   hadc2.Init.ScanConvMode = DISABLE;
 265:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = ENABLE;
 266:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 267:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 268:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 269:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 270:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
 271:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 272:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 273:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 274:Core/Src/main.c ****   {
 275:Core/Src/main.c ****     Error_Handler();
 276:Core/Src/main.c ****   }
 277:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 278:Core/Src/main.c ****   */
 279:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 280:Core/Src/main.c ****   sConfig.Rank = 1;
 281:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 282:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 283:Core/Src/main.c ****   {
 284:Core/Src/main.c ****     Error_Handler();
 285:Core/Src/main.c ****   }
 286:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 2 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /* USER CODE END ADC2_Init 2 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** }
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** /**
 293:Core/Src/main.c ****   * @brief CAN1 Initialization Function
 294:Core/Src/main.c ****   * @param None
 295:Core/Src/main.c ****   * @retval None
 296:Core/Src/main.c ****   */
 297:Core/Src/main.c **** static void MX_CAN1_Init(void)
 298:Core/Src/main.c **** {
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
 307:Core/Src/main.c ****   hcan1.Instance = CAN1;
 308:Core/Src/main.c ****   hcan1.Init.Prescaler = 3;
 309:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 310:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 311:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_13TQ;
 312:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 313:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 314:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 315:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 316:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
ARM GAS  /tmp/ccX10RZP.s 			page 7


 317:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 318:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 319:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 320:Core/Src/main.c ****   {
 321:Core/Src/main.c ****     Error_Handler();
 322:Core/Src/main.c ****   }
 323:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 326:Core/Src/main.c **** 
 327:Core/Src/main.c **** }
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** /**
 330:Core/Src/main.c ****   * @brief CAN2 Initialization Function
 331:Core/Src/main.c ****   * @param None
 332:Core/Src/main.c ****   * @retval None
 333:Core/Src/main.c ****   */
 334:Core/Src/main.c **** static void MX_CAN2_Init(void)
 335:Core/Src/main.c **** {
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 0 */
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   /* USER CODE END CAN2_Init 0 */
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 1 */
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /* USER CODE END CAN2_Init 1 */
 344:Core/Src/main.c ****   hcan2.Instance = CAN2;
 345:Core/Src/main.c ****   hcan2.Init.Prescaler = 3;
 346:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 347:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 348:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_13TQ;
 349:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_2TQ;
 350:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 351:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
 352:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 353:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 354:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 355:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 356:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 357:Core/Src/main.c ****   {
 358:Core/Src/main.c ****     Error_Handler();
 359:Core/Src/main.c ****   }
 360:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 2 */
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /* USER CODE END CAN2_Init 2 */
 363:Core/Src/main.c **** 
 364:Core/Src/main.c **** }
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** /**
 367:Core/Src/main.c ****   * @brief DAC Initialization Function
 368:Core/Src/main.c ****   * @param None
 369:Core/Src/main.c ****   * @retval None
 370:Core/Src/main.c ****   */
 371:Core/Src/main.c **** static void MX_DAC_Init(void)
 372:Core/Src/main.c **** {
 373:Core/Src/main.c **** 
ARM GAS  /tmp/ccX10RZP.s 			page 8


 374:Core/Src/main.c ****   /* USER CODE BEGIN DAC_Init 0 */
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /* USER CODE END DAC_Init 0 */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   DAC_ChannelConfTypeDef sConfig = {0};
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE BEGIN DAC_Init 1 */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   /* USER CODE END DAC_Init 1 */
 383:Core/Src/main.c ****   /** DAC Initialization
 384:Core/Src/main.c ****   */
 385:Core/Src/main.c ****   hdac.Instance = DAC;
 386:Core/Src/main.c ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 387:Core/Src/main.c ****   {
 388:Core/Src/main.c ****     Error_Handler();
 389:Core/Src/main.c ****   }
 390:Core/Src/main.c ****   /** DAC channel OUT1 config
 391:Core/Src/main.c ****   */
 392:Core/Src/main.c ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 393:Core/Src/main.c ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 394:Core/Src/main.c ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 395:Core/Src/main.c ****   {
 396:Core/Src/main.c ****     Error_Handler();
 397:Core/Src/main.c ****   }
 398:Core/Src/main.c ****   /* USER CODE BEGIN DAC_Init 2 */
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /* USER CODE END DAC_Init 2 */
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** }
 403:Core/Src/main.c **** 
 404:Core/Src/main.c **** /**
 405:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 406:Core/Src/main.c ****   * @param None
 407:Core/Src/main.c ****   * @retval None
 408:Core/Src/main.c ****   */
 409:Core/Src/main.c **** static void MX_SPI1_Init(void)
 410:Core/Src/main.c **** {
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 415:Core/Src/main.c **** 
 416:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 419:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 420:Core/Src/main.c ****   hspi1.Instance = SPI1;
 421:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 422:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 423:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 424:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 425:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 426:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 427:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 428:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 429:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 430:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
ARM GAS  /tmp/ccX10RZP.s 			page 9


 431:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 432:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 433:Core/Src/main.c ****   {
 434:Core/Src/main.c ****     Error_Handler();
 435:Core/Src/main.c ****   }
 436:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 439:Core/Src/main.c **** 
 440:Core/Src/main.c **** }
 441:Core/Src/main.c **** 
 442:Core/Src/main.c **** /**
 443:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 444:Core/Src/main.c ****   * @param None
 445:Core/Src/main.c ****   * @retval None
 446:Core/Src/main.c ****   */
 447:Core/Src/main.c **** static void MX_SPI2_Init(void)
 448:Core/Src/main.c **** {
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 455:Core/Src/main.c **** 
 456:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 457:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 458:Core/Src/main.c ****   hspi2.Instance = SPI2;
 459:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 460:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_1LINE;
 461:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_16BIT;
 462:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 463:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 464:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 465:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 466:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 467:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 468:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 469:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 470:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 471:Core/Src/main.c ****   {
 472:Core/Src/main.c ****     Error_Handler();
 473:Core/Src/main.c ****   }
 474:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 475:Core/Src/main.c **** 
 476:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 477:Core/Src/main.c **** 
 478:Core/Src/main.c **** }
 479:Core/Src/main.c **** 
 480:Core/Src/main.c **** /**
 481:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 482:Core/Src/main.c ****   * @param None
 483:Core/Src/main.c ****   * @retval None
 484:Core/Src/main.c ****   */
 485:Core/Src/main.c **** static void MX_TIM1_Init(void)
 486:Core/Src/main.c **** {
 487:Core/Src/main.c **** 
ARM GAS  /tmp/ccX10RZP.s 			page 10


 488:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 489:Core/Src/main.c **** 
 490:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 491:Core/Src/main.c **** 
 492:Core/Src/main.c ****   TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 493:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 494:Core/Src/main.c **** 
 495:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 496:Core/Src/main.c **** 
 497:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 498:Core/Src/main.c ****   htim1.Instance = TIM1;
 499:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 500:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 501:Core/Src/main.c ****   htim1.Init.Period = 65535;
 502:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 503:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 504:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 505:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 506:Core/Src/main.c ****   {
 507:Core/Src/main.c ****     Error_Handler();
 508:Core/Src/main.c ****   }
 509:Core/Src/main.c ****   sSlaveConfig.SlaveMode = TIM_SLAVEMODE_EXTERNAL1;
 510:Core/Src/main.c ****   sSlaveConfig.InputTrigger = TIM_TS_TI2FP2;
 511:Core/Src/main.c ****   sSlaveConfig.TriggerPolarity = TIM_TRIGGERPOLARITY_RISING;
 512:Core/Src/main.c ****   sSlaveConfig.TriggerFilter = 0;
 513:Core/Src/main.c ****   if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 514:Core/Src/main.c ****   {
 515:Core/Src/main.c ****     Error_Handler();
 516:Core/Src/main.c ****   }
 517:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 518:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 519:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 520:Core/Src/main.c ****   {
 521:Core/Src/main.c ****     Error_Handler();
 522:Core/Src/main.c ****   }
 523:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 524:Core/Src/main.c **** 
 525:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 526:Core/Src/main.c **** 
 527:Core/Src/main.c **** }
 528:Core/Src/main.c **** 
 529:Core/Src/main.c **** /**
 530:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 531:Core/Src/main.c ****   * @param None
 532:Core/Src/main.c ****   * @retval None
 533:Core/Src/main.c ****   */
 534:Core/Src/main.c **** static void MX_TIM4_Init(void)
 535:Core/Src/main.c **** {
 536:Core/Src/main.c **** 
 537:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 538:Core/Src/main.c **** 
 539:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 540:Core/Src/main.c **** 
 541:Core/Src/main.c ****   TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 542:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 543:Core/Src/main.c **** 
 544:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
ARM GAS  /tmp/ccX10RZP.s 			page 11


 545:Core/Src/main.c **** 
 546:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 547:Core/Src/main.c ****   htim4.Instance = TIM4;
 548:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 549:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 550:Core/Src/main.c ****   htim4.Init.Period = 65535;
 551:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 552:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 553:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 554:Core/Src/main.c ****   {
 555:Core/Src/main.c ****     Error_Handler();
 556:Core/Src/main.c ****   }
 557:Core/Src/main.c ****   sSlaveConfig.SlaveMode = TIM_SLAVEMODE_EXTERNAL1;
 558:Core/Src/main.c ****   sSlaveConfig.InputTrigger = TIM_TS_TI2FP2;
 559:Core/Src/main.c ****   sSlaveConfig.TriggerPolarity = TIM_TRIGGERPOLARITY_RISING;
 560:Core/Src/main.c ****   sSlaveConfig.TriggerFilter = 0;
 561:Core/Src/main.c ****   if (HAL_TIM_SlaveConfigSynchro(&htim4, &sSlaveConfig) != HAL_OK)
 562:Core/Src/main.c ****   {
 563:Core/Src/main.c ****     Error_Handler();
 564:Core/Src/main.c ****   }
 565:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 566:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 567:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 568:Core/Src/main.c ****   {
 569:Core/Src/main.c ****     Error_Handler();
 570:Core/Src/main.c ****   }
 571:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 572:Core/Src/main.c **** 
 573:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 574:Core/Src/main.c **** 
 575:Core/Src/main.c **** }
 576:Core/Src/main.c **** 
 577:Core/Src/main.c **** /**
 578:Core/Src/main.c ****   * @brief TIM5 Initialization Function
 579:Core/Src/main.c ****   * @param None
 580:Core/Src/main.c ****   * @retval None
 581:Core/Src/main.c ****   */
 582:Core/Src/main.c **** static void MX_TIM5_Init(void)
 583:Core/Src/main.c **** {
 584:Core/Src/main.c **** 
 585:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
 586:Core/Src/main.c **** 
 587:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
 588:Core/Src/main.c **** 
 589:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 590:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 591:Core/Src/main.c **** 
 592:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
 593:Core/Src/main.c **** 
 594:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
 595:Core/Src/main.c ****   htim5.Instance = TIM5;
 596:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
 597:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 598:Core/Src/main.c ****   htim5.Init.Period = 64*1024*1024;
 599:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 600:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 601:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
ARM GAS  /tmp/ccX10RZP.s 			page 12


 602:Core/Src/main.c ****   {
 603:Core/Src/main.c ****     Error_Handler();
 604:Core/Src/main.c ****   }
 605:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 606:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 607:Core/Src/main.c ****   {
 608:Core/Src/main.c ****     Error_Handler();
 609:Core/Src/main.c ****   }
 610:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 611:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 612:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 613:Core/Src/main.c ****   {
 614:Core/Src/main.c ****     Error_Handler();
 615:Core/Src/main.c ****   }
 616:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
 617:Core/Src/main.c **** 
 618:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
 619:Core/Src/main.c **** 
 620:Core/Src/main.c **** }
 621:Core/Src/main.c **** 
 622:Core/Src/main.c **** /**
 623:Core/Src/main.c ****   * @brief USART2 Initialization Function
 624:Core/Src/main.c ****   * @param None
 625:Core/Src/main.c ****   * @retval None
 626:Core/Src/main.c ****   */
 627:Core/Src/main.c **** void MX_USART2_UART_Init(void)
 628:Core/Src/main.c **** {
 629:Core/Src/main.c **** 
 630:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 631:Core/Src/main.c **** 
 632:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 633:Core/Src/main.c **** 
 634:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 635:Core/Src/main.c **** 
 636:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 637:Core/Src/main.c ****   huart2.Instance = USART2;
 638:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 639:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 640:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 641:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 642:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 643:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 644:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 645:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 646:Core/Src/main.c ****   {
 647:Core/Src/main.c ****     Error_Handler();
 648:Core/Src/main.c ****   }
 649:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 650:Core/Src/main.c **** 
 651:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 652:Core/Src/main.c **** 
 653:Core/Src/main.c **** }
 654:Core/Src/main.c **** 
 655:Core/Src/main.c **** /**
 656:Core/Src/main.c ****   * Enable DMA controller clock
 657:Core/Src/main.c ****   */
 658:Core/Src/main.c **** static void MX_DMA_Init(void)
ARM GAS  /tmp/ccX10RZP.s 			page 13


 659:Core/Src/main.c **** {
 660:Core/Src/main.c **** 
 661:Core/Src/main.c ****   /* DMA controller clock enable */
 662:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 663:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 664:Core/Src/main.c **** 
 665:Core/Src/main.c ****   /* DMA interrupt init */
 666:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 667:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 668:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 669:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 670:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 671:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 672:Core/Src/main.c ****   /* DMA2_Stream2_IRQn interrupt configuration */
 673:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
 674:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 675:Core/Src/main.c **** 
 676:Core/Src/main.c **** }
 677:Core/Src/main.c **** 
 678:Core/Src/main.c **** /**
 679:Core/Src/main.c ****   * @brief GPIO Initialization Function
 680:Core/Src/main.c ****   * @param None
 681:Core/Src/main.c ****   * @retval None
 682:Core/Src/main.c ****   */
 683:Core/Src/main.c **** static void MX_GPIO_Init(void)
 684:Core/Src/main.c **** {
  28              		.loc 1 684 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 8BB0     		sub	sp, sp, #44
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 64
 685:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 685 3 view .LVU1
  44              		.loc 1 685 20 is_stmt 0 view .LVU2
  45 0004 0024     		movs	r4, #0
  46 0006 0594     		str	r4, [sp, #20]
  47 0008 0694     		str	r4, [sp, #24]
  48 000a 0794     		str	r4, [sp, #28]
  49 000c 0894     		str	r4, [sp, #32]
  50 000e 0994     		str	r4, [sp, #36]
 686:Core/Src/main.c **** 
 687:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 688:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  51              		.loc 1 688 3 is_stmt 1 view .LVU3
  52              	.LBB2:
  53              		.loc 1 688 3 view .LVU4
  54 0010 0194     		str	r4, [sp, #4]
ARM GAS  /tmp/ccX10RZP.s 			page 14


  55              		.loc 1 688 3 view .LVU5
  56 0012 2C4B     		ldr	r3, .L3
  57 0014 1A6B     		ldr	r2, [r3, #48]
  58 0016 42F08002 		orr	r2, r2, #128
  59 001a 1A63     		str	r2, [r3, #48]
  60              		.loc 1 688 3 view .LVU6
  61 001c 1A6B     		ldr	r2, [r3, #48]
  62 001e 02F08002 		and	r2, r2, #128
  63 0022 0192     		str	r2, [sp, #4]
  64              		.loc 1 688 3 view .LVU7
  65 0024 019A     		ldr	r2, [sp, #4]
  66              	.LBE2:
  67              		.loc 1 688 3 view .LVU8
 689:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  68              		.loc 1 689 3 view .LVU9
  69              	.LBB3:
  70              		.loc 1 689 3 view .LVU10
  71 0026 0294     		str	r4, [sp, #8]
  72              		.loc 1 689 3 view .LVU11
  73 0028 1A6B     		ldr	r2, [r3, #48]
  74 002a 42F00402 		orr	r2, r2, #4
  75 002e 1A63     		str	r2, [r3, #48]
  76              		.loc 1 689 3 view .LVU12
  77 0030 1A6B     		ldr	r2, [r3, #48]
  78 0032 02F00402 		and	r2, r2, #4
  79 0036 0292     		str	r2, [sp, #8]
  80              		.loc 1 689 3 view .LVU13
  81 0038 029A     		ldr	r2, [sp, #8]
  82              	.LBE3:
  83              		.loc 1 689 3 view .LVU14
 690:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  84              		.loc 1 690 3 view .LVU15
  85              	.LBB4:
  86              		.loc 1 690 3 view .LVU16
  87 003a 0394     		str	r4, [sp, #12]
  88              		.loc 1 690 3 view .LVU17
  89 003c 1A6B     		ldr	r2, [r3, #48]
  90 003e 42F00102 		orr	r2, r2, #1
  91 0042 1A63     		str	r2, [r3, #48]
  92              		.loc 1 690 3 view .LVU18
  93 0044 1A6B     		ldr	r2, [r3, #48]
  94 0046 02F00102 		and	r2, r2, #1
  95 004a 0392     		str	r2, [sp, #12]
  96              		.loc 1 690 3 view .LVU19
  97 004c 039A     		ldr	r2, [sp, #12]
  98              	.LBE4:
  99              		.loc 1 690 3 view .LVU20
 691:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 100              		.loc 1 691 3 view .LVU21
 101              	.LBB5:
 102              		.loc 1 691 3 view .LVU22
 103 004e 0494     		str	r4, [sp, #16]
 104              		.loc 1 691 3 view .LVU23
 105 0050 1A6B     		ldr	r2, [r3, #48]
 106 0052 42F00202 		orr	r2, r2, #2
 107 0056 1A63     		str	r2, [r3, #48]
 108              		.loc 1 691 3 view .LVU24
ARM GAS  /tmp/ccX10RZP.s 			page 15


 109 0058 1B6B     		ldr	r3, [r3, #48]
 110 005a 03F00203 		and	r3, r3, #2
 111 005e 0493     		str	r3, [sp, #16]
 112              		.loc 1 691 3 view .LVU25
 113 0060 049B     		ldr	r3, [sp, #16]
 114              	.LBE5:
 115              		.loc 1 691 3 view .LVU26
 692:Core/Src/main.c **** 
 693:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 694:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, spi1_cs_Pin|LED5_Pin|LED3_Pin|LED4_Pin, GPIO_PIN_RESET);
 116              		.loc 1 694 3 view .LVU27
 117 0062 194F     		ldr	r7, .L3+4
 118 0064 2246     		mov	r2, r4
 119 0066 41F61041 		movw	r1, #7184
 120 006a 3846     		mov	r0, r7
 121 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 122              	.LVL0:
 695:Core/Src/main.c **** 
 696:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 697:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, DAC_LOAD_Pin|DAC_CS_Pin, GPIO_PIN_RESET);
 123              		.loc 1 697 3 view .LVU28
 124 0070 164D     		ldr	r5, .L3+8
 125 0072 2246     		mov	r2, r4
 126 0074 4FF44071 		mov	r1, #768
 127 0078 2846     		mov	r0, r5
 128 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 129              	.LVL1:
 698:Core/Src/main.c **** 
 699:Core/Src/main.c ****   /*Configure GPIO pins : spi1_cs_Pin LED5_Pin LED3_Pin LED4_Pin */
 700:Core/Src/main.c ****   GPIO_InitStruct.Pin = spi1_cs_Pin|LED5_Pin|LED3_Pin|LED4_Pin;
 130              		.loc 1 700 3 view .LVU29
 131              		.loc 1 700 23 is_stmt 0 view .LVU30
 132 007e 41F61043 		movw	r3, #7184
 133 0082 0593     		str	r3, [sp, #20]
 701:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 134              		.loc 1 701 3 is_stmt 1 view .LVU31
 135              		.loc 1 701 24 is_stmt 0 view .LVU32
 136 0084 0126     		movs	r6, #1
 137 0086 0696     		str	r6, [sp, #24]
 702:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 138              		.loc 1 702 3 is_stmt 1 view .LVU33
 139              		.loc 1 702 24 is_stmt 0 view .LVU34
 140 0088 0794     		str	r4, [sp, #28]
 703:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 141              		.loc 1 703 3 is_stmt 1 view .LVU35
 142              		.loc 1 703 25 is_stmt 0 view .LVU36
 143 008a 0894     		str	r4, [sp, #32]
 704:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 144              		.loc 1 704 3 is_stmt 1 view .LVU37
 145 008c 05A9     		add	r1, sp, #20
 146 008e 3846     		mov	r0, r7
 147 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 148              	.LVL2:
 705:Core/Src/main.c **** 
 706:Core/Src/main.c ****   /*Configure GPIO pin : PA8 */
 707:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 149              		.loc 1 707 3 view .LVU38
ARM GAS  /tmp/ccX10RZP.s 			page 16


 150              		.loc 1 707 23 is_stmt 0 view .LVU39
 151 0094 4FF48073 		mov	r3, #256
 152 0098 0593     		str	r3, [sp, #20]
 708:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 153              		.loc 1 708 3 is_stmt 1 view .LVU40
 154              		.loc 1 708 24 is_stmt 0 view .LVU41
 155 009a 0223     		movs	r3, #2
 156 009c 0693     		str	r3, [sp, #24]
 709:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 157              		.loc 1 709 3 is_stmt 1 view .LVU42
 158              		.loc 1 709 24 is_stmt 0 view .LVU43
 159 009e 0794     		str	r4, [sp, #28]
 710:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 160              		.loc 1 710 3 is_stmt 1 view .LVU44
 161              		.loc 1 710 25 is_stmt 0 view .LVU45
 162 00a0 0894     		str	r4, [sp, #32]
 711:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 163              		.loc 1 711 3 is_stmt 1 view .LVU46
 164              		.loc 1 711 29 is_stmt 0 view .LVU47
 165 00a2 0994     		str	r4, [sp, #36]
 712:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 166              		.loc 1 712 3 is_stmt 1 view .LVU48
 167 00a4 05A9     		add	r1, sp, #20
 168 00a6 0A48     		ldr	r0, .L3+12
 169 00a8 FFF7FEFF 		bl	HAL_GPIO_Init
 170              	.LVL3:
 713:Core/Src/main.c **** 
 714:Core/Src/main.c ****   /*Configure GPIO pins : DAC_LOAD_Pin DAC_CS_Pin */
 715:Core/Src/main.c ****   GPIO_InitStruct.Pin = DAC_LOAD_Pin|DAC_CS_Pin;
 171              		.loc 1 715 3 view .LVU49
 172              		.loc 1 715 23 is_stmt 0 view .LVU50
 173 00ac 4FF44073 		mov	r3, #768
 174 00b0 0593     		str	r3, [sp, #20]
 716:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 175              		.loc 1 716 3 is_stmt 1 view .LVU51
 176              		.loc 1 716 24 is_stmt 0 view .LVU52
 177 00b2 0696     		str	r6, [sp, #24]
 717:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 178              		.loc 1 717 3 is_stmt 1 view .LVU53
 179              		.loc 1 717 24 is_stmt 0 view .LVU54
 180 00b4 0794     		str	r4, [sp, #28]
 718:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 181              		.loc 1 718 3 is_stmt 1 view .LVU55
 182              		.loc 1 718 25 is_stmt 0 view .LVU56
 183 00b6 0894     		str	r4, [sp, #32]
 719:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 184              		.loc 1 719 3 is_stmt 1 view .LVU57
 185 00b8 05A9     		add	r1, sp, #20
 186 00ba 2846     		mov	r0, r5
 187 00bc FFF7FEFF 		bl	HAL_GPIO_Init
 188              	.LVL4:
 720:Core/Src/main.c **** 
 721:Core/Src/main.c **** }
 189              		.loc 1 721 1 is_stmt 0 view .LVU58
 190 00c0 0BB0     		add	sp, sp, #44
 191              	.LCFI2:
 192              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/ccX10RZP.s 			page 17


 193              		@ sp needed
 194 00c2 F0BD     		pop	{r4, r5, r6, r7, pc}
 195              	.L4:
 196              		.align	2
 197              	.L3:
 198 00c4 00380240 		.word	1073887232
 199 00c8 00080240 		.word	1073874944
 200 00cc 00040240 		.word	1073873920
 201 00d0 00000240 		.word	1073872896
 202              		.cfi_endproc
 203              	.LFE144:
 205              		.section	.text.MX_DMA_Init,"ax",%progbits
 206              		.align	1
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 210              		.fpu fpv4-sp-d16
 212              	MX_DMA_Init:
 213              	.LFB143:
 659:Core/Src/main.c **** 
 214              		.loc 1 659 1 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 8
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218 0000 10B5     		push	{r4, lr}
 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 4, -8
 222              		.cfi_offset 14, -4
 223 0002 82B0     		sub	sp, sp, #8
 224              	.LCFI4:
 225              		.cfi_def_cfa_offset 16
 662:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 226              		.loc 1 662 3 view .LVU60
 227              	.LBB6:
 662:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 228              		.loc 1 662 3 view .LVU61
 229 0004 0024     		movs	r4, #0
 230 0006 0094     		str	r4, [sp]
 662:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 231              		.loc 1 662 3 view .LVU62
 232 0008 164B     		ldr	r3, .L7
 233 000a 1A6B     		ldr	r2, [r3, #48]
 234 000c 42F48002 		orr	r2, r2, #4194304
 235 0010 1A63     		str	r2, [r3, #48]
 662:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 236              		.loc 1 662 3 view .LVU63
 237 0012 1A6B     		ldr	r2, [r3, #48]
 238 0014 02F48002 		and	r2, r2, #4194304
 239 0018 0092     		str	r2, [sp]
 662:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 240              		.loc 1 662 3 view .LVU64
 241 001a 009A     		ldr	r2, [sp]
 242              	.LBE6:
 662:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 243              		.loc 1 662 3 view .LVU65
 663:Core/Src/main.c **** 
ARM GAS  /tmp/ccX10RZP.s 			page 18


 244              		.loc 1 663 3 view .LVU66
 245              	.LBB7:
 663:Core/Src/main.c **** 
 246              		.loc 1 663 3 view .LVU67
 247 001c 0194     		str	r4, [sp, #4]
 663:Core/Src/main.c **** 
 248              		.loc 1 663 3 view .LVU68
 249 001e 1A6B     		ldr	r2, [r3, #48]
 250 0020 42F40012 		orr	r2, r2, #2097152
 251 0024 1A63     		str	r2, [r3, #48]
 663:Core/Src/main.c **** 
 252              		.loc 1 663 3 view .LVU69
 253 0026 1B6B     		ldr	r3, [r3, #48]
 254 0028 03F40013 		and	r3, r3, #2097152
 255 002c 0193     		str	r3, [sp, #4]
 663:Core/Src/main.c **** 
 256              		.loc 1 663 3 view .LVU70
 257 002e 019B     		ldr	r3, [sp, #4]
 258              	.LBE7:
 663:Core/Src/main.c **** 
 259              		.loc 1 663 3 view .LVU71
 667:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 260              		.loc 1 667 3 view .LVU72
 261 0030 2246     		mov	r2, r4
 262 0032 2146     		mov	r1, r4
 263 0034 1120     		movs	r0, #17
 264 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 265              	.LVL5:
 668:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 266              		.loc 1 668 3 view .LVU73
 267 003a 1120     		movs	r0, #17
 268 003c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 269              	.LVL6:
 670:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 270              		.loc 1 670 3 view .LVU74
 271 0040 2246     		mov	r2, r4
 272 0042 2146     		mov	r1, r4
 273 0044 3820     		movs	r0, #56
 274 0046 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 275              	.LVL7:
 671:Core/Src/main.c ****   /* DMA2_Stream2_IRQn interrupt configuration */
 276              		.loc 1 671 3 view .LVU75
 277 004a 3820     		movs	r0, #56
 278 004c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 279              	.LVL8:
 673:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 280              		.loc 1 673 3 view .LVU76
 281 0050 2246     		mov	r2, r4
 282 0052 2146     		mov	r1, r4
 283 0054 3A20     		movs	r0, #58
 284 0056 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 285              	.LVL9:
 674:Core/Src/main.c **** 
 286              		.loc 1 674 3 view .LVU77
 287 005a 3A20     		movs	r0, #58
 288 005c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 289              	.LVL10:
ARM GAS  /tmp/ccX10RZP.s 			page 19


 676:Core/Src/main.c **** 
 290              		.loc 1 676 1 is_stmt 0 view .LVU78
 291 0060 02B0     		add	sp, sp, #8
 292              	.LCFI5:
 293              		.cfi_def_cfa_offset 8
 294              		@ sp needed
 295 0062 10BD     		pop	{r4, pc}
 296              	.L8:
 297              		.align	2
 298              	.L7:
 299 0064 00380240 		.word	1073887232
 300              		.cfi_endproc
 301              	.LFE143:
 303              		.section	.text.MX_SPI1_Init,"ax",%progbits
 304              		.align	1
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu fpv4-sp-d16
 310              	MX_SPI1_Init:
 311              	.LFB137:
 410:Core/Src/main.c **** 
 312              		.loc 1 410 1 is_stmt 1 view -0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316 0000 08B5     		push	{r3, lr}
 317              	.LCFI6:
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 3, -8
 320              		.cfi_offset 14, -4
 420:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 321              		.loc 1 420 3 view .LVU80
 420:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 322              		.loc 1 420 18 is_stmt 0 view .LVU81
 323 0002 0D48     		ldr	r0, .L11
 324 0004 0D4B     		ldr	r3, .L11+4
 325 0006 0360     		str	r3, [r0]
 421:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 326              		.loc 1 421 3 is_stmt 1 view .LVU82
 421:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 327              		.loc 1 421 19 is_stmt 0 view .LVU83
 328 0008 4FF48273 		mov	r3, #260
 329 000c 4360     		str	r3, [r0, #4]
 422:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 330              		.loc 1 422 3 is_stmt 1 view .LVU84
 422:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 331              		.loc 1 422 24 is_stmt 0 view .LVU85
 332 000e 0023     		movs	r3, #0
 333 0010 8360     		str	r3, [r0, #8]
 423:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 334              		.loc 1 423 3 is_stmt 1 view .LVU86
 423:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 335              		.loc 1 423 23 is_stmt 0 view .LVU87
 336 0012 4FF40062 		mov	r2, #2048
 337 0016 C260     		str	r2, [r0, #12]
 424:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
ARM GAS  /tmp/ccX10RZP.s 			page 20


 338              		.loc 1 424 3 is_stmt 1 view .LVU88
 424:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 339              		.loc 1 424 26 is_stmt 0 view .LVU89
 340 0018 0361     		str	r3, [r0, #16]
 425:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 341              		.loc 1 425 3 is_stmt 1 view .LVU90
 425:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 342              		.loc 1 425 23 is_stmt 0 view .LVU91
 343 001a 4361     		str	r3, [r0, #20]
 426:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 344              		.loc 1 426 3 is_stmt 1 view .LVU92
 426:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 345              		.loc 1 426 18 is_stmt 0 view .LVU93
 346 001c 4FF40072 		mov	r2, #512
 347 0020 8261     		str	r2, [r0, #24]
 427:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 348              		.loc 1 427 3 is_stmt 1 view .LVU94
 427:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 349              		.loc 1 427 32 is_stmt 0 view .LVU95
 350 0022 3022     		movs	r2, #48
 351 0024 C261     		str	r2, [r0, #28]
 428:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 352              		.loc 1 428 3 is_stmt 1 view .LVU96
 428:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 353              		.loc 1 428 23 is_stmt 0 view .LVU97
 354 0026 0362     		str	r3, [r0, #32]
 429:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 355              		.loc 1 429 3 is_stmt 1 view .LVU98
 429:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 356              		.loc 1 429 21 is_stmt 0 view .LVU99
 357 0028 4362     		str	r3, [r0, #36]
 430:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 358              		.loc 1 430 3 is_stmt 1 view .LVU100
 430:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 359              		.loc 1 430 29 is_stmt 0 view .LVU101
 360 002a 8362     		str	r3, [r0, #40]
 431:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 361              		.loc 1 431 3 is_stmt 1 view .LVU102
 431:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 362              		.loc 1 431 28 is_stmt 0 view .LVU103
 363 002c 0A23     		movs	r3, #10
 364 002e C362     		str	r3, [r0, #44]
 432:Core/Src/main.c ****   {
 365              		.loc 1 432 3 is_stmt 1 view .LVU104
 432:Core/Src/main.c ****   {
 366              		.loc 1 432 7 is_stmt 0 view .LVU105
 367 0030 FFF7FEFF 		bl	HAL_SPI_Init
 368              	.LVL11:
 440:Core/Src/main.c **** 
 369              		.loc 1 440 1 view .LVU106
 370 0034 08BD     		pop	{r3, pc}
 371              	.L12:
 372 0036 00BF     		.align	2
 373              	.L11:
 374 0038 00000000 		.word	hspi1
 375 003c 00300140 		.word	1073819648
 376              		.cfi_endproc
ARM GAS  /tmp/ccX10RZP.s 			page 21


 377              	.LFE137:
 379              		.section	.text.MX_SPI2_Init,"ax",%progbits
 380              		.align	1
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 384              		.fpu fpv4-sp-d16
 386              	MX_SPI2_Init:
 387              	.LFB138:
 448:Core/Src/main.c **** 
 388              		.loc 1 448 1 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392 0000 08B5     		push	{r3, lr}
 393              	.LCFI7:
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 3, -8
 396              		.cfi_offset 14, -4
 458:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 397              		.loc 1 458 3 view .LVU108
 458:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 398              		.loc 1 458 18 is_stmt 0 view .LVU109
 399 0002 0D48     		ldr	r0, .L15
 400 0004 0D4B     		ldr	r3, .L15+4
 401 0006 0360     		str	r3, [r0]
 459:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_1LINE;
 402              		.loc 1 459 3 is_stmt 1 view .LVU110
 459:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_1LINE;
 403              		.loc 1 459 19 is_stmt 0 view .LVU111
 404 0008 4FF48273 		mov	r3, #260
 405 000c 4360     		str	r3, [r0, #4]
 460:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_16BIT;
 406              		.loc 1 460 3 is_stmt 1 view .LVU112
 460:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_16BIT;
 407              		.loc 1 460 24 is_stmt 0 view .LVU113
 408 000e 4FF40043 		mov	r3, #32768
 409 0012 8360     		str	r3, [r0, #8]
 461:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 410              		.loc 1 461 3 is_stmt 1 view .LVU114
 461:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 411              		.loc 1 461 23 is_stmt 0 view .LVU115
 412 0014 4FF40063 		mov	r3, #2048
 413 0018 C360     		str	r3, [r0, #12]
 462:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 414              		.loc 1 462 3 is_stmt 1 view .LVU116
 462:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 415              		.loc 1 462 26 is_stmt 0 view .LVU117
 416 001a 0023     		movs	r3, #0
 417 001c 0361     		str	r3, [r0, #16]
 463:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 418              		.loc 1 463 3 is_stmt 1 view .LVU118
 463:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 419              		.loc 1 463 23 is_stmt 0 view .LVU119
 420 001e 4361     		str	r3, [r0, #20]
 464:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 421              		.loc 1 464 3 is_stmt 1 view .LVU120
ARM GAS  /tmp/ccX10RZP.s 			page 22


 464:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 422              		.loc 1 464 18 is_stmt 0 view .LVU121
 423 0020 4FF40072 		mov	r2, #512
 424 0024 8261     		str	r2, [r0, #24]
 465:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 425              		.loc 1 465 3 is_stmt 1 view .LVU122
 465:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 426              		.loc 1 465 32 is_stmt 0 view .LVU123
 427 0026 C361     		str	r3, [r0, #28]
 466:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 428              		.loc 1 466 3 is_stmt 1 view .LVU124
 466:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 429              		.loc 1 466 23 is_stmt 0 view .LVU125
 430 0028 0362     		str	r3, [r0, #32]
 467:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 431              		.loc 1 467 3 is_stmt 1 view .LVU126
 467:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 432              		.loc 1 467 21 is_stmt 0 view .LVU127
 433 002a 4362     		str	r3, [r0, #36]
 468:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 434              		.loc 1 468 3 is_stmt 1 view .LVU128
 468:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 435              		.loc 1 468 29 is_stmt 0 view .LVU129
 436 002c 8362     		str	r3, [r0, #40]
 469:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 437              		.loc 1 469 3 is_stmt 1 view .LVU130
 469:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 438              		.loc 1 469 28 is_stmt 0 view .LVU131
 439 002e 0A23     		movs	r3, #10
 440 0030 C362     		str	r3, [r0, #44]
 470:Core/Src/main.c ****   {
 441              		.loc 1 470 3 is_stmt 1 view .LVU132
 470:Core/Src/main.c ****   {
 442              		.loc 1 470 7 is_stmt 0 view .LVU133
 443 0032 FFF7FEFF 		bl	HAL_SPI_Init
 444              	.LVL12:
 478:Core/Src/main.c **** 
 445              		.loc 1 478 1 view .LVU134
 446 0036 08BD     		pop	{r3, pc}
 447              	.L16:
 448              		.align	2
 449              	.L15:
 450 0038 00000000 		.word	hspi2
 451 003c 00380040 		.word	1073756160
 452              		.cfi_endproc
 453              	.LFE138:
 455              		.section	.text.MX_DAC_Init,"ax",%progbits
 456              		.align	1
 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 460              		.fpu fpv4-sp-d16
 462              	MX_DAC_Init:
 463              	.LFB136:
 372:Core/Src/main.c **** 
 464              		.loc 1 372 1 is_stmt 1 view -0
 465              		.cfi_startproc
ARM GAS  /tmp/ccX10RZP.s 			page 23


 466              		@ args = 0, pretend = 0, frame = 8
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468 0000 30B5     		push	{r4, r5, lr}
 469              	.LCFI8:
 470              		.cfi_def_cfa_offset 12
 471              		.cfi_offset 4, -12
 472              		.cfi_offset 5, -8
 473              		.cfi_offset 14, -4
 474 0002 83B0     		sub	sp, sp, #12
 475              	.LCFI9:
 476              		.cfi_def_cfa_offset 24
 378:Core/Src/main.c **** 
 477              		.loc 1 378 3 view .LVU136
 378:Core/Src/main.c **** 
 478              		.loc 1 378 26 is_stmt 0 view .LVU137
 479 0004 0024     		movs	r4, #0
 480 0006 0094     		str	r4, [sp]
 481 0008 0194     		str	r4, [sp, #4]
 385:Core/Src/main.c ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 482              		.loc 1 385 3 is_stmt 1 view .LVU138
 385:Core/Src/main.c ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 483              		.loc 1 385 17 is_stmt 0 view .LVU139
 484 000a 074D     		ldr	r5, .L19
 485 000c 074B     		ldr	r3, .L19+4
 486 000e 2B60     		str	r3, [r5]
 386:Core/Src/main.c ****   {
 487              		.loc 1 386 3 is_stmt 1 view .LVU140
 386:Core/Src/main.c ****   {
 488              		.loc 1 386 7 is_stmt 0 view .LVU141
 489 0010 2846     		mov	r0, r5
 490 0012 FFF7FEFF 		bl	HAL_DAC_Init
 491              	.LVL13:
 392:Core/Src/main.c ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 492              		.loc 1 392 3 is_stmt 1 view .LVU142
 392:Core/Src/main.c ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 493              		.loc 1 392 23 is_stmt 0 view .LVU143
 494 0016 0094     		str	r4, [sp]
 393:Core/Src/main.c ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 495              		.loc 1 393 3 is_stmt 1 view .LVU144
 393:Core/Src/main.c ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 496              		.loc 1 393 28 is_stmt 0 view .LVU145
 497 0018 0194     		str	r4, [sp, #4]
 394:Core/Src/main.c ****   {
 498              		.loc 1 394 3 is_stmt 1 view .LVU146
 394:Core/Src/main.c ****   {
 499              		.loc 1 394 7 is_stmt 0 view .LVU147
 500 001a 2246     		mov	r2, r4
 501 001c 6946     		mov	r1, sp
 502 001e 2846     		mov	r0, r5
 503 0020 FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 504              	.LVL14:
 402:Core/Src/main.c **** 
 505              		.loc 1 402 1 view .LVU148
 506 0024 03B0     		add	sp, sp, #12
 507              	.LCFI10:
 508              		.cfi_def_cfa_offset 12
 509              		@ sp needed
ARM GAS  /tmp/ccX10RZP.s 			page 24


 510 0026 30BD     		pop	{r4, r5, pc}
 511              	.L20:
 512              		.align	2
 513              	.L19:
 514 0028 00000000 		.word	hdac
 515 002c 00740040 		.word	1073771520
 516              		.cfi_endproc
 517              	.LFE136:
 519              		.section	.text.MX_TIM4_Init,"ax",%progbits
 520              		.align	1
 521              		.syntax unified
 522              		.thumb
 523              		.thumb_func
 524              		.fpu fpv4-sp-d16
 526              	MX_TIM4_Init:
 527              	.LFB140:
 535:Core/Src/main.c **** 
 528              		.loc 1 535 1 is_stmt 1 view -0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 32
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 532 0000 30B5     		push	{r4, r5, lr}
 533              	.LCFI11:
 534              		.cfi_def_cfa_offset 12
 535              		.cfi_offset 4, -12
 536              		.cfi_offset 5, -8
 537              		.cfi_offset 14, -4
 538 0002 89B0     		sub	sp, sp, #36
 539              	.LCFI12:
 540              		.cfi_def_cfa_offset 48
 541:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 541              		.loc 1 541 3 view .LVU150
 541:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 542              		.loc 1 541 26 is_stmt 0 view .LVU151
 543 0004 0024     		movs	r4, #0
 544 0006 0394     		str	r4, [sp, #12]
 545 0008 0494     		str	r4, [sp, #16]
 546 000a 0594     		str	r4, [sp, #20]
 547 000c 0694     		str	r4, [sp, #24]
 548 000e 0794     		str	r4, [sp, #28]
 542:Core/Src/main.c **** 
 549              		.loc 1 542 3 is_stmt 1 view .LVU152
 542:Core/Src/main.c **** 
 550              		.loc 1 542 27 is_stmt 0 view .LVU153
 551 0010 0194     		str	r4, [sp, #4]
 552 0012 0294     		str	r4, [sp, #8]
 547:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 553              		.loc 1 547 3 is_stmt 1 view .LVU154
 547:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 554              		.loc 1 547 18 is_stmt 0 view .LVU155
 555 0014 0F4D     		ldr	r5, .L23
 556 0016 104B     		ldr	r3, .L23+4
 557 0018 2B60     		str	r3, [r5]
 548:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 558              		.loc 1 548 3 is_stmt 1 view .LVU156
 548:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 559              		.loc 1 548 24 is_stmt 0 view .LVU157
ARM GAS  /tmp/ccX10RZP.s 			page 25


 560 001a 6C60     		str	r4, [r5, #4]
 549:Core/Src/main.c ****   htim4.Init.Period = 65535;
 561              		.loc 1 549 3 is_stmt 1 view .LVU158
 549:Core/Src/main.c ****   htim4.Init.Period = 65535;
 562              		.loc 1 549 26 is_stmt 0 view .LVU159
 563 001c AC60     		str	r4, [r5, #8]
 550:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 564              		.loc 1 550 3 is_stmt 1 view .LVU160
 550:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 565              		.loc 1 550 21 is_stmt 0 view .LVU161
 566 001e 4FF6FF73 		movw	r3, #65535
 567 0022 EB60     		str	r3, [r5, #12]
 551:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 568              		.loc 1 551 3 is_stmt 1 view .LVU162
 551:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 569              		.loc 1 551 28 is_stmt 0 view .LVU163
 570 0024 2C61     		str	r4, [r5, #16]
 552:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 571              		.loc 1 552 3 is_stmt 1 view .LVU164
 552:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 572              		.loc 1 552 32 is_stmt 0 view .LVU165
 573 0026 AC61     		str	r4, [r5, #24]
 553:Core/Src/main.c ****   {
 574              		.loc 1 553 3 is_stmt 1 view .LVU166
 553:Core/Src/main.c ****   {
 575              		.loc 1 553 7 is_stmt 0 view .LVU167
 576 0028 2846     		mov	r0, r5
 577 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 578              	.LVL15:
 557:Core/Src/main.c ****   sSlaveConfig.InputTrigger = TIM_TS_TI2FP2;
 579              		.loc 1 557 3 is_stmt 1 view .LVU168
 557:Core/Src/main.c ****   sSlaveConfig.InputTrigger = TIM_TS_TI2FP2;
 580              		.loc 1 557 26 is_stmt 0 view .LVU169
 581 002e 0723     		movs	r3, #7
 582 0030 0393     		str	r3, [sp, #12]
 558:Core/Src/main.c ****   sSlaveConfig.TriggerPolarity = TIM_TRIGGERPOLARITY_RISING;
 583              		.loc 1 558 3 is_stmt 1 view .LVU170
 558:Core/Src/main.c ****   sSlaveConfig.TriggerPolarity = TIM_TRIGGERPOLARITY_RISING;
 584              		.loc 1 558 29 is_stmt 0 view .LVU171
 585 0032 6023     		movs	r3, #96
 586 0034 0493     		str	r3, [sp, #16]
 559:Core/Src/main.c ****   sSlaveConfig.TriggerFilter = 0;
 587              		.loc 1 559 3 is_stmt 1 view .LVU172
 559:Core/Src/main.c ****   sSlaveConfig.TriggerFilter = 0;
 588              		.loc 1 559 32 is_stmt 0 view .LVU173
 589 0036 0594     		str	r4, [sp, #20]
 560:Core/Src/main.c ****   if (HAL_TIM_SlaveConfigSynchro(&htim4, &sSlaveConfig) != HAL_OK)
 590              		.loc 1 560 3 is_stmt 1 view .LVU174
 560:Core/Src/main.c ****   if (HAL_TIM_SlaveConfigSynchro(&htim4, &sSlaveConfig) != HAL_OK)
 591              		.loc 1 560 30 is_stmt 0 view .LVU175
 592 0038 0794     		str	r4, [sp, #28]
 561:Core/Src/main.c ****   {
 593              		.loc 1 561 3 is_stmt 1 view .LVU176
 561:Core/Src/main.c ****   {
 594              		.loc 1 561 7 is_stmt 0 view .LVU177
 595 003a 03A9     		add	r1, sp, #12
 596 003c 2846     		mov	r0, r5
ARM GAS  /tmp/ccX10RZP.s 			page 26


 597 003e FFF7FEFF 		bl	HAL_TIM_SlaveConfigSynchro
 598              	.LVL16:
 565:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 599              		.loc 1 565 3 is_stmt 1 view .LVU178
 565:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 600              		.loc 1 565 37 is_stmt 0 view .LVU179
 601 0042 0194     		str	r4, [sp, #4]
 566:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 602              		.loc 1 566 3 is_stmt 1 view .LVU180
 566:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 603              		.loc 1 566 33 is_stmt 0 view .LVU181
 604 0044 0294     		str	r4, [sp, #8]
 567:Core/Src/main.c ****   {
 605              		.loc 1 567 3 is_stmt 1 view .LVU182
 567:Core/Src/main.c ****   {
 606              		.loc 1 567 7 is_stmt 0 view .LVU183
 607 0046 01A9     		add	r1, sp, #4
 608 0048 2846     		mov	r0, r5
 609 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 610              	.LVL17:
 575:Core/Src/main.c **** 
 611              		.loc 1 575 1 view .LVU184
 612 004e 09B0     		add	sp, sp, #36
 613              	.LCFI13:
 614              		.cfi_def_cfa_offset 12
 615              		@ sp needed
 616 0050 30BD     		pop	{r4, r5, pc}
 617              	.L24:
 618 0052 00BF     		.align	2
 619              	.L23:
 620 0054 00000000 		.word	htim4
 621 0058 00080040 		.word	1073743872
 622              		.cfi_endproc
 623              	.LFE140:
 625              		.section	.text.MX_TIM1_Init,"ax",%progbits
 626              		.align	1
 627              		.syntax unified
 628              		.thumb
 629              		.thumb_func
 630              		.fpu fpv4-sp-d16
 632              	MX_TIM1_Init:
 633              	.LFB139:
 486:Core/Src/main.c **** 
 634              		.loc 1 486 1 is_stmt 1 view -0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 32
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638 0000 30B5     		push	{r4, r5, lr}
 639              	.LCFI14:
 640              		.cfi_def_cfa_offset 12
 641              		.cfi_offset 4, -12
 642              		.cfi_offset 5, -8
 643              		.cfi_offset 14, -4
 644 0002 89B0     		sub	sp, sp, #36
 645              	.LCFI15:
 646              		.cfi_def_cfa_offset 48
 492:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
ARM GAS  /tmp/ccX10RZP.s 			page 27


 647              		.loc 1 492 3 view .LVU186
 492:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 648              		.loc 1 492 26 is_stmt 0 view .LVU187
 649 0004 0024     		movs	r4, #0
 650 0006 0394     		str	r4, [sp, #12]
 651 0008 0494     		str	r4, [sp, #16]
 652 000a 0594     		str	r4, [sp, #20]
 653 000c 0694     		str	r4, [sp, #24]
 654 000e 0794     		str	r4, [sp, #28]
 493:Core/Src/main.c **** 
 655              		.loc 1 493 3 is_stmt 1 view .LVU188
 493:Core/Src/main.c **** 
 656              		.loc 1 493 27 is_stmt 0 view .LVU189
 657 0010 0194     		str	r4, [sp, #4]
 658 0012 0294     		str	r4, [sp, #8]
 498:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 659              		.loc 1 498 3 is_stmt 1 view .LVU190
 498:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 660              		.loc 1 498 18 is_stmt 0 view .LVU191
 661 0014 0F4D     		ldr	r5, .L27
 662 0016 104B     		ldr	r3, .L27+4
 663 0018 2B60     		str	r3, [r5]
 499:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 664              		.loc 1 499 3 is_stmt 1 view .LVU192
 499:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 665              		.loc 1 499 24 is_stmt 0 view .LVU193
 666 001a 6C60     		str	r4, [r5, #4]
 500:Core/Src/main.c ****   htim1.Init.Period = 65535;
 667              		.loc 1 500 3 is_stmt 1 view .LVU194
 500:Core/Src/main.c ****   htim1.Init.Period = 65535;
 668              		.loc 1 500 26 is_stmt 0 view .LVU195
 669 001c AC60     		str	r4, [r5, #8]
 501:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 670              		.loc 1 501 3 is_stmt 1 view .LVU196
 501:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 671              		.loc 1 501 21 is_stmt 0 view .LVU197
 672 001e 4FF6FF73 		movw	r3, #65535
 673 0022 EB60     		str	r3, [r5, #12]
 502:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 674              		.loc 1 502 3 is_stmt 1 view .LVU198
 502:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 675              		.loc 1 502 28 is_stmt 0 view .LVU199
 676 0024 2C61     		str	r4, [r5, #16]
 503:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 677              		.loc 1 503 3 is_stmt 1 view .LVU200
 503:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 678              		.loc 1 503 32 is_stmt 0 view .LVU201
 679 0026 6C61     		str	r4, [r5, #20]
 504:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 680              		.loc 1 504 3 is_stmt 1 view .LVU202
 504:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 681              		.loc 1 504 32 is_stmt 0 view .LVU203
 682 0028 AC61     		str	r4, [r5, #24]
 505:Core/Src/main.c ****   {
 683              		.loc 1 505 3 is_stmt 1 view .LVU204
 505:Core/Src/main.c ****   {
 684              		.loc 1 505 7 is_stmt 0 view .LVU205
ARM GAS  /tmp/ccX10RZP.s 			page 28


 685 002a 2846     		mov	r0, r5
 686 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 687              	.LVL18:
 509:Core/Src/main.c ****   sSlaveConfig.InputTrigger = TIM_TS_TI2FP2;
 688              		.loc 1 509 3 is_stmt 1 view .LVU206
 509:Core/Src/main.c ****   sSlaveConfig.InputTrigger = TIM_TS_TI2FP2;
 689              		.loc 1 509 26 is_stmt 0 view .LVU207
 690 0030 0723     		movs	r3, #7
 691 0032 0393     		str	r3, [sp, #12]
 510:Core/Src/main.c ****   sSlaveConfig.TriggerPolarity = TIM_TRIGGERPOLARITY_RISING;
 692              		.loc 1 510 3 is_stmt 1 view .LVU208
 510:Core/Src/main.c ****   sSlaveConfig.TriggerPolarity = TIM_TRIGGERPOLARITY_RISING;
 693              		.loc 1 510 29 is_stmt 0 view .LVU209
 694 0034 6023     		movs	r3, #96
 695 0036 0493     		str	r3, [sp, #16]
 511:Core/Src/main.c ****   sSlaveConfig.TriggerFilter = 0;
 696              		.loc 1 511 3 is_stmt 1 view .LVU210
 511:Core/Src/main.c ****   sSlaveConfig.TriggerFilter = 0;
 697              		.loc 1 511 32 is_stmt 0 view .LVU211
 698 0038 0594     		str	r4, [sp, #20]
 512:Core/Src/main.c ****   if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 699              		.loc 1 512 3 is_stmt 1 view .LVU212
 512:Core/Src/main.c ****   if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 700              		.loc 1 512 30 is_stmt 0 view .LVU213
 701 003a 0794     		str	r4, [sp, #28]
 513:Core/Src/main.c ****   {
 702              		.loc 1 513 3 is_stmt 1 view .LVU214
 513:Core/Src/main.c ****   {
 703              		.loc 1 513 7 is_stmt 0 view .LVU215
 704 003c 03A9     		add	r1, sp, #12
 705 003e 2846     		mov	r0, r5
 706 0040 FFF7FEFF 		bl	HAL_TIM_SlaveConfigSynchro
 707              	.LVL19:
 517:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 708              		.loc 1 517 3 is_stmt 1 view .LVU216
 517:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 709              		.loc 1 517 37 is_stmt 0 view .LVU217
 710 0044 0194     		str	r4, [sp, #4]
 518:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 711              		.loc 1 518 3 is_stmt 1 view .LVU218
 518:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 712              		.loc 1 518 33 is_stmt 0 view .LVU219
 713 0046 0294     		str	r4, [sp, #8]
 519:Core/Src/main.c ****   {
 714              		.loc 1 519 3 is_stmt 1 view .LVU220
 519:Core/Src/main.c ****   {
 715              		.loc 1 519 7 is_stmt 0 view .LVU221
 716 0048 01A9     		add	r1, sp, #4
 717 004a 2846     		mov	r0, r5
 718 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 719              	.LVL20:
 527:Core/Src/main.c **** 
 720              		.loc 1 527 1 view .LVU222
 721 0050 09B0     		add	sp, sp, #36
 722              	.LCFI16:
 723              		.cfi_def_cfa_offset 12
 724              		@ sp needed
ARM GAS  /tmp/ccX10RZP.s 			page 29


 725 0052 30BD     		pop	{r4, r5, pc}
 726              	.L28:
 727              		.align	2
 728              	.L27:
 729 0054 00000000 		.word	htim1
 730 0058 00000140 		.word	1073807360
 731              		.cfi_endproc
 732              	.LFE139:
 734              		.section	.text.MX_TIM5_Init,"ax",%progbits
 735              		.align	1
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 739              		.fpu fpv4-sp-d16
 741              	MX_TIM5_Init:
 742              	.LFB141:
 583:Core/Src/main.c **** 
 743              		.loc 1 583 1 is_stmt 1 view -0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 24
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747 0000 30B5     		push	{r4, r5, lr}
 748              	.LCFI17:
 749              		.cfi_def_cfa_offset 12
 750              		.cfi_offset 4, -12
 751              		.cfi_offset 5, -8
 752              		.cfi_offset 14, -4
 753 0002 87B0     		sub	sp, sp, #28
 754              	.LCFI18:
 755              		.cfi_def_cfa_offset 40
 589:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 756              		.loc 1 589 3 view .LVU224
 589:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 757              		.loc 1 589 26 is_stmt 0 view .LVU225
 758 0004 0024     		movs	r4, #0
 759 0006 0294     		str	r4, [sp, #8]
 760 0008 0394     		str	r4, [sp, #12]
 761 000a 0494     		str	r4, [sp, #16]
 762 000c 0594     		str	r4, [sp, #20]
 590:Core/Src/main.c **** 
 763              		.loc 1 590 3 is_stmt 1 view .LVU226
 590:Core/Src/main.c **** 
 764              		.loc 1 590 27 is_stmt 0 view .LVU227
 765 000e 0094     		str	r4, [sp]
 766 0010 0194     		str	r4, [sp, #4]
 595:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
 767              		.loc 1 595 3 is_stmt 1 view .LVU228
 595:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
 768              		.loc 1 595 18 is_stmt 0 view .LVU229
 769 0012 0E4D     		ldr	r5, .L31
 770 0014 0E4B     		ldr	r3, .L31+4
 771 0016 2B60     		str	r3, [r5]
 596:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 772              		.loc 1 596 3 is_stmt 1 view .LVU230
 596:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 773              		.loc 1 596 24 is_stmt 0 view .LVU231
 774 0018 6C60     		str	r4, [r5, #4]
ARM GAS  /tmp/ccX10RZP.s 			page 30


 597:Core/Src/main.c ****   htim5.Init.Period = 64*1024*1024;
 775              		.loc 1 597 3 is_stmt 1 view .LVU232
 597:Core/Src/main.c ****   htim5.Init.Period = 64*1024*1024;
 776              		.loc 1 597 26 is_stmt 0 view .LVU233
 777 001a AC60     		str	r4, [r5, #8]
 598:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 778              		.loc 1 598 3 is_stmt 1 view .LVU234
 598:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 779              		.loc 1 598 21 is_stmt 0 view .LVU235
 780 001c 4FF08063 		mov	r3, #67108864
 781 0020 EB60     		str	r3, [r5, #12]
 599:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 782              		.loc 1 599 3 is_stmt 1 view .LVU236
 599:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 783              		.loc 1 599 28 is_stmt 0 view .LVU237
 784 0022 2C61     		str	r4, [r5, #16]
 600:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 785              		.loc 1 600 3 is_stmt 1 view .LVU238
 600:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 786              		.loc 1 600 32 is_stmt 0 view .LVU239
 787 0024 AC61     		str	r4, [r5, #24]
 601:Core/Src/main.c ****   {
 788              		.loc 1 601 3 is_stmt 1 view .LVU240
 601:Core/Src/main.c ****   {
 789              		.loc 1 601 7 is_stmt 0 view .LVU241
 790 0026 2846     		mov	r0, r5
 791 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 792              	.LVL21:
 605:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 793              		.loc 1 605 3 is_stmt 1 view .LVU242
 605:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 794              		.loc 1 605 34 is_stmt 0 view .LVU243
 795 002c 4FF48053 		mov	r3, #4096
 796 0030 0293     		str	r3, [sp, #8]
 606:Core/Src/main.c ****   {
 797              		.loc 1 606 3 is_stmt 1 view .LVU244
 606:Core/Src/main.c ****   {
 798              		.loc 1 606 7 is_stmt 0 view .LVU245
 799 0032 02A9     		add	r1, sp, #8
 800 0034 2846     		mov	r0, r5
 801 0036 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 802              	.LVL22:
 610:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 803              		.loc 1 610 3 is_stmt 1 view .LVU246
 610:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 804              		.loc 1 610 37 is_stmt 0 view .LVU247
 805 003a 0094     		str	r4, [sp]
 611:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 806              		.loc 1 611 3 is_stmt 1 view .LVU248
 611:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 807              		.loc 1 611 33 is_stmt 0 view .LVU249
 808 003c 0194     		str	r4, [sp, #4]
 612:Core/Src/main.c ****   {
 809              		.loc 1 612 3 is_stmt 1 view .LVU250
 612:Core/Src/main.c ****   {
 810              		.loc 1 612 7 is_stmt 0 view .LVU251
 811 003e 6946     		mov	r1, sp
ARM GAS  /tmp/ccX10RZP.s 			page 31


 812 0040 2846     		mov	r0, r5
 813 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 814              	.LVL23:
 620:Core/Src/main.c **** 
 815              		.loc 1 620 1 view .LVU252
 816 0046 07B0     		add	sp, sp, #28
 817              	.LCFI19:
 818              		.cfi_def_cfa_offset 12
 819              		@ sp needed
 820 0048 30BD     		pop	{r4, r5, pc}
 821              	.L32:
 822 004a 00BF     		.align	2
 823              	.L31:
 824 004c 00000000 		.word	htim5
 825 0050 000C0040 		.word	1073744896
 826              		.cfi_endproc
 827              	.LFE141:
 829              		.section	.text.MX_ADC1_Init,"ax",%progbits
 830              		.align	1
 831              		.syntax unified
 832              		.thumb
 833              		.thumb_func
 834              		.fpu fpv4-sp-d16
 836              	MX_ADC1_Init:
 837              	.LFB132:
 198:Core/Src/main.c **** 
 838              		.loc 1 198 1 is_stmt 1 view -0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 16
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 842 0000 70B5     		push	{r4, r5, r6, lr}
 843              	.LCFI20:
 844              		.cfi_def_cfa_offset 16
 845              		.cfi_offset 4, -16
 846              		.cfi_offset 5, -12
 847              		.cfi_offset 6, -8
 848              		.cfi_offset 14, -4
 849 0002 84B0     		sub	sp, sp, #16
 850              	.LCFI21:
 851              		.cfi_def_cfa_offset 32
 204:Core/Src/main.c **** 
 852              		.loc 1 204 3 view .LVU254
 204:Core/Src/main.c **** 
 853              		.loc 1 204 26 is_stmt 0 view .LVU255
 854 0004 0025     		movs	r5, #0
 855 0006 0095     		str	r5, [sp]
 856 0008 0195     		str	r5, [sp, #4]
 857 000a 0295     		str	r5, [sp, #8]
 858 000c 0395     		str	r5, [sp, #12]
 211:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV8;
 859              		.loc 1 211 3 is_stmt 1 view .LVU256
 211:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV8;
 860              		.loc 1 211 18 is_stmt 0 view .LVU257
 861 000e 104C     		ldr	r4, .L35
 862 0010 104B     		ldr	r3, .L35+4
 863 0012 2360     		str	r3, [r4]
 212:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
ARM GAS  /tmp/ccX10RZP.s 			page 32


 864              		.loc 1 212 3 is_stmt 1 view .LVU258
 212:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 865              		.loc 1 212 29 is_stmt 0 view .LVU259
 866 0014 4FF44033 		mov	r3, #196608
 867 0018 6360     		str	r3, [r4, #4]
 213:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 868              		.loc 1 213 3 is_stmt 1 view .LVU260
 213:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 869              		.loc 1 213 25 is_stmt 0 view .LVU261
 870 001a A560     		str	r5, [r4, #8]
 214:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 871              		.loc 1 214 3 is_stmt 1 view .LVU262
 214:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 872              		.loc 1 214 27 is_stmt 0 view .LVU263
 873 001c 2561     		str	r5, [r4, #16]
 215:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 874              		.loc 1 215 3 is_stmt 1 view .LVU264
 215:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 875              		.loc 1 215 33 is_stmt 0 view .LVU265
 876 001e 0126     		movs	r6, #1
 877 0020 2676     		strb	r6, [r4, #24]
 216:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 878              		.loc 1 216 3 is_stmt 1 view .LVU266
 216:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 879              		.loc 1 216 36 is_stmt 0 view .LVU267
 880 0022 84F82050 		strb	r5, [r4, #32]
 217:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 881              		.loc 1 217 3 is_stmt 1 view .LVU268
 217:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 882              		.loc 1 217 35 is_stmt 0 view .LVU269
 883 0026 E562     		str	r5, [r4, #44]
 218:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 884              		.loc 1 218 3 is_stmt 1 view .LVU270
 218:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 885              		.loc 1 218 31 is_stmt 0 view .LVU271
 886 0028 0B4B     		ldr	r3, .L35+8
 887 002a A362     		str	r3, [r4, #40]
 219:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 888              		.loc 1 219 3 is_stmt 1 view .LVU272
 219:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 889              		.loc 1 219 24 is_stmt 0 view .LVU273
 890 002c E560     		str	r5, [r4, #12]
 220:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 891              		.loc 1 220 3 is_stmt 1 view .LVU274
 220:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 892              		.loc 1 220 30 is_stmt 0 view .LVU275
 893 002e E661     		str	r6, [r4, #28]
 221:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 894              		.loc 1 221 3 is_stmt 1 view .LVU276
 221:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 895              		.loc 1 221 36 is_stmt 0 view .LVU277
 896 0030 84F83060 		strb	r6, [r4, #48]
 222:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 897              		.loc 1 222 3 is_stmt 1 view .LVU278
 222:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 898              		.loc 1 222 27 is_stmt 0 view .LVU279
 899 0034 6661     		str	r6, [r4, #20]
ARM GAS  /tmp/ccX10RZP.s 			page 33


 223:Core/Src/main.c ****   {
 900              		.loc 1 223 3 is_stmt 1 view .LVU280
 223:Core/Src/main.c ****   {
 901              		.loc 1 223 7 is_stmt 0 view .LVU281
 902 0036 2046     		mov	r0, r4
 903 0038 FFF7FEFF 		bl	HAL_ADC_Init
 904              	.LVL24:
 229:Core/Src/main.c ****   sConfig.Rank = 1;
 905              		.loc 1 229 3 is_stmt 1 view .LVU282
 229:Core/Src/main.c ****   sConfig.Rank = 1;
 906              		.loc 1 229 19 is_stmt 0 view .LVU283
 907 003c 0095     		str	r5, [sp]
 230:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 908              		.loc 1 230 3 is_stmt 1 view .LVU284
 230:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 909              		.loc 1 230 16 is_stmt 0 view .LVU285
 910 003e 0196     		str	r6, [sp, #4]
 231:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 911              		.loc 1 231 3 is_stmt 1 view .LVU286
 231:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 912              		.loc 1 231 24 is_stmt 0 view .LVU287
 913 0040 0295     		str	r5, [sp, #8]
 232:Core/Src/main.c ****   {
 914              		.loc 1 232 3 is_stmt 1 view .LVU288
 232:Core/Src/main.c ****   {
 915              		.loc 1 232 7 is_stmt 0 view .LVU289
 916 0042 6946     		mov	r1, sp
 917 0044 2046     		mov	r0, r4
 918 0046 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 919              	.LVL25:
 240:Core/Src/main.c **** 
 920              		.loc 1 240 1 view .LVU290
 921 004a 04B0     		add	sp, sp, #16
 922              	.LCFI22:
 923              		.cfi_def_cfa_offset 16
 924              		@ sp needed
 925 004c 70BD     		pop	{r4, r5, r6, pc}
 926              	.L36:
 927 004e 00BF     		.align	2
 928              	.L35:
 929 0050 00000000 		.word	hadc1
 930 0054 00200140 		.word	1073815552
 931 0058 0100000F 		.word	251658241
 932              		.cfi_endproc
 933              	.LFE132:
 935              		.section	.text.MX_ADC2_Init,"ax",%progbits
 936              		.align	1
 937              		.syntax unified
 938              		.thumb
 939              		.thumb_func
 940              		.fpu fpv4-sp-d16
 942              	MX_ADC2_Init:
 943              	.LFB133:
 248:Core/Src/main.c **** 
 944              		.loc 1 248 1 is_stmt 1 view -0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccX10RZP.s 			page 34


 947              		@ frame_needed = 0, uses_anonymous_args = 0
 948 0000 70B5     		push	{r4, r5, r6, lr}
 949              	.LCFI23:
 950              		.cfi_def_cfa_offset 16
 951              		.cfi_offset 4, -16
 952              		.cfi_offset 5, -12
 953              		.cfi_offset 6, -8
 954              		.cfi_offset 14, -4
 955 0002 84B0     		sub	sp, sp, #16
 956              	.LCFI24:
 957              		.cfi_def_cfa_offset 32
 254:Core/Src/main.c **** 
 958              		.loc 1 254 3 view .LVU292
 254:Core/Src/main.c **** 
 959              		.loc 1 254 26 is_stmt 0 view .LVU293
 960 0004 0025     		movs	r5, #0
 961 0006 0095     		str	r5, [sp]
 962 0008 0195     		str	r5, [sp, #4]
 963 000a 0295     		str	r5, [sp, #8]
 964 000c 0395     		str	r5, [sp, #12]
 261:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV8;
 965              		.loc 1 261 3 is_stmt 1 view .LVU294
 261:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV8;
 966              		.loc 1 261 18 is_stmt 0 view .LVU295
 967 000e 104C     		ldr	r4, .L39
 968 0010 104B     		ldr	r3, .L39+4
 969 0012 2360     		str	r3, [r4]
 262:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 970              		.loc 1 262 3 is_stmt 1 view .LVU296
 262:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 971              		.loc 1 262 29 is_stmt 0 view .LVU297
 972 0014 4FF44033 		mov	r3, #196608
 973 0018 6360     		str	r3, [r4, #4]
 263:Core/Src/main.c ****   hadc2.Init.ScanConvMode = DISABLE;
 974              		.loc 1 263 3 is_stmt 1 view .LVU298
 263:Core/Src/main.c ****   hadc2.Init.ScanConvMode = DISABLE;
 975              		.loc 1 263 25 is_stmt 0 view .LVU299
 976 001a A560     		str	r5, [r4, #8]
 264:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = ENABLE;
 977              		.loc 1 264 3 is_stmt 1 view .LVU300
 264:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = ENABLE;
 978              		.loc 1 264 27 is_stmt 0 view .LVU301
 979 001c 2561     		str	r5, [r4, #16]
 265:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 980              		.loc 1 265 3 is_stmt 1 view .LVU302
 265:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 981              		.loc 1 265 33 is_stmt 0 view .LVU303
 982 001e 0126     		movs	r6, #1
 983 0020 2676     		strb	r6, [r4, #24]
 266:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 984              		.loc 1 266 3 is_stmt 1 view .LVU304
 266:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 985              		.loc 1 266 36 is_stmt 0 view .LVU305
 986 0022 84F82050 		strb	r5, [r4, #32]
 267:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 987              		.loc 1 267 3 is_stmt 1 view .LVU306
 267:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
ARM GAS  /tmp/ccX10RZP.s 			page 35


 988              		.loc 1 267 35 is_stmt 0 view .LVU307
 989 0026 E562     		str	r5, [r4, #44]
 268:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 990              		.loc 1 268 3 is_stmt 1 view .LVU308
 268:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 991              		.loc 1 268 31 is_stmt 0 view .LVU309
 992 0028 0B4B     		ldr	r3, .L39+8
 993 002a A362     		str	r3, [r4, #40]
 269:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
 994              		.loc 1 269 3 is_stmt 1 view .LVU310
 269:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
 995              		.loc 1 269 24 is_stmt 0 view .LVU311
 996 002c E560     		str	r5, [r4, #12]
 270:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 997              		.loc 1 270 3 is_stmt 1 view .LVU312
 270:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 998              		.loc 1 270 30 is_stmt 0 view .LVU313
 999 002e E661     		str	r6, [r4, #28]
 271:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1000              		.loc 1 271 3 is_stmt 1 view .LVU314
 271:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1001              		.loc 1 271 36 is_stmt 0 view .LVU315
 1002 0030 84F83060 		strb	r6, [r4, #48]
 272:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 1003              		.loc 1 272 3 is_stmt 1 view .LVU316
 272:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 1004              		.loc 1 272 27 is_stmt 0 view .LVU317
 1005 0034 6661     		str	r6, [r4, #20]
 273:Core/Src/main.c ****   {
 1006              		.loc 1 273 3 is_stmt 1 view .LVU318
 273:Core/Src/main.c ****   {
 1007              		.loc 1 273 7 is_stmt 0 view .LVU319
 1008 0036 2046     		mov	r0, r4
 1009 0038 FFF7FEFF 		bl	HAL_ADC_Init
 1010              	.LVL26:
 279:Core/Src/main.c ****   sConfig.Rank = 1;
 1011              		.loc 1 279 3 is_stmt 1 view .LVU320
 279:Core/Src/main.c ****   sConfig.Rank = 1;
 1012              		.loc 1 279 19 is_stmt 0 view .LVU321
 1013 003c 0096     		str	r6, [sp]
 280:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1014              		.loc 1 280 3 is_stmt 1 view .LVU322
 280:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1015              		.loc 1 280 16 is_stmt 0 view .LVU323
 1016 003e 0196     		str	r6, [sp, #4]
 281:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 1017              		.loc 1 281 3 is_stmt 1 view .LVU324
 281:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 1018              		.loc 1 281 24 is_stmt 0 view .LVU325
 1019 0040 0295     		str	r5, [sp, #8]
 282:Core/Src/main.c ****   {
 1020              		.loc 1 282 3 is_stmt 1 view .LVU326
 282:Core/Src/main.c ****   {
 1021              		.loc 1 282 7 is_stmt 0 view .LVU327
 1022 0042 6946     		mov	r1, sp
 1023 0044 2046     		mov	r0, r4
 1024 0046 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
ARM GAS  /tmp/ccX10RZP.s 			page 36


 1025              	.LVL27:
 290:Core/Src/main.c **** 
 1026              		.loc 1 290 1 view .LVU328
 1027 004a 04B0     		add	sp, sp, #16
 1028              	.LCFI25:
 1029              		.cfi_def_cfa_offset 16
 1030              		@ sp needed
 1031 004c 70BD     		pop	{r4, r5, r6, pc}
 1032              	.L40:
 1033 004e 00BF     		.align	2
 1034              	.L39:
 1035 0050 00000000 		.word	hadc2
 1036 0054 00210140 		.word	1073815808
 1037 0058 0100000F 		.word	251658241
 1038              		.cfi_endproc
 1039              	.LFE133:
 1041              		.section	.text.MX_CAN1_Init,"ax",%progbits
 1042              		.align	1
 1043              		.syntax unified
 1044              		.thumb
 1045              		.thumb_func
 1046              		.fpu fpv4-sp-d16
 1048              	MX_CAN1_Init:
 1049              	.LFB134:
 298:Core/Src/main.c **** 
 1050              		.loc 1 298 1 is_stmt 1 view -0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 0
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 1054 0000 08B5     		push	{r3, lr}
 1055              	.LCFI26:
 1056              		.cfi_def_cfa_offset 8
 1057              		.cfi_offset 3, -8
 1058              		.cfi_offset 14, -4
 307:Core/Src/main.c ****   hcan1.Init.Prescaler = 3;
 1059              		.loc 1 307 3 view .LVU330
 307:Core/Src/main.c ****   hcan1.Init.Prescaler = 3;
 1060              		.loc 1 307 18 is_stmt 0 view .LVU331
 1061 0002 0B48     		ldr	r0, .L43
 1062 0004 0B4B     		ldr	r3, .L43+4
 1063 0006 0360     		str	r3, [r0]
 308:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1064              		.loc 1 308 3 is_stmt 1 view .LVU332
 308:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1065              		.loc 1 308 24 is_stmt 0 view .LVU333
 1066 0008 0323     		movs	r3, #3
 1067 000a 4360     		str	r3, [r0, #4]
 309:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1068              		.loc 1 309 3 is_stmt 1 view .LVU334
 309:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1069              		.loc 1 309 19 is_stmt 0 view .LVU335
 1070 000c 0023     		movs	r3, #0
 1071 000e 8360     		str	r3, [r0, #8]
 310:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_13TQ;
 1072              		.loc 1 310 3 is_stmt 1 view .LVU336
 310:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_13TQ;
 1073              		.loc 1 310 28 is_stmt 0 view .LVU337
ARM GAS  /tmp/ccX10RZP.s 			page 37


 1074 0010 C360     		str	r3, [r0, #12]
 311:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 1075              		.loc 1 311 3 is_stmt 1 view .LVU338
 311:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 1076              		.loc 1 311 23 is_stmt 0 view .LVU339
 1077 0012 4FF44022 		mov	r2, #786432
 1078 0016 0261     		str	r2, [r0, #16]
 312:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1079              		.loc 1 312 3 is_stmt 1 view .LVU340
 312:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1080              		.loc 1 312 23 is_stmt 0 view .LVU341
 1081 0018 4FF48012 		mov	r2, #1048576
 1082 001c 4261     		str	r2, [r0, #20]
 313:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 1083              		.loc 1 313 3 is_stmt 1 view .LVU342
 313:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 1084              		.loc 1 313 32 is_stmt 0 view .LVU343
 1085 001e 0376     		strb	r3, [r0, #24]
 314:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 1086              		.loc 1 314 3 is_stmt 1 view .LVU344
 314:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 1087              		.loc 1 314 25 is_stmt 0 view .LVU345
 1088 0020 4376     		strb	r3, [r0, #25]
 315:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 1089              		.loc 1 315 3 is_stmt 1 view .LVU346
 315:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 1090              		.loc 1 315 25 is_stmt 0 view .LVU347
 1091 0022 8376     		strb	r3, [r0, #26]
 316:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 1092              		.loc 1 316 3 is_stmt 1 view .LVU348
 316:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 1093              		.loc 1 316 33 is_stmt 0 view .LVU349
 1094 0024 C376     		strb	r3, [r0, #27]
 317:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 1095              		.loc 1 317 3 is_stmt 1 view .LVU350
 317:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 1096              		.loc 1 317 32 is_stmt 0 view .LVU351
 1097 0026 0377     		strb	r3, [r0, #28]
 318:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1098              		.loc 1 318 3 is_stmt 1 view .LVU352
 318:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1099              		.loc 1 318 35 is_stmt 0 view .LVU353
 1100 0028 4377     		strb	r3, [r0, #29]
 319:Core/Src/main.c ****   {
 1101              		.loc 1 319 3 is_stmt 1 view .LVU354
 319:Core/Src/main.c ****   {
 1102              		.loc 1 319 7 is_stmt 0 view .LVU355
 1103 002a FFF7FEFF 		bl	HAL_CAN_Init
 1104              	.LVL28:
 327:Core/Src/main.c **** 
 1105              		.loc 1 327 1 view .LVU356
 1106 002e 08BD     		pop	{r3, pc}
 1107              	.L44:
 1108              		.align	2
 1109              	.L43:
 1110 0030 00000000 		.word	hcan1
 1111 0034 00640040 		.word	1073767424
ARM GAS  /tmp/ccX10RZP.s 			page 38


 1112              		.cfi_endproc
 1113              	.LFE134:
 1115              		.section	.text.MX_CAN2_Init,"ax",%progbits
 1116              		.align	1
 1117              		.syntax unified
 1118              		.thumb
 1119              		.thumb_func
 1120              		.fpu fpv4-sp-d16
 1122              	MX_CAN2_Init:
 1123              	.LFB135:
 335:Core/Src/main.c **** 
 1124              		.loc 1 335 1 is_stmt 1 view -0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 0, uses_anonymous_args = 0
 1128 0000 08B5     		push	{r3, lr}
 1129              	.LCFI27:
 1130              		.cfi_def_cfa_offset 8
 1131              		.cfi_offset 3, -8
 1132              		.cfi_offset 14, -4
 344:Core/Src/main.c ****   hcan2.Init.Prescaler = 3;
 1133              		.loc 1 344 3 view .LVU358
 344:Core/Src/main.c ****   hcan2.Init.Prescaler = 3;
 1134              		.loc 1 344 18 is_stmt 0 view .LVU359
 1135 0002 0B48     		ldr	r0, .L47
 1136 0004 0B4B     		ldr	r3, .L47+4
 1137 0006 0360     		str	r3, [r0]
 345:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 1138              		.loc 1 345 3 is_stmt 1 view .LVU360
 345:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 1139              		.loc 1 345 24 is_stmt 0 view .LVU361
 1140 0008 0323     		movs	r3, #3
 1141 000a 4360     		str	r3, [r0, #4]
 346:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1142              		.loc 1 346 3 is_stmt 1 view .LVU362
 346:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1143              		.loc 1 346 19 is_stmt 0 view .LVU363
 1144 000c 0023     		movs	r3, #0
 1145 000e 8360     		str	r3, [r0, #8]
 347:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_13TQ;
 1146              		.loc 1 347 3 is_stmt 1 view .LVU364
 347:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_13TQ;
 1147              		.loc 1 347 28 is_stmt 0 view .LVU365
 1148 0010 C360     		str	r3, [r0, #12]
 348:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_2TQ;
 1149              		.loc 1 348 3 is_stmt 1 view .LVU366
 348:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_2TQ;
 1150              		.loc 1 348 23 is_stmt 0 view .LVU367
 1151 0012 4FF44022 		mov	r2, #786432
 1152 0016 0261     		str	r2, [r0, #16]
 349:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 1153              		.loc 1 349 3 is_stmt 1 view .LVU368
 349:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 1154              		.loc 1 349 23 is_stmt 0 view .LVU369
 1155 0018 4FF48012 		mov	r2, #1048576
 1156 001c 4261     		str	r2, [r0, #20]
 350:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
ARM GAS  /tmp/ccX10RZP.s 			page 39


 1157              		.loc 1 350 3 is_stmt 1 view .LVU370
 350:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
 1158              		.loc 1 350 32 is_stmt 0 view .LVU371
 1159 001e 0376     		strb	r3, [r0, #24]
 351:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 1160              		.loc 1 351 3 is_stmt 1 view .LVU372
 351:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 1161              		.loc 1 351 25 is_stmt 0 view .LVU373
 1162 0020 4376     		strb	r3, [r0, #25]
 352:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 1163              		.loc 1 352 3 is_stmt 1 view .LVU374
 352:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 1164              		.loc 1 352 25 is_stmt 0 view .LVU375
 1165 0022 8376     		strb	r3, [r0, #26]
 353:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 1166              		.loc 1 353 3 is_stmt 1 view .LVU376
 353:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 1167              		.loc 1 353 33 is_stmt 0 view .LVU377
 1168 0024 C376     		strb	r3, [r0, #27]
 354:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 1169              		.loc 1 354 3 is_stmt 1 view .LVU378
 354:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 1170              		.loc 1 354 32 is_stmt 0 view .LVU379
 1171 0026 0377     		strb	r3, [r0, #28]
 355:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 1172              		.loc 1 355 3 is_stmt 1 view .LVU380
 355:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 1173              		.loc 1 355 35 is_stmt 0 view .LVU381
 1174 0028 4377     		strb	r3, [r0, #29]
 356:Core/Src/main.c ****   {
 1175              		.loc 1 356 3 is_stmt 1 view .LVU382
 356:Core/Src/main.c ****   {
 1176              		.loc 1 356 7 is_stmt 0 view .LVU383
 1177 002a FFF7FEFF 		bl	HAL_CAN_Init
 1178              	.LVL29:
 364:Core/Src/main.c **** 
 1179              		.loc 1 364 1 view .LVU384
 1180 002e 08BD     		pop	{r3, pc}
 1181              	.L48:
 1182              		.align	2
 1183              	.L47:
 1184 0030 00000000 		.word	hcan2
 1185 0034 00680040 		.word	1073768448
 1186              		.cfi_endproc
 1187              	.LFE135:
 1189              		.section	.text.SystemClock_Config,"ax",%progbits
 1190              		.align	1
 1191              		.global	SystemClock_Config
 1192              		.syntax unified
 1193              		.thumb
 1194              		.thumb_func
 1195              		.fpu fpv4-sp-d16
 1197              	SystemClock_Config:
 1198              	.LFB131:
 151:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1199              		.loc 1 151 1 is_stmt 1 view -0
 1200              		.cfi_startproc
ARM GAS  /tmp/ccX10RZP.s 			page 40


 1201              		@ args = 0, pretend = 0, frame = 80
 1202              		@ frame_needed = 0, uses_anonymous_args = 0
 1203 0000 70B5     		push	{r4, r5, r6, lr}
 1204              	.LCFI28:
 1205              		.cfi_def_cfa_offset 16
 1206              		.cfi_offset 4, -16
 1207              		.cfi_offset 5, -12
 1208              		.cfi_offset 6, -8
 1209              		.cfi_offset 14, -4
 1210 0002 94B0     		sub	sp, sp, #80
 1211              	.LCFI29:
 1212              		.cfi_def_cfa_offset 96
 152:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1213              		.loc 1 152 3 view .LVU386
 152:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1214              		.loc 1 152 22 is_stmt 0 view .LVU387
 1215 0004 3022     		movs	r2, #48
 1216 0006 0021     		movs	r1, #0
 1217 0008 08A8     		add	r0, sp, #32
 1218 000a FFF7FEFF 		bl	memset
 1219              	.LVL30:
 153:Core/Src/main.c **** 
 1220              		.loc 1 153 3 is_stmt 1 view .LVU388
 153:Core/Src/main.c **** 
 1221              		.loc 1 153 22 is_stmt 0 view .LVU389
 1222 000e 0024     		movs	r4, #0
 1223 0010 0394     		str	r4, [sp, #12]
 1224 0012 0494     		str	r4, [sp, #16]
 1225 0014 0594     		str	r4, [sp, #20]
 1226 0016 0694     		str	r4, [sp, #24]
 1227 0018 0794     		str	r4, [sp, #28]
 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1228              		.loc 1 157 3 is_stmt 1 view .LVU390
 1229              	.LBB8:
 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1230              		.loc 1 157 3 view .LVU391
 1231 001a 0194     		str	r4, [sp, #4]
 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1232              		.loc 1 157 3 view .LVU392
 1233 001c 204B     		ldr	r3, .L51
 1234 001e 1A6C     		ldr	r2, [r3, #64]
 1235 0020 42F08052 		orr	r2, r2, #268435456
 1236 0024 1A64     		str	r2, [r3, #64]
 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1237              		.loc 1 157 3 view .LVU393
 1238 0026 1B6C     		ldr	r3, [r3, #64]
 1239 0028 03F08053 		and	r3, r3, #268435456
 1240 002c 0193     		str	r3, [sp, #4]
 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1241              		.loc 1 157 3 view .LVU394
 1242 002e 019B     		ldr	r3, [sp, #4]
 1243              	.LBE8:
 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1244              		.loc 1 157 3 view .LVU395
 158:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1245              		.loc 1 158 3 view .LVU396
 1246              	.LBB9:
ARM GAS  /tmp/ccX10RZP.s 			page 41


 158:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1247              		.loc 1 158 3 view .LVU397
 1248 0030 0294     		str	r4, [sp, #8]
 158:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1249              		.loc 1 158 3 view .LVU398
 1250 0032 1C4B     		ldr	r3, .L51+4
 1251 0034 1A68     		ldr	r2, [r3]
 1252 0036 42F48042 		orr	r2, r2, #16384
 1253 003a 1A60     		str	r2, [r3]
 158:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1254              		.loc 1 158 3 view .LVU399
 1255 003c 1B68     		ldr	r3, [r3]
 1256 003e 03F48043 		and	r3, r3, #16384
 1257 0042 0293     		str	r3, [sp, #8]
 158:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1258              		.loc 1 158 3 view .LVU400
 1259 0044 029B     		ldr	r3, [sp, #8]
 1260              	.LBE9:
 158:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1261              		.loc 1 158 3 view .LVU401
 162:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1262              		.loc 1 162 3 view .LVU402
 162:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1263              		.loc 1 162 36 is_stmt 0 view .LVU403
 1264 0046 0326     		movs	r6, #3
 1265 0048 0896     		str	r6, [sp, #32]
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1266              		.loc 1 163 3 is_stmt 1 view .LVU404
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1267              		.loc 1 163 30 is_stmt 0 view .LVU405
 1268 004a 4FF48033 		mov	r3, #65536
 1269 004e 0993     		str	r3, [sp, #36]
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1270              		.loc 1 164 3 is_stmt 1 view .LVU406
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1271              		.loc 1 164 30 is_stmt 0 view .LVU407
 1272 0050 0123     		movs	r3, #1
 1273 0052 0B93     		str	r3, [sp, #44]
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1274              		.loc 1 165 3 is_stmt 1 view .LVU408
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1275              		.loc 1 165 41 is_stmt 0 view .LVU409
 1276 0054 1023     		movs	r3, #16
 1277 0056 0C93     		str	r3, [sp, #48]
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1278              		.loc 1 166 3 is_stmt 1 view .LVU410
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1279              		.loc 1 166 34 is_stmt 0 view .LVU411
 1280 0058 0225     		movs	r5, #2
 1281 005a 0E95     		str	r5, [sp, #56]
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 9;
 1282              		.loc 1 167 3 is_stmt 1 view .LVU412
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 9;
 1283              		.loc 1 167 35 is_stmt 0 view .LVU413
 1284 005c 4FF48003 		mov	r3, #4194304
 1285 0060 0F93     		str	r3, [sp, #60]
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
ARM GAS  /tmp/ccX10RZP.s 			page 42


 1286              		.loc 1 168 3 is_stmt 1 view .LVU414
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 1287              		.loc 1 168 30 is_stmt 0 view .LVU415
 1288 0062 0923     		movs	r3, #9
 1289 0064 1093     		str	r3, [sp, #64]
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1290              		.loc 1 169 3 is_stmt 1 view .LVU416
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1291              		.loc 1 169 30 is_stmt 0 view .LVU417
 1292 0066 C023     		movs	r3, #192
 1293 0068 1193     		str	r3, [sp, #68]
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1294              		.loc 1 170 3 is_stmt 1 view .LVU418
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1295              		.loc 1 170 30 is_stmt 0 view .LVU419
 1296 006a 1295     		str	r5, [sp, #72]
 171:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1297              		.loc 1 171 3 is_stmt 1 view .LVU420
 171:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1298              		.loc 1 171 30 is_stmt 0 view .LVU421
 1299 006c 0423     		movs	r3, #4
 1300 006e 1393     		str	r3, [sp, #76]
 172:Core/Src/main.c ****   {
 1301              		.loc 1 172 3 is_stmt 1 view .LVU422
 172:Core/Src/main.c ****   {
 1302              		.loc 1 172 7 is_stmt 0 view .LVU423
 1303 0070 08A8     		add	r0, sp, #32
 1304 0072 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1305              	.LVL31:
 178:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1306              		.loc 1 178 3 is_stmt 1 view .LVU424
 178:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1307              		.loc 1 178 31 is_stmt 0 view .LVU425
 1308 0076 0F23     		movs	r3, #15
 1309 0078 0393     		str	r3, [sp, #12]
 180:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1310              		.loc 1 180 3 is_stmt 1 view .LVU426
 180:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1311              		.loc 1 180 34 is_stmt 0 view .LVU427
 1312 007a 0495     		str	r5, [sp, #16]
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1313              		.loc 1 181 3 is_stmt 1 view .LVU428
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1314              		.loc 1 181 35 is_stmt 0 view .LVU429
 1315 007c 0594     		str	r4, [sp, #20]
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1316              		.loc 1 182 3 is_stmt 1 view .LVU430
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1317              		.loc 1 182 36 is_stmt 0 view .LVU431
 1318 007e 4FF4A053 		mov	r3, #5120
 1319 0082 0693     		str	r3, [sp, #24]
 183:Core/Src/main.c **** 
 1320              		.loc 1 183 3 is_stmt 1 view .LVU432
 183:Core/Src/main.c **** 
 1321              		.loc 1 183 36 is_stmt 0 view .LVU433
 1322 0084 4FF48053 		mov	r3, #4096
 1323 0088 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccX10RZP.s 			page 43


 185:Core/Src/main.c ****   {
 1324              		.loc 1 185 3 is_stmt 1 view .LVU434
 185:Core/Src/main.c ****   {
 1325              		.loc 1 185 7 is_stmt 0 view .LVU435
 1326 008a 3146     		mov	r1, r6
 1327 008c 03A8     		add	r0, sp, #12
 1328 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1329              	.LVL32:
 189:Core/Src/main.c **** }
 1330              		.loc 1 189 3 is_stmt 1 view .LVU436
 1331 0092 2246     		mov	r2, r4
 1332 0094 2146     		mov	r1, r4
 1333 0096 2046     		mov	r0, r4
 1334 0098 FFF7FEFF 		bl	HAL_RCC_MCOConfig
 1335              	.LVL33:
 190:Core/Src/main.c **** 
 1336              		.loc 1 190 1 is_stmt 0 view .LVU437
 1337 009c 14B0     		add	sp, sp, #80
 1338              	.LCFI30:
 1339              		.cfi_def_cfa_offset 16
 1340              		@ sp needed
 1341 009e 70BD     		pop	{r4, r5, r6, pc}
 1342              	.L52:
 1343              		.align	2
 1344              	.L51:
 1345 00a0 00380240 		.word	1073887232
 1346 00a4 00700040 		.word	1073770496
 1347              		.cfi_endproc
 1348              	.LFE131:
 1350              		.section	.text.main,"ax",%progbits
 1351              		.align	1
 1352              		.global	main
 1353              		.syntax unified
 1354              		.thumb
 1355              		.thumb_func
 1356              		.fpu fpv4-sp-d16
 1358              	main:
 1359              	.LFB130:
  96:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1360              		.loc 1 96 1 is_stmt 1 view -0
 1361              		.cfi_startproc
 1362              		@ Volatile: function does not return.
 1363              		@ args = 0, pretend = 0, frame = 0
 1364              		@ frame_needed = 0, uses_anonymous_args = 0
 1365 0000 08B5     		push	{r3, lr}
 1366              	.LCFI31:
 1367              		.cfi_def_cfa_offset 8
 1368              		.cfi_offset 3, -8
 1369              		.cfi_offset 14, -4
 104:Core/Src/main.c ****   //preMainLoop1();
 1370              		.loc 1 104 3 view .LVU439
 1371 0002 FFF7FEFF 		bl	HAL_Init
 1372              	.LVL34:
 111:Core/Src/main.c **** 
 1373              		.loc 1 111 3 view .LVU440
 1374 0006 FFF7FEFF 		bl	SystemClock_Config
 1375              	.LVL35:
ARM GAS  /tmp/ccX10RZP.s 			page 44


 118:Core/Src/main.c ****   MX_DMA_Init();
 1376              		.loc 1 118 3 view .LVU441
 1377 000a FFF7FEFF 		bl	MX_GPIO_Init
 1378              	.LVL36:
 119:Core/Src/main.c ****   MX_SPI1_Init();
 1379              		.loc 1 119 3 view .LVU442
 1380 000e FFF7FEFF 		bl	MX_DMA_Init
 1381              	.LVL37:
 120:Core/Src/main.c ****   //MX_USART2_UART_Init();
 1382              		.loc 1 120 3 view .LVU443
 1383 0012 FFF7FEFF 		bl	MX_SPI1_Init
 1384              	.LVL38:
 122:Core/Src/main.c ****   MX_TIM4_Init();
 1385              		.loc 1 122 3 view .LVU444
 1386 0016 FFF7FEFF 		bl	MX_DAC_Init
 1387              	.LVL39:
 123:Core/Src/main.c ****   MX_TIM1_Init();
 1388              		.loc 1 123 3 view .LVU445
 1389 001a FFF7FEFF 		bl	MX_TIM4_Init
 1390              	.LVL40:
 124:Core/Src/main.c ****   MX_TIM5_Init();
 1391              		.loc 1 124 3 view .LVU446
 1392 001e FFF7FEFF 		bl	MX_TIM1_Init
 1393              	.LVL41:
 125:Core/Src/main.c ****   MX_SPI2_Init();
 1394              		.loc 1 125 3 view .LVU447
 1395 0022 FFF7FEFF 		bl	MX_TIM5_Init
 1396              	.LVL42:
 126:Core/Src/main.c ****   MX_ADC1_Init();
 1397              		.loc 1 126 3 view .LVU448
 1398 0026 FFF7FEFF 		bl	MX_SPI2_Init
 1399              	.LVL43:
 127:Core/Src/main.c ****   MX_ADC2_Init();
 1400              		.loc 1 127 3 view .LVU449
 1401 002a FFF7FEFF 		bl	MX_ADC1_Init
 1402              	.LVL44:
 128:Core/Src/main.c ****   MX_CAN1_Init();
 1403              		.loc 1 128 3 view .LVU450
 1404 002e FFF7FEFF 		bl	MX_ADC2_Init
 1405              	.LVL45:
 129:Core/Src/main.c ****   MX_CAN2_Init();
 1406              		.loc 1 129 3 view .LVU451
 1407 0032 FFF7FEFF 		bl	MX_CAN1_Init
 1408              	.LVL46:
 130:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1409              		.loc 1 130 3 view .LVU452
 1410 0036 FFF7FEFF 		bl	MX_CAN2_Init
 1411              	.LVL47:
 1412              	.L54:
 137:Core/Src/main.c ****   {
 1413              		.loc 1 137 3 discriminator 1 view .LVU453
 140:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 1414              		.loc 1 140 5 discriminator 1 view .LVU454
 1415 003a FFF7FEFF 		bl	mainLoop1
 1416              	.LVL48:
 137:Core/Src/main.c ****   {
 1417              		.loc 1 137 9 discriminator 1 view .LVU455
ARM GAS  /tmp/ccX10RZP.s 			page 45


 1418 003e FCE7     		b	.L54
 1419              		.cfi_endproc
 1420              	.LFE130:
 1422              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1423              		.align	1
 1424              		.global	MX_USART2_UART_Init
 1425              		.syntax unified
 1426              		.thumb
 1427              		.thumb_func
 1428              		.fpu fpv4-sp-d16
 1430              	MX_USART2_UART_Init:
 1431              	.LFB142:
 628:Core/Src/main.c **** 
 1432              		.loc 1 628 1 view -0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 0
 1435              		@ frame_needed = 0, uses_anonymous_args = 0
 1436 0000 08B5     		push	{r3, lr}
 1437              	.LCFI32:
 1438              		.cfi_def_cfa_offset 8
 1439              		.cfi_offset 3, -8
 1440              		.cfi_offset 14, -4
 637:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1441              		.loc 1 637 3 view .LVU457
 637:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1442              		.loc 1 637 19 is_stmt 0 view .LVU458
 1443 0002 0848     		ldr	r0, .L58
 1444 0004 084B     		ldr	r3, .L58+4
 1445 0006 0360     		str	r3, [r0]
 638:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1446              		.loc 1 638 3 is_stmt 1 view .LVU459
 638:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1447              		.loc 1 638 24 is_stmt 0 view .LVU460
 1448 0008 4FF4E133 		mov	r3, #115200
 1449 000c 4360     		str	r3, [r0, #4]
 639:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1450              		.loc 1 639 3 is_stmt 1 view .LVU461
 639:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1451              		.loc 1 639 26 is_stmt 0 view .LVU462
 1452 000e 0023     		movs	r3, #0
 1453 0010 8360     		str	r3, [r0, #8]
 640:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1454              		.loc 1 640 3 is_stmt 1 view .LVU463
 640:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1455              		.loc 1 640 24 is_stmt 0 view .LVU464
 1456 0012 C360     		str	r3, [r0, #12]
 641:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1457              		.loc 1 641 3 is_stmt 1 view .LVU465
 641:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1458              		.loc 1 641 22 is_stmt 0 view .LVU466
 1459 0014 0361     		str	r3, [r0, #16]
 642:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1460              		.loc 1 642 3 is_stmt 1 view .LVU467
 642:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1461              		.loc 1 642 20 is_stmt 0 view .LVU468
 1462 0016 0C22     		movs	r2, #12
 1463 0018 4261     		str	r2, [r0, #20]
ARM GAS  /tmp/ccX10RZP.s 			page 46


 643:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1464              		.loc 1 643 3 is_stmt 1 view .LVU469
 643:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1465              		.loc 1 643 25 is_stmt 0 view .LVU470
 1466 001a 8361     		str	r3, [r0, #24]
 644:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1467              		.loc 1 644 3 is_stmt 1 view .LVU471
 644:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1468              		.loc 1 644 28 is_stmt 0 view .LVU472
 1469 001c C361     		str	r3, [r0, #28]
 645:Core/Src/main.c ****   {
 1470              		.loc 1 645 3 is_stmt 1 view .LVU473
 645:Core/Src/main.c ****   {
 1471              		.loc 1 645 7 is_stmt 0 view .LVU474
 1472 001e FFF7FEFF 		bl	HAL_UART_Init
 1473              	.LVL49:
 653:Core/Src/main.c **** 
 1474              		.loc 1 653 1 view .LVU475
 1475 0022 08BD     		pop	{r3, pc}
 1476              	.L59:
 1477              		.align	2
 1478              	.L58:
 1479 0024 00000000 		.word	huart2
 1480 0028 00440040 		.word	1073759232
 1481              		.cfi_endproc
 1482              	.LFE142:
 1484              		.section	.text.Error_Handler,"ax",%progbits
 1485              		.align	1
 1486              		.global	Error_Handler
 1487              		.syntax unified
 1488              		.thumb
 1489              		.thumb_func
 1490              		.fpu fpv4-sp-d16
 1492              	Error_Handler:
 1493              	.LFB145:
 722:Core/Src/main.c **** 
 723:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 724:Core/Src/main.c **** 
 725:Core/Src/main.c **** /* USER CODE END 4 */
 726:Core/Src/main.c **** 
 727:Core/Src/main.c **** /**
 728:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 729:Core/Src/main.c ****   * @retval None
 730:Core/Src/main.c ****   */
 731:Core/Src/main.c **** void Error_Handler(void)
 732:Core/Src/main.c **** {
 1494              		.loc 1 732 1 is_stmt 1 view -0
 1495              		.cfi_startproc
 1496              		@ args = 0, pretend = 0, frame = 0
 1497              		@ frame_needed = 0, uses_anonymous_args = 0
 1498              		@ link register save eliminated.
 733:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 734:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 735:Core/Src/main.c **** 
 736:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 737:Core/Src/main.c **** }
 1499              		.loc 1 737 1 view .LVU477
ARM GAS  /tmp/ccX10RZP.s 			page 47


 1500 0000 7047     		bx	lr
 1501              		.cfi_endproc
 1502              	.LFE145:
 1504              		.comm	hdma_usart2_tx,96,4
 1505              		.comm	huart2,64,4
 1506              		.comm	htim5,64,4
 1507              		.comm	htim4,64,4
 1508              		.comm	htim1,64,4
 1509              		.comm	hspi2,88,4
 1510              		.comm	hspi1,88,4
 1511              		.comm	hdac,20,4
 1512              		.comm	hcan2,40,4
 1513              		.comm	hcan1,40,4
 1514              		.comm	hdma_adc2,96,4
 1515              		.comm	hdma_adc1,96,4
 1516              		.comm	hadc2,72,4
 1517              		.comm	hadc1,72,4
 1518              		.text
 1519              	.Letext0:
 1520              		.file 2 "/home/cahill/stm32cubeMx/install_bin/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/inc
 1521              		.file 3 "/home/cahill/stm32cubeMx/install_bin/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/inc
 1522              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1523              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1524              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1525              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1526              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1527              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1528              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1529              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1530              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1531              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1532              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1533              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 1534              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1535              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1536              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1537              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1538              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1539              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1540              		.file 22 "Core/Inc/mainLoop.h"
 1541              		.file 23 "<built-in>"
ARM GAS  /tmp/ccX10RZP.s 			page 48


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccX10RZP.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccX10RZP.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccX10RZP.s:198    .text.MX_GPIO_Init:00000000000000c4 $d
     /tmp/ccX10RZP.s:206    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccX10RZP.s:212    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccX10RZP.s:299    .text.MX_DMA_Init:0000000000000064 $d
     /tmp/ccX10RZP.s:304    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccX10RZP.s:310    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccX10RZP.s:374    .text.MX_SPI1_Init:0000000000000038 $d
                            *COM*:0000000000000058 hspi1
     /tmp/ccX10RZP.s:380    .text.MX_SPI2_Init:0000000000000000 $t
     /tmp/ccX10RZP.s:386    .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
     /tmp/ccX10RZP.s:450    .text.MX_SPI2_Init:0000000000000038 $d
                            *COM*:0000000000000058 hspi2
     /tmp/ccX10RZP.s:456    .text.MX_DAC_Init:0000000000000000 $t
     /tmp/ccX10RZP.s:462    .text.MX_DAC_Init:0000000000000000 MX_DAC_Init
     /tmp/ccX10RZP.s:514    .text.MX_DAC_Init:0000000000000028 $d
                            *COM*:0000000000000014 hdac
     /tmp/ccX10RZP.s:520    .text.MX_TIM4_Init:0000000000000000 $t
     /tmp/ccX10RZP.s:526    .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/ccX10RZP.s:620    .text.MX_TIM4_Init:0000000000000054 $d
                            *COM*:0000000000000040 htim4
     /tmp/ccX10RZP.s:626    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccX10RZP.s:632    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccX10RZP.s:729    .text.MX_TIM1_Init:0000000000000054 $d
                            *COM*:0000000000000040 htim1
     /tmp/ccX10RZP.s:735    .text.MX_TIM5_Init:0000000000000000 $t
     /tmp/ccX10RZP.s:741    .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
     /tmp/ccX10RZP.s:824    .text.MX_TIM5_Init:000000000000004c $d
                            *COM*:0000000000000040 htim5
     /tmp/ccX10RZP.s:830    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccX10RZP.s:836    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccX10RZP.s:929    .text.MX_ADC1_Init:0000000000000050 $d
                            *COM*:0000000000000048 hadc1
     /tmp/ccX10RZP.s:936    .text.MX_ADC2_Init:0000000000000000 $t
     /tmp/ccX10RZP.s:942    .text.MX_ADC2_Init:0000000000000000 MX_ADC2_Init
     /tmp/ccX10RZP.s:1035   .text.MX_ADC2_Init:0000000000000050 $d
                            *COM*:0000000000000048 hadc2
     /tmp/ccX10RZP.s:1042   .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccX10RZP.s:1048   .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccX10RZP.s:1110   .text.MX_CAN1_Init:0000000000000030 $d
                            *COM*:0000000000000028 hcan1
     /tmp/ccX10RZP.s:1116   .text.MX_CAN2_Init:0000000000000000 $t
     /tmp/ccX10RZP.s:1122   .text.MX_CAN2_Init:0000000000000000 MX_CAN2_Init
     /tmp/ccX10RZP.s:1184   .text.MX_CAN2_Init:0000000000000030 $d
                            *COM*:0000000000000028 hcan2
     /tmp/ccX10RZP.s:1190   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccX10RZP.s:1197   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccX10RZP.s:1345   .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccX10RZP.s:1351   .text.main:0000000000000000 $t
     /tmp/ccX10RZP.s:1358   .text.main:0000000000000000 main
     /tmp/ccX10RZP.s:1423   .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccX10RZP.s:1430   .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccX10RZP.s:1479   .text.MX_USART2_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart2
ARM GAS  /tmp/ccX10RZP.s 			page 49


     /tmp/ccX10RZP.s:1485   .text.Error_Handler:0000000000000000 $t
     /tmp/ccX10RZP.s:1492   .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000060 hdma_usart2_tx
                            *COM*:0000000000000060 hdma_adc2
                            *COM*:0000000000000060 hdma_adc1

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_SPI_Init
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_SlaveConfigSynchro
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_ConfigClockSource
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CAN_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_MCOConfig
HAL_Init
mainLoop1
HAL_UART_Init
