ARM GAS  /tmp/ccIT3zqP.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB130:
  28              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f4xx_it.c ****   *
  17:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f4xx_it.c ****   */
  19:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f4xx_it.c **** 
  21:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f4xx_it.c **** #include "main.h"
  23:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f4xx_it.c **** 
  28:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccIT3zqP.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f4xx_it.c **** 
  36:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f4xx_it.c **** 
  38:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f4xx_it.c **** 
  41:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f4xx_it.c **** 
  43:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f4xx_it.c **** 
  46:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f4xx_it.c **** 
  51:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f4xx_it.c **** 
  53:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f4xx_it.c **** 
  56:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f4xx_it.c **** 
  58:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  60:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc2;
  61:Core/Src/stm32f4xx_it.c **** extern CAN_HandleTypeDef hcan1;
  62:Core/Src/stm32f4xx_it.c **** extern CAN_HandleTypeDef hcan2;
  63:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim5;
  64:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_tx;
  65:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart2;
  66:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  67:Core/Src/stm32f4xx_it.c **** 
  68:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  69:Core/Src/stm32f4xx_it.c **** 
  70:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  71:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  72:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  73:Core/Src/stm32f4xx_it.c **** /**
  74:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  75:Core/Src/stm32f4xx_it.c ****   */
  76:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  77:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 77 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  78:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  79:Core/Src/stm32f4xx_it.c **** 
  80:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  81:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  82:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccIT3zqP.s 			page 3


  83:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Core/Src/stm32f4xx_it.c **** }
  34              		.loc 1 84 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE130:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB131:
  85:Core/Src/stm32f4xx_it.c **** 
  86:Core/Src/stm32f4xx_it.c **** /**
  87:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Core/Src/stm32f4xx_it.c ****   */
  89:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  90:Core/Src/stm32f4xx_it.c **** {
  49              		.loc 1 90 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
  91:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Core/Src/stm32f4xx_it.c **** 
  93:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Core/Src/stm32f4xx_it.c ****   while (1)
  56              		.loc 1 94 3 discriminator 1 view .LVU3
  95:Core/Src/stm32f4xx_it.c ****   {
  96:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Core/Src/stm32f4xx_it.c ****   }
  57              		.loc 1 98 3 discriminator 1 view .LVU4
  94:Core/Src/stm32f4xx_it.c ****   {
  58              		.loc 1 94 9 discriminator 1 view .LVU5
  59 0000 FEE7     		b	.L3
  60              		.cfi_endproc
  61              	.LFE131:
  63              		.section	.text.MemManage_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	MemManage_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	MemManage_Handler:
  72              	.LFB132:
  99:Core/Src/stm32f4xx_it.c **** }
 100:Core/Src/stm32f4xx_it.c **** 
 101:Core/Src/stm32f4xx_it.c **** /**
 102:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 103:Core/Src/stm32f4xx_it.c ****   */
ARM GAS  /tmp/ccIT3zqP.s 			page 4


 104:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 105:Core/Src/stm32f4xx_it.c **** {
  73              		.loc 1 105 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L5:
 106:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f4xx_it.c **** 
 108:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f4xx_it.c ****   while (1)
  80              		.loc 1 109 3 discriminator 1 view .LVU7
 110:Core/Src/stm32f4xx_it.c ****   {
 111:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f4xx_it.c ****   }
  81              		.loc 1 113 3 discriminator 1 view .LVU8
 109:Core/Src/stm32f4xx_it.c ****   {
  82              		.loc 1 109 9 discriminator 1 view .LVU9
  83 0000 FEE7     		b	.L5
  84              		.cfi_endproc
  85              	.LFE132:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	BusFault_Handler:
  96              	.LFB133:
 114:Core/Src/stm32f4xx_it.c **** }
 115:Core/Src/stm32f4xx_it.c **** 
 116:Core/Src/stm32f4xx_it.c **** /**
 117:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 118:Core/Src/stm32f4xx_it.c ****   */
 119:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 120:Core/Src/stm32f4xx_it.c **** {
  97              		.loc 1 120 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L7:
 121:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 122:Core/Src/stm32f4xx_it.c **** 
 123:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 124:Core/Src/stm32f4xx_it.c ****   while (1)
 104              		.loc 1 124 3 discriminator 1 view .LVU11
 125:Core/Src/stm32f4xx_it.c ****   {
 126:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 127:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 128:Core/Src/stm32f4xx_it.c ****   }
 105              		.loc 1 128 3 discriminator 1 view .LVU12
ARM GAS  /tmp/ccIT3zqP.s 			page 5


 124:Core/Src/stm32f4xx_it.c ****   {
 106              		.loc 1 124 9 discriminator 1 view .LVU13
 107 0000 FEE7     		b	.L7
 108              		.cfi_endproc
 109              	.LFE133:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	UsageFault_Handler:
 120              	.LFB134:
 129:Core/Src/stm32f4xx_it.c **** }
 130:Core/Src/stm32f4xx_it.c **** 
 131:Core/Src/stm32f4xx_it.c **** /**
 132:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:Core/Src/stm32f4xx_it.c ****   */
 134:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 135:Core/Src/stm32f4xx_it.c **** {
 121              		.loc 1 135 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L9:
 136:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:Core/Src/stm32f4xx_it.c **** 
 138:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:Core/Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 139 3 discriminator 1 view .LVU15
 140:Core/Src/stm32f4xx_it.c ****   {
 141:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32f4xx_it.c ****   }
 129              		.loc 1 143 3 discriminator 1 view .LVU16
 139:Core/Src/stm32f4xx_it.c ****   {
 130              		.loc 1 139 9 discriminator 1 view .LVU17
 131 0000 FEE7     		b	.L9
 132              		.cfi_endproc
 133              	.LFE134:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	SVC_Handler:
 144              	.LFB135:
 144:Core/Src/stm32f4xx_it.c **** }
 145:Core/Src/stm32f4xx_it.c **** 
 146:Core/Src/stm32f4xx_it.c **** /**
 147:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 148:Core/Src/stm32f4xx_it.c ****   */
ARM GAS  /tmp/ccIT3zqP.s 			page 6


 149:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 150:Core/Src/stm32f4xx_it.c **** {
 145              		.loc 1 150 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 151:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 152:Core/Src/stm32f4xx_it.c **** 
 153:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 154:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 155:Core/Src/stm32f4xx_it.c **** 
 156:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 157:Core/Src/stm32f4xx_it.c **** }
 150              		.loc 1 157 1 view .LVU19
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE135:
 155              		.section	.text.DebugMon_Handler,"ax",%progbits
 156              		.align	1
 157              		.global	DebugMon_Handler
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	DebugMon_Handler:
 164              	.LFB136:
 158:Core/Src/stm32f4xx_it.c **** 
 159:Core/Src/stm32f4xx_it.c **** /**
 160:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 161:Core/Src/stm32f4xx_it.c ****   */
 162:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 163:Core/Src/stm32f4xx_it.c **** {
 165              		.loc 1 163 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 164:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 165:Core/Src/stm32f4xx_it.c **** 
 166:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 167:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 168:Core/Src/stm32f4xx_it.c **** 
 169:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 170:Core/Src/stm32f4xx_it.c **** }
 170              		.loc 1 170 1 view .LVU21
 171 0000 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE136:
 175              		.section	.text.PendSV_Handler,"ax",%progbits
 176              		.align	1
 177              		.global	PendSV_Handler
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	PendSV_Handler:
ARM GAS  /tmp/ccIT3zqP.s 			page 7


 184              	.LFB137:
 171:Core/Src/stm32f4xx_it.c **** 
 172:Core/Src/stm32f4xx_it.c **** /**
 173:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 174:Core/Src/stm32f4xx_it.c ****   */
 175:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 176:Core/Src/stm32f4xx_it.c **** {
 185              		.loc 1 176 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 177:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 178:Core/Src/stm32f4xx_it.c **** 
 179:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 180:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 181:Core/Src/stm32f4xx_it.c **** 
 182:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 183:Core/Src/stm32f4xx_it.c **** }
 190              		.loc 1 183 1 view .LVU23
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE137:
 195              		.section	.text.SysTick_Handler,"ax",%progbits
 196              		.align	1
 197              		.global	SysTick_Handler
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	SysTick_Handler:
 204              	.LFB138:
 184:Core/Src/stm32f4xx_it.c **** 
 185:Core/Src/stm32f4xx_it.c **** /**
 186:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 187:Core/Src/stm32f4xx_it.c ****   */
 188:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 189:Core/Src/stm32f4xx_it.c **** {
 205              		.loc 1 189 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 08B5     		push	{r3, lr}
 210              	.LCFI0:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
 190:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 191:Core/Src/stm32f4xx_it.c **** 
 192:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 193:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
 214              		.loc 1 193 3 view .LVU25
 215 0002 FFF7FEFF 		bl	HAL_IncTick
 216              	.LVL0:
 194:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 195:Core/Src/stm32f4xx_it.c **** 
 196:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
ARM GAS  /tmp/ccIT3zqP.s 			page 8


 197:Core/Src/stm32f4xx_it.c **** }
 217              		.loc 1 197 1 is_stmt 0 view .LVU26
 218 0006 08BD     		pop	{r3, pc}
 219              		.cfi_endproc
 220              	.LFE138:
 222              		.section	.text.DMA1_Stream6_IRQHandler,"ax",%progbits
 223              		.align	1
 224              		.global	DMA1_Stream6_IRQHandler
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	DMA1_Stream6_IRQHandler:
 231              	.LFB139:
 198:Core/Src/stm32f4xx_it.c **** 
 199:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 200:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 201:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 202:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 203:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 204:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 205:Core/Src/stm32f4xx_it.c **** 
 206:Core/Src/stm32f4xx_it.c **** /**
 207:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream6 global interrupt.
 208:Core/Src/stm32f4xx_it.c ****   */
 209:Core/Src/stm32f4xx_it.c **** void DMA1_Stream6_IRQHandler(void)
 210:Core/Src/stm32f4xx_it.c **** {
 232              		.loc 1 210 1 is_stmt 1 view -0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 08B5     		push	{r3, lr}
 237              	.LCFI1:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 3, -8
 240              		.cfi_offset 14, -4
 211:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 0 */
 212:Core/Src/stm32f4xx_it.c **** 
 213:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 0 */
 214:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_tx);
 241              		.loc 1 214 3 view .LVU28
 242 0002 0248     		ldr	r0, .L17
 243 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 244              	.LVL1:
 215:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 1 */
 216:Core/Src/stm32f4xx_it.c **** 
 217:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 1 */
 218:Core/Src/stm32f4xx_it.c **** }
 245              		.loc 1 218 1 is_stmt 0 view .LVU29
 246 0008 08BD     		pop	{r3, pc}
 247              	.L18:
 248 000a 00BF     		.align	2
 249              	.L17:
 250 000c 00000000 		.word	hdma_usart2_tx
 251              		.cfi_endproc
 252              	.LFE139:
 254              		.section	.text.CAN1_RX1_IRQHandler,"ax",%progbits
ARM GAS  /tmp/ccIT3zqP.s 			page 9


 255              		.align	1
 256              		.global	CAN1_RX1_IRQHandler
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu fpv4-sp-d16
 262              	CAN1_RX1_IRQHandler:
 263              	.LFB140:
 219:Core/Src/stm32f4xx_it.c **** 
 220:Core/Src/stm32f4xx_it.c **** /**
 221:Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 RX1 interrupt.
 222:Core/Src/stm32f4xx_it.c ****   */
 223:Core/Src/stm32f4xx_it.c **** void CAN1_RX1_IRQHandler(void)
 224:Core/Src/stm32f4xx_it.c **** {
 264              		.loc 1 224 1 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 08B5     		push	{r3, lr}
 269              	.LCFI2:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 3, -8
 272              		.cfi_offset 14, -4
 225:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX1_IRQn 0 */
 226:Core/Src/stm32f4xx_it.c **** 
 227:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX1_IRQn 0 */
 228:Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 273              		.loc 1 228 3 view .LVU31
 274 0002 0248     		ldr	r0, .L21
 275 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 276              	.LVL2:
 229:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX1_IRQn 1 */
 230:Core/Src/stm32f4xx_it.c **** 
 231:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX1_IRQn 1 */
 232:Core/Src/stm32f4xx_it.c **** }
 277              		.loc 1 232 1 is_stmt 0 view .LVU32
 278 0008 08BD     		pop	{r3, pc}
 279              	.L22:
 280 000a 00BF     		.align	2
 281              	.L21:
 282 000c 00000000 		.word	hcan1
 283              		.cfi_endproc
 284              	.LFE140:
 286              		.section	.text.USART2_IRQHandler,"ax",%progbits
 287              		.align	1
 288              		.global	USART2_IRQHandler
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	USART2_IRQHandler:
 295              	.LFB141:
 233:Core/Src/stm32f4xx_it.c **** 
 234:Core/Src/stm32f4xx_it.c **** /**
 235:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART2 global interrupt.
 236:Core/Src/stm32f4xx_it.c ****   */
 237:Core/Src/stm32f4xx_it.c **** void USART2_IRQHandler(void)
ARM GAS  /tmp/ccIT3zqP.s 			page 10


 238:Core/Src/stm32f4xx_it.c **** {
 296              		.loc 1 238 1 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300 0000 08B5     		push	{r3, lr}
 301              	.LCFI3:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 239:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 240:Core/Src/stm32f4xx_it.c **** 
 241:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 242:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 305              		.loc 1 242 3 view .LVU34
 306 0002 0248     		ldr	r0, .L25
 307 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 308              	.LVL3:
 243:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 244:Core/Src/stm32f4xx_it.c **** 
 245:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 246:Core/Src/stm32f4xx_it.c **** }
 309              		.loc 1 246 1 is_stmt 0 view .LVU35
 310 0008 08BD     		pop	{r3, pc}
 311              	.L26:
 312 000a 00BF     		.align	2
 313              	.L25:
 314 000c 00000000 		.word	huart2
 315              		.cfi_endproc
 316              	.LFE141:
 318              		.section	.text.TIM5_IRQHandler,"ax",%progbits
 319              		.align	1
 320              		.global	TIM5_IRQHandler
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 324              		.fpu fpv4-sp-d16
 326              	TIM5_IRQHandler:
 327              	.LFB142:
 247:Core/Src/stm32f4xx_it.c **** 
 248:Core/Src/stm32f4xx_it.c **** /**
 249:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM5 global interrupt.
 250:Core/Src/stm32f4xx_it.c ****   */
 251:Core/Src/stm32f4xx_it.c **** void TIM5_IRQHandler(void)
 252:Core/Src/stm32f4xx_it.c **** {
 328              		.loc 1 252 1 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332 0000 08B5     		push	{r3, lr}
 333              	.LCFI4:
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 3, -8
 336              		.cfi_offset 14, -4
 253:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 0 */
 254:Core/Src/stm32f4xx_it.c **** 
 255:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM5_IRQn 0 */
ARM GAS  /tmp/ccIT3zqP.s 			page 11


 256:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim5);
 337              		.loc 1 256 3 view .LVU37
 338 0002 0248     		ldr	r0, .L29
 339 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 340              	.LVL4:
 257:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 1 */
 258:Core/Src/stm32f4xx_it.c **** 
 259:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM5_IRQn 1 */
 260:Core/Src/stm32f4xx_it.c **** }
 341              		.loc 1 260 1 is_stmt 0 view .LVU38
 342 0008 08BD     		pop	{r3, pc}
 343              	.L30:
 344 000a 00BF     		.align	2
 345              	.L29:
 346 000c 00000000 		.word	htim5
 347              		.cfi_endproc
 348              	.LFE142:
 350              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 351              		.align	1
 352              		.global	DMA2_Stream0_IRQHandler
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 356              		.fpu fpv4-sp-d16
 358              	DMA2_Stream0_IRQHandler:
 359              	.LFB143:
 261:Core/Src/stm32f4xx_it.c **** 
 262:Core/Src/stm32f4xx_it.c **** /**
 263:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 264:Core/Src/stm32f4xx_it.c ****   */
 265:Core/Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 266:Core/Src/stm32f4xx_it.c **** {
 360              		.loc 1 266 1 is_stmt 1 view -0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364 0000 08B5     		push	{r3, lr}
 365              	.LCFI5:
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 3, -8
 368              		.cfi_offset 14, -4
 267:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 268:Core/Src/stm32f4xx_it.c **** 
 269:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 270:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 369              		.loc 1 270 3 view .LVU40
 370 0002 0248     		ldr	r0, .L33
 371 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 372              	.LVL5:
 271:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
 272:Core/Src/stm32f4xx_it.c **** 
 273:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
 274:Core/Src/stm32f4xx_it.c **** }
 373              		.loc 1 274 1 is_stmt 0 view .LVU41
 374 0008 08BD     		pop	{r3, pc}
 375              	.L34:
 376 000a 00BF     		.align	2
ARM GAS  /tmp/ccIT3zqP.s 			page 12


 377              	.L33:
 378 000c 00000000 		.word	hdma_adc1
 379              		.cfi_endproc
 380              	.LFE143:
 382              		.section	.text.DMA2_Stream2_IRQHandler,"ax",%progbits
 383              		.align	1
 384              		.global	DMA2_Stream2_IRQHandler
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 388              		.fpu fpv4-sp-d16
 390              	DMA2_Stream2_IRQHandler:
 391              	.LFB144:
 275:Core/Src/stm32f4xx_it.c **** 
 276:Core/Src/stm32f4xx_it.c **** /**
 277:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream2 global interrupt.
 278:Core/Src/stm32f4xx_it.c ****   */
 279:Core/Src/stm32f4xx_it.c **** void DMA2_Stream2_IRQHandler(void)
 280:Core/Src/stm32f4xx_it.c **** {
 392              		.loc 1 280 1 is_stmt 1 view -0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396 0000 08B5     		push	{r3, lr}
 397              	.LCFI6:
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 3, -8
 400              		.cfi_offset 14, -4
 281:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */
 282:Core/Src/stm32f4xx_it.c **** 
 283:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 0 */
 284:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc2);
 401              		.loc 1 284 3 view .LVU43
 402 0002 0248     		ldr	r0, .L37
 403 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 404              	.LVL6:
 285:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */
 286:Core/Src/stm32f4xx_it.c **** 
 287:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 1 */
 288:Core/Src/stm32f4xx_it.c **** }
 405              		.loc 1 288 1 is_stmt 0 view .LVU44
 406 0008 08BD     		pop	{r3, pc}
 407              	.L38:
 408 000a 00BF     		.align	2
 409              	.L37:
 410 000c 00000000 		.word	hdma_adc2
 411              		.cfi_endproc
 412              	.LFE144:
 414              		.section	.text.CAN2_RX0_IRQHandler,"ax",%progbits
 415              		.align	1
 416              		.global	CAN2_RX0_IRQHandler
 417              		.syntax unified
 418              		.thumb
 419              		.thumb_func
 420              		.fpu fpv4-sp-d16
 422              	CAN2_RX0_IRQHandler:
 423              	.LFB145:
ARM GAS  /tmp/ccIT3zqP.s 			page 13


 289:Core/Src/stm32f4xx_it.c **** 
 290:Core/Src/stm32f4xx_it.c **** /**
 291:Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN2 RX0 interrupts.
 292:Core/Src/stm32f4xx_it.c ****   */
 293:Core/Src/stm32f4xx_it.c **** void CAN2_RX0_IRQHandler(void)
 294:Core/Src/stm32f4xx_it.c **** {
 424              		.loc 1 294 1 is_stmt 1 view -0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428 0000 08B5     		push	{r3, lr}
 429              	.LCFI7:
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 3, -8
 432              		.cfi_offset 14, -4
 295:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_RX0_IRQn 0 */
 296:Core/Src/stm32f4xx_it.c **** 
 297:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_RX0_IRQn 0 */
 298:Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan2);
 433              		.loc 1 298 3 view .LVU46
 434 0002 0248     		ldr	r0, .L41
 435 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 436              	.LVL7:
 299:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_RX0_IRQn 1 */
 300:Core/Src/stm32f4xx_it.c **** 
 301:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_RX0_IRQn 1 */
 302:Core/Src/stm32f4xx_it.c **** }
 437              		.loc 1 302 1 is_stmt 0 view .LVU47
 438 0008 08BD     		pop	{r3, pc}
 439              	.L42:
 440 000a 00BF     		.align	2
 441              	.L41:
 442 000c 00000000 		.word	hcan2
 443              		.cfi_endproc
 444              	.LFE145:
 446              		.text
 447              	.Letext0:
 448              		.file 2 "/home/cahill/stm32cubeMx/install_bin/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/inc
 449              		.file 3 "/home/cahill/stm32cubeMx/install_bin/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/inc
 450              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 451              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 452              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 453              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 454              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 455              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 456              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 457              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 458              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 459              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccIT3zqP.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccIT3zqP.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccIT3zqP.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccIT3zqP.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccIT3zqP.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccIT3zqP.s:64     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccIT3zqP.s:71     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccIT3zqP.s:88     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccIT3zqP.s:95     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccIT3zqP.s:112    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccIT3zqP.s:119    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccIT3zqP.s:136    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccIT3zqP.s:143    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccIT3zqP.s:156    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccIT3zqP.s:163    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccIT3zqP.s:176    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccIT3zqP.s:183    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccIT3zqP.s:196    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccIT3zqP.s:203    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccIT3zqP.s:223    .text.DMA1_Stream6_IRQHandler:0000000000000000 $t
     /tmp/ccIT3zqP.s:230    .text.DMA1_Stream6_IRQHandler:0000000000000000 DMA1_Stream6_IRQHandler
     /tmp/ccIT3zqP.s:250    .text.DMA1_Stream6_IRQHandler:000000000000000c $d
     /tmp/ccIT3zqP.s:255    .text.CAN1_RX1_IRQHandler:0000000000000000 $t
     /tmp/ccIT3zqP.s:262    .text.CAN1_RX1_IRQHandler:0000000000000000 CAN1_RX1_IRQHandler
     /tmp/ccIT3zqP.s:282    .text.CAN1_RX1_IRQHandler:000000000000000c $d
     /tmp/ccIT3zqP.s:287    .text.USART2_IRQHandler:0000000000000000 $t
     /tmp/ccIT3zqP.s:294    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
     /tmp/ccIT3zqP.s:314    .text.USART2_IRQHandler:000000000000000c $d
     /tmp/ccIT3zqP.s:319    .text.TIM5_IRQHandler:0000000000000000 $t
     /tmp/ccIT3zqP.s:326    .text.TIM5_IRQHandler:0000000000000000 TIM5_IRQHandler
     /tmp/ccIT3zqP.s:346    .text.TIM5_IRQHandler:000000000000000c $d
     /tmp/ccIT3zqP.s:351    .text.DMA2_Stream0_IRQHandler:0000000000000000 $t
     /tmp/ccIT3zqP.s:358    .text.DMA2_Stream0_IRQHandler:0000000000000000 DMA2_Stream0_IRQHandler
     /tmp/ccIT3zqP.s:378    .text.DMA2_Stream0_IRQHandler:000000000000000c $d
     /tmp/ccIT3zqP.s:383    .text.DMA2_Stream2_IRQHandler:0000000000000000 $t
     /tmp/ccIT3zqP.s:390    .text.DMA2_Stream2_IRQHandler:0000000000000000 DMA2_Stream2_IRQHandler
     /tmp/ccIT3zqP.s:410    .text.DMA2_Stream2_IRQHandler:000000000000000c $d
     /tmp/ccIT3zqP.s:415    .text.CAN2_RX0_IRQHandler:0000000000000000 $t
     /tmp/ccIT3zqP.s:422    .text.CAN2_RX0_IRQHandler:0000000000000000 CAN2_RX0_IRQHandler
     /tmp/ccIT3zqP.s:442    .text.CAN2_RX0_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_usart2_tx
HAL_CAN_IRQHandler
hcan1
HAL_UART_IRQHandler
huart2
HAL_TIM_IRQHandler
htim5
hdma_adc1
hdma_adc2
hcan2
